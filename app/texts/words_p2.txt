INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('body', E' is the container of all the elements into the website', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('h1', E'is the biggest title on the website', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('label', E'is the text that to add in the website, different from the title, is normal text', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('br', E'with this tool, you can break to the next line ', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('button', E'with this tool, you create buttons on the website ', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('div', E'a container. You can add different elements into it ', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('HTML', E'hypertext markup language. Is the core language that provides the basis of a website because You can use it to structure content on a web page', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tags', E'you can structure the content (text, images, forms, etc) using it (<>)', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('a', E'with it, you create a link that let you check something outside of your website', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('img', E'let you add an image on your website\n', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES (' p', E'this tag creates a paragraph for you', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('index.html', E'is the name that receives your homepage html file index because is the main directory of the websites ending in.com', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<html>', E'if you add this word into tags open the root tag of our documents, you always need have 2 of this because ti surrounding everything else', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('!DOCTIPE HTML', E'you add this tag when started an html files\n', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('html head', E'into this tag you add the other tags who modify elements that are showing in the tab of our website', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('title', E'let you change the name of your website in the tab', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('inspect', E' if you right-click with the mouse this tool lets you review the html outline in the browser', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('strong', E'this tag makes something bold, like titles', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('em', E'this tag lets you italicize something', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('small', E'this tag made a word a slightly smaller', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('heading tags', E'these tags allow us to create six different types of titles (heading tags) with hierarchies. The h1 is the largest and the h6 the smallest', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ul', E'this tag creates an unordered list. The list doesnÂ´t have a numeric or alphabetic order, just bullet points for dividing each element and is a wrapper for li tags', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('li', E'this tag lets you add the element for a list', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ol', E'with this tag you can create an ordered list, like using numbers for dividing each element and is a wrapper for li tags', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('span', E'this tag works similarly to label tag because let you add normal text on the website', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hr', E'is an individual tag and create a horizontal line at the bottom of your website, and could be used to separate content ', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('img scr', E'when you add the attribute source (scr) into the img tag that is going to tell the browser which that we want to show in the browser', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('img alt*=', E'you can use this attribute to describe the image in the case that you or someone else needed know more about it', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('blockquotes', E'his tag is used to quote something from another source or another website ', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('blockquotes cite', E'when you add the attribute cite to blockquotes create a tool that is going to get where you got information on these quotes from what was the original source', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('p style=', E'when in the attribute style you can change the physical characteristics of a text, like the color', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('html ! - - ', E'this tag you create comments for organizing or remember a thing of your project', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('form action=', E'this tells the browser what to do when we submit a form ', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('form', E'this tag where you put all of your input fields', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('input type=', E' is a single tag that creates different types of the element could be edited by the user when he into an information', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('label for=', E'with the attribute for, the label tag could connect the text with the input type', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('nav', E' is the page nav', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('svg', E'images were you can modify the color', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Fontawesome', E'is a website where you can found svg images', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('section', E'create divisions into the website', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('main', E'this tag let you create elements that appear in the most part of the website', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('footer', E'this tag let you create elements that appear in the last part of the website', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('input name', E'let you grouping different input fields together', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('input value', E'is the value associated with the input', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select', E'is a select tag that you create a drop-down list', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('option value', E'is the value of the form field. let you create different options inside the selec', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('textarea', E'this tag lets you create a text area on your website that could be used for the users to write comments or biographies. Create a big text box', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('placeholder', E'allows you to add a text in a text box that tells the user what type of text to write, it is a text with little opacity', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('link rel', E'used to communicate the relationship between several pages to search engines', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('href', E'this tag is used to indicate the URL pointed to by a link or a file in any folder you have', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<section>', E'defines a certain section of a webpage (blog list contact info)', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<articles>', E'defines a bit of content which makes up an article (like a blog post)', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<aside>', E'defines some content related to something else (similar blogs)', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<header>', E' for the header of the website (contains the nav, title, etc)', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<nav>', E'represents a section of a page whose purpose is to provide navigation links (menus, tables of contents and indexes)', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('lol', E'lol', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('background-color', E'with this, you can select and change the color of the background ', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('color', E'let you change the color of the text', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('margin-left', E'let you change the margin of the left side in pixels', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('font-size', E'used this to change the size of the font, in pixels', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('padding-left', E'is the distance between the father element and the child, in this case in the left side ', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border-width', E'is the borderline of the button ', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border-color', E'is the color of the borderline of the button', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('width', E'is the width of the border ', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('height', E'is the height of the border', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-align', E'is the position, or align, of the text ', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Css', E'cascading style sheets. Is a language that works with html and let you change the design of your website for it looks better', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('class', E'is a name to modify the styles all the items with this class', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Ctrl K C', E'that let you comment into css', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES (' Ctrl K U', E'that let uncomment a section into css', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('* some_code */', E'this let you create a comment into css', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('.selector1, .selector2', E'I can use this when I wanted to affect the properties of two selectors at the same time', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('selector1 > *', E'this tool affect the properties of the children', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('selector1 *', E'this tool affect the properties of all the items inside', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-decoration', E'this is going to determinate what type of element you can add to the text, like an underline, or other things', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('font-family', E'let you determine the typography of a text or word', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('line-height', E'set the vertical spacing between different lines of text. you can modify it in pixels', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('letter-spacing', E'is the space between each individual letter. you can modify it in pixels', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('column-counts', E'split a text up into columns, and also you decided what number of columns create', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('column-gap', E'this tool makes the gap between columns. You need to write a number in pixels for it', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border-style', E'this tool lets you add a special appearance to the border of a text or element', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border', E'this property let you define 3 values: the color, the width, and the style in the border', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border-bottom', E'let you define 3 values: the color, the width, and the style in the downside of the border', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border-left', E'let you define 3 values: the color, the width, and the style in the left side of the border', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('list-style-type', E'with this tool, you can modify the style of the discs of a list, or you can hide them', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-shadow', E' this tool let you add shadow to a text, but for that, you can define 3 values: the color, and set the size of the shadow in the right side and downside', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hex codes', E'is a color code that starts with a # and then itÂ´s followed by six digits that could be numbered (0-9) or letters (A-F). With them, you can create any color', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('RGB', E'(red, green, blue) is a chromatic color system that we use to websites or web projects that work with the additive color synthesis', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('display', E'This element lets you set the internal (layout) and external (flow layout) layout types of an element', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('margin', E'let you specify the margin, or space around the outside of the elements, like a border', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('padding', E'this property sets the space between the element''s content and its border. Negative values are not allowed\n', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Flexbox', E'flexible box module. Is a one-dimensional layout model. this makes it easy to design flexible and efficient layouts, distribute space among items, and control their alignment in a given container.', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('block', E'is used for sections on a webpage.\n', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('inline', E'is used for text', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('table', E' is used for two-dimensional table data', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('positioned', E'is for the explicit position of an element', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('flex container', E' is a parent container (like a div)', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('flex items', E'are the immediate children elements', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('main axis', E'by default, this elements runs left to right ', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cross axis', E' these elements are perpendicular to the main axis and run top to bottom ', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('flex-direction', E' it defines the direction in which the flex items are placed in the container ', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('display: flex: ', E'let us organize the elements into a row, or make flex items display inline', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('display: inline-flex', E'It makes the flex container display inline', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('flex-wrap', E'the property specifies whether child elements are required to stay on the same line or can flow on multiple lines(no wrap, wrap-reverse)', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('nowrap', E'the elements are distributed on a single line', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('wrap-reverse', E'the flexible elements are organized in several lines but in the opposite direction, placing the last element first.', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('wrap', E'the flex elements are organized in several lines', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('flex-flow', E'it is a property with which you can use the individual flex-direction and flex-wrap properties.', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('justify-content', E' it defines how the browser distributes the space between and around the flex items', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('flex-start', E'Items are placed starting from the beginning. The margin of the first item is aligned flush with the edge of the beginning of the line and each following item is aligned the same', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('flex-end', E'Flex items are placed starting from the end. The margin of the last item is aligned flush with the edge of the end of the line', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('space-between', E' Items are evenly distributed on the line. The elements are equally distributed in the space they have.', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('space-around', E'the items are evenly aligned in such a way that the space between each element is the same, it also gives space at the beginning and end that is equivalent to half of the other spaces', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('align-items', E'This tool indicates the alignment of an element within the block that contains it.', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('stretch', E' it is the default value, and it makes the elements stretched so that they occupy as much space as possible, keeping their width and height restrictions.', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('baseline', E'All elements are adjusted so that their bases are aligned', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('align-content', E'aline the content along the cross axis.', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('order ', E'specifies the order used to arrange the items in their container. The elements will be arranged in ascending order according to the numerical value that is given.', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('flex-grow', E'This property specifies the growth factor of an element, in its main direction.', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('flex Shrink', E'this defines the ability for a flex item to shrink if necessary ', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('flex-basis', E'this property specifies the initial size of a flex item before the extra space in the container is distributed, and sometimes replace width.', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('max-width', E'is a property that prevents the used value of the width property from becoming larger than the value specified by this tool.', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Grid', E'works with display property, and can define columns and rows in web page layout', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grid-template-columns', E'is a property that let you define the size of each column inside this property ', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grid-template-rows', E'is a property is a property that let you define the size of each row inside this property ', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grid-auto-rows', E'This property specifies the size of a new row created from the value assigned to it.', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grid-auto-rows :minmax ', E'functional notation that defines the size range, this size must be greater than or equal to the minimum and less than or equal to the maximum', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Grid-column-gap', E'is a property that sets the size of the gap between an element''s columns.', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grid-gap', E'this property sets the gaps between rows and columns. It is a shorthand for( row-gap )and (column-gap)', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grid-column-start', E'this property specifies a grid itemâs start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement.', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grid-column-end', E'this property specifies a grid items end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement.', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Git', E'is a program to save projects online', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='git' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES (' clone', E'clone a git project', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='git' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cd', E'to move to another folder in your computer', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='git' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('status', E'this shows the changes in your project', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='git' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('add', E'this is a save necessary before push', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='git' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('commit -m', E'is a message for explaining your changes', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='git' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('push', E'save your changes online', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='git' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('githack', E'is a website to publish an html pages', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='git' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('README', E'a file to explain your project', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='git' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cd ..', E'go back one step in the folder three', NOW(), NOW(), (select id from users where email='jenny' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='git' and u0.email='jenny' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('console.log()', E'print content', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('window.location.href = ''<link>''', E'redirects to the link <link>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('let', E'similar to var but more stable and less unpredictable, has a scope more defined', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('const', E'similar to ''let'' but doesn''t allow to override the variable. In case of array doesnt allow = operation, but you can override any position of the array, for example if ''list=[1,2,3]'' you can do ''list[0]=4'' ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('forEach ', E'you can move through a list using the command, for example ''list.forEach((item,index)=>list[index]=item*2);'' in that way you multiply by two each item of the list', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Object.freeze(<variable>)', E'use this syntax to freeze any change of referential variables. For example, to make that items or properties of a list, a class instance of an object cannot be modified.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('(param1, param2...) => <code>;', E'use the arrow syntax to write a function in only one line', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('function(<param>=<defaut>)', E'Define a default value for the param of a function', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('function(...<variable>)', E'On this way, you can pass any number of parameters to this function, an all the parameters will be converted to a list with name <variable>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<var1> = [...<var2>]', E'assign a copy of all the elements of <var2> in <var1>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{<param1>, <param2>} = <object>', E'with this syntax create the variables <param1> and <param2> with the values of <param1> and <param2> which must exist in the object <object>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{<param1>: <var1>, <param2>: <var2>} = <object>', E'create the variables <var1> and <var2> using the params <param1> and <param2> from object <object>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{ <objectParam>: { <param1>, <param2>}} = <object>', E'create variables <param1> and <param2> using the params of the same name in <objectParam> which is a param of object <object>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{ <objectParam>: { <param1>: <var1>, <param2>: <var2>}} = <object>', E'create variables <var1> and <var2> using the value of params <param1>, <param2> of <objectParam> which is param of <object>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('[a, b] = [b, a];', E'swap the value of the two variables ''a'' and ''b''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('[,,...arr]=list', E'because of the two commas, this syntax assign the arr all the items of list, except its first two items.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('[a,b,...arr]=list', E'assign to ''a'' the first element of list, to ''b'' the second element, and to ''arr'' all the other elements.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('function <function>({ <param1>, <param2>, <param3> })', E'with this syntax, when you call the function <function> and pass some object (with params <param1>, <param2>, <param3>, and maybe others), this function only will take the params <param1>, <param2> and <param3>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<var1> = `<some_text> ${<var2>}`', E'assign to <var1> to string which contains the value of variable <var2>. You can also use backticks (`) to create multiline strings with no need of ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('(a,b) =>({x,y})', E'this create variable ''x'' with the value of param ''a'', and variable ''y'' with the value of the param ''b''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<object>{<function_name>(){...}}', E'with this syntax, you can create a function with ''<function_name>()'' instead of ''<function_name>: function()''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('class <class_name>{ constructor(<param1, param2>){this.<param1>=<param1>; this.param2=param2;}}', E'syntax to create a class with name <clas_name> and params <param1> and <param2> which are initialize when the instance of the class is created.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('get <variable_name>()', E'create a getter for a variable, inside a class. Then you can get the variable with <class_instance>.<variable_name> this will call the getter. You can need this if you want to do something each time you get a variable, define what you want to do inside the getter method.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('set <variable_name>(<new_value>)', E'Define a setter for the variable <variable_name>. With the setter, you can define some action to do every time the user tries to modify a variable of an instance of a class.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<script type=''''module'''' src=''''filename.js''''></script>', E'add file ''filename.js'' to the html, this file is a module', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('export {<function-1>, <function-2>}', E'export functions <function-1> and <function-2>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('import {<function-1>, <function-2>} from ''<file_path>.js'';', E'import functiions <function-1> and <function-2> from js file in path <file_path>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('import * as <variable_name> from ''''<file_path>.js'''';', E'import everything inside the javascript file in the path <file_path> in the variable <variable_name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('export default function(x,y)', E'when a module only has one function you can give it an anonymous name with this syntaxis. In the example the function receives two parameters', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('let <var1> = new Promise((resolve, reject) => { <your_code> });', E'save in variable <var1> the value of the promise, call method resolve to return some value if the call was successful, otherwise call reject method. Use promises for asynchronous methods.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<promise-var>.then(result => { <your-code>});', E'after you create the promise var with name <promise-var> and you will like to do something after that if the promise was fulfilled, then use this syntax with ''then'' to execute some code after your promise was successfully fulfilled. ''result'' is the return of your resolved promise. This doesn''t work if the promise was rejected, in that case use ''catch''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<promise-var>.catch(error => {<your-code>});', E'after creating and using your promise <var-promise> use ''catch'' to do something after your promise was rejected (if that ever happen). ''error'' is the returned value of your rejected promise.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('[...Array(<number>).keys()]', E'create an array composed of all the numbers from 0 to <number>-1. Therefore, if number is 5 then array will be [0,1,2,3,4]', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('[...<string-var>]', E'create an array with the characters of the string <string-var>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Object.keys(<object>).forEach((item)=><your-code>);', E'In order to look at all the keys (or params) in an object you can get all the keys with ''Object.keys(<object>)'' to get the keys of object <object> and then use forEach. Inside for each in order to look the value of the key, use ''<object>[item]'' as in the example. ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Math.floor(<number>)', E'get the biggest integer which is less or equal to the number <number>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Math.ceil(<number>)', E'get the smallest integer which is bigger or equal to the number <number>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Math.max(<number1>, <number2>...)', E'return the biggest number between the list of numbers you passed.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('var <var1> = new Object();', E'initialize a new object with name <var1>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array1>.concat(<array2>)', E'create a new array which contains first the items of <array1> and then the items of <array2>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.slice(<initial>)', E'when using slice with only one parameter, the param will define the initial index and will take all the element from that index till the end. For example, [2,3,4,5].slice(2) will generate [4,5] because ''4'' is the index 2.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.includes(item)', E'check if <array> has the item <item>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.slice(<initial>,<not_inclusive_end>)', E'select a subarray beginning in the index <initial> to the element with the index <not_incluse_end>-1', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Number.NEGATIVE_INFINITY', E'represent the -infinity number', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('window.location.href', E'get the url of the current page.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('$0', E'Only in chrome console. Use the $0 in chrome console to get information and properties of the current element in the view. For example, if you select a textbox, the value of $0 will be all the information of that textbox.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('let <variable> = confirm(''<message>'');', E'show a window with the message <message>, the user can choose yes or not, the answers will be saved as a boolean in the variable <variable>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('let <variable> = <array>.filter((<item>)=>{<condition>});', E'save in <variable> the filter process use over the items in array <array>, so <variable> will only contain the items of <array> which pass the condition <condition>.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<object2> = Object.assign({}, <object1>);', E'create a copy of <object1> in <object2>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<obj2> = Object.assign({}, <obj1>)', E'create a copy of <obj1> in <obj2>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('let <variable> = <array>.map((<item>)=>{<tranformation>});', E'return a new array with every element transformed by the logic <transformation>. For example:\n[1,2,3,4]..map((item)=>{return item*2});\nThis will return each element of the list multiply by 2:\n[2,4,6,8]', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('let <arr2> = [...<arr1>];', E'create a copy of array <arr1> in <arr2>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('clone multidimensional array', E'having a multidiomensional array of name array, you can create a clone, with name ''array2'', using:\nlet array2 = JSON.parse(JSON.stringify(array));', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('continue', E'in a loop, jump all the following code inside the de loop, and begin the next iteration of the loop. Example:\nfor(let i=0; i<10; i++){\nif(i==4) continue;\nconsole.log(''hello world'');\n}\n//this code print always the message except when i=4', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Object.keys(<object>)', E'create an array with all the keys', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Object.values(<object>)', E'create an array with all the values of the object <object>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.sort((a, b) => a - b);', E'By default sort() sort number by alphabetic order, so for example 10 is less than 2. To sort by number size use this command.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Array(<size>).fill(<value>);', E'initialize an array with <size> elements, each one with the same value <value>.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('break;', E'Get out of the current loop', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Math.abs(<number>);', E'convert number to absolute value', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Infinity', E'represents the infinity number, therefore:\nInfinity>1000 //true\ninfinity<100 //false', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.splice(<index>)', E'return the elements from index <index> till the end of the array, and remove these elements from the array.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.splice(<index>, <amount>)', E'return the elements from index <index> ton ahead until complete <amound> number of elements, and remove these elements from the array.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable> = <initial_value>;', E'Declare the variable <variable> with initioal value <intiial_value>. Declare this way the variable will be global.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<arr1>.unshift(<arr2>);', E'Add <arr2> items to the begin of <arr1> array. Equivalent to <arr2>.concat(<arr1>);', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<arr>.pop();', E'remove last item and return it', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<arr>.shift();', E'Remove the first item and return it', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<arr>.splice(<initial>, <total>, <new_item1>, <new_item2>...)', E'in <arr> delete from index <initial> until delete a total of <total> elements, then replace them with items: <new_item1>, <new_item2>...', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<arr> = [<item1>, <item2>, ...<arr2>, <item3>]', E'This code create an array which has <item1> and <item2> in the first two elements, followed then by the elements of <arr2> and finally <item3>.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<arr>indexOf.(<item>)', E'look for the first coincidence of <item> in the array <arr>. If found then return the index, otherwise return -1.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('delete <object>.<key>', E'delete key <key> from the object <object>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<object>.hasOwnProperty(<key>);', E'check if object <object> has key <key>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<key> in <object>', E'true if key <key> is present in object <object>, otherwise false', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('for (let keys in <object>) ', E'In this example you have an object <object>, then you can iterate through each key in user, using the variable ''keys''. You can replace ''keys'' with something else.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('this.<attribute> = <value>;', E'You can associate an attribute to a function with this syntax, so if you do:\nlet <instance> = new <function-name>();\nThen you can do the next:\n<instance>.<attribute> //get the attribute value', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('let <instance> = new <function-name>();', E'create an instance of a function, for example:\nfunction employee(let name){\n this.name = name;\n}\nlet employee1 = new employee(''Oscar'');\nconsole.log(employee1.name); // print ''Oscar''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('prototype', E'with prototype property you can modify the prototype of a function, not its instance, for example:\nfunction employee(let age){\n this.age = age;\n}\nemployee.prototype.adult? = function(){\nif(this.age>=18) return true;\nreturn false;\n} \nlet employee1 = new employee(23);\nconsole.log(employee1.adult?); //print true', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('let <child> = Object.create(<father>);', E'create object <child> which inherits properties from <father object>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<child>.prototype = Object.create(<father>.prototype)', E'On this way, <child> function get the properties from <father> function without modifying its existing properties.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.reverse();', E'reverse items of <array>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('document.getElementById(''<id_element>'')', E'This way you can get an element of the DOM by its id', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Number(<variable>)', E'convert a variable to a number if possible, for example, ''1'' became 1.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<DOM_element>.innerHTML', E'This way you can get or set the inner HTML of a DOM element.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<DOM_element>.onclick = function(){...}', E'For a dom element, use this to define it''s trigger method when the user clicks the element.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<DOM_element>.onclick = function(){function(<var1>, <var2>...){...}}', E'having <var1>, <var2>... here a list of variables that you want to pass for a function that you want to associate with a click event of a dom element, then use this syntax to achieve this goal. If you try to pass the variable in the outside function it will not work.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('document.getElementsByClassName(''<class>'');', E'get the list of DOM elements with class <class>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Number.isNaN(<variable>)', E'True if <variable> is not a number, otherwise false', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Number.isInteger(<variable>)', E'True is <variable> is an integer, otherwise false', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('prevent default event behavior of HTML form', E'function formEvent(event) {\n <your_code>\n event.preventDefault();\n};', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<DOM_element>.value', E'return the value if there is one associated with the DOM element <DOM_element>. Some elements with a value associated are the inputs, the textarea, and the select.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('factory pattern', E'Below an example of a factory:\nconst personFactory = (name, age) => {\n const sayHello = () => console.log(''hello!'');\n return { name, age, sayHello };\n};\nlet carlos = new Person(''Carlos'',20) //instantiate\n//return contains only the variables and functions you can call, the other ones are private.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{<var_or_function1>, <var_or_function1>...}', E'Add this at the end of a factory to indicate the variables and functions who are public.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable> = new <factory_name>();', E'instantiate a factory', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('npx webpack', E'install webpack in your project', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('export default <function_name>', E'This way, if you import this module you will get the content of function <function_name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('import <function-name> from ''./<file-location>'';', E'This way you can import a module from location <file-location>. The module must contain, in the end, the next:\nexport default <function_name> \n//where the function was previously declared.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('export { <functionOne>, <functionTwo>... }', E'In a model, this way you can define which methods can be imported by other files.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('import { <functionOne>, <functionTwo>... } from ''./<fileLocation>''', E'In the top of a file add this to import from file location <fileLocation> the functions: <functionOne>, <functionTwo>....\nIn the file location you must have at the end something like this:\nexport { <functionOne>, <functionTwo>... }', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('npm install', E'when working with webpack, this will get the dependencies necessaries for the project (that are specified in the package.json file)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('npm init', E'create the package.json file', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('npm install webpack webpack-cli --save-dev', E'install the latest version of webpack', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('start a project with webpack', E'In the terminal, run the next commands:\n1) npm init\n2) npm install webpack webpack-cli --save-dev\n3) npm install webpack-dev-server --save-dev\n4) npm i webpack-cli @webpack-cli/init\n5) Create an src and dist directory\n6) add an index.js file in src\n7) an index.html file in dist. \n8) link the main.js file in a script tag. main.js is the file that will be generated by webpack.\n9) In the webpack add the next in the script part:\n''scripts'': {\n ''dev'': ''webpack --mode development'',\n ''build'': ''webpack --mode production'',\n ''start'': ''webpack-cli serve --mode development''\n }\n10) npx webpack\n11) npx webpack --watch', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('npx webpack --watch', E'keep updating your webpack server every time you make changes', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('module pattern', E'//example of module pattern\nconst contactLoad = () => ({\n variable1: 5,\n variable2: ''10'',\n function1(){\nreturn 0;\n},\nfunction2(){\nreturn ''hello world'';\n}\n});', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('document.createElement(''<element>'');', E'Create a particular type of element that you can eventually add in the DOM. For example, create a div with: \nlet div = document.createElement(''div'');', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<element>.id=''<id_value>'';', E'been <element> a DOM element, then you can assign its id this way.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<element>.classList.add(''<new_class>'');', E'been <element> a DOM element, you can add the class <new_class> this way.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<element>.classList.remove(''<old_class>'');', E'been <element> a DOM element, remove its class <old_class> this way', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<father>.appendChild(<child>);', E'been <father> and <child> two DOM elements, add <child> inside at the end of <father> element with this command.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<element>.innerText', E'been <element> a DOM element, add inner text', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<element>.placeholder = ''<value>'';', E'been <element> a DOM element, add placeholder <value> provided that the element has that property.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<element>.type=''<type>'';', E'been <element> a input DOM element, assign type <type>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<element>.src=''<source_image>'';', E'been <element> an image DOM element, add the source of the image this way', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<element>.className=''<class1> <class2>...'';', E'been <element>a DOM element, you can define its classes this way', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable> instanceof <type>', E'determine if variable <variable> is an instance of type <type>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('for (let <any_name> in <object>)', E'use the next code to move through all the elements in object <object>:\nfor (let <any_name> in <object>){\n//<my_code>\n}', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<class_instance>.constructor === <class_type>', E'true if <class_instance> is type <class_type>, otherwise false', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<father>.prototype.isPrototypeOf(<child>) ', E'check if <child> inherits from <father>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('typeof <element>.prototype', E'Return the prototype of <element>, if <element> is just an object then it return ''object''.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Object.prototype.isPrototypeOf(<element>.prototype);', E'true if <element> inherits from Object', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('let <instance> = Object.create(<element>.prototype);', E'create an instance of <element>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<child>.prototype = Object.create(<father>.prototype);', E'makes <child> inherit from <father>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<element>.prototype.<function_or_var> = ...', E'This way you can add variables or functions to an already created object.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<child>.prototype.<method> = function() {...};', E'this way you can overwrite inherit method <method> ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mixins in javascript', E'you can extend an object using a mixin, this is the syntax:\nlet flyMixin = function(obj) {\n obj.a_function = function() {\n//something\n };\nobj.a_variable= ''some_value'';\n};\n//then do the next\nflyMixin(some_object);', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('private variables in JavaScript', E'by default, variables are private, for example:\nfunction Bird() {\n let weight = 15;\nthis.get_weight(){\n return weight;\n}\n}\n//in the example, weight is private, but it can be read with the function get_weight().', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('inmediately invoked function', E'use the next syntax:\n(function() {\n //the function code\n})();', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('immediately invoked function expression with a module', E'you can use this to declare a module that doesn''t need to be instantiated, for example:\nlet yourModule = (function () {\n return{\n function1 : function() {\n //your code\n},\nfunction2 : function() {\n//your code\n}\n}})();\n//then you can call functions the next way\nyourModule.function1();', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Array.prototype.<new_function>= function(param){...};', E'Use this syntax to add a method to the Array object so it can be used always for arrays. to access the array use ''this''.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.reduce((<total>, <item>)=>{...});', E'use this syntax to use reduce, initial value of <total> will be the first element, example:\n[1,2,3,4].reduce((sum, num)=>sum+=num); //this will return 10', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.reduce((<total>, <item>)=>{...}, <initial>);', E'use this syntax to use reduce, the <total> element will have as initial value the <initial> value, example:\n[1,2,3,4].reduce((sum, num)=>sum+=num, 10); //this will return 20', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<string>.toLowerCase();', E'convert <string> to lowercase', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<string>.toUpperCase();', E'convert <string> to upper case', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<string>.trim();', E'Remove from <string> starting and ending spaces, if any.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<arr>.every((item)=><your-code>);', E'This method return true if every element pass a condition, otherwise false, example:\narr.every((item)=> item>=0); // true if all elements in arr are bigger than 0', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<arr>.some((<item>)=> <your-code>);', E'Check if any of the items in <arr> pass a condition, for example:\narr.some((item)=> item>=0); //true if any item in arr is bigger or equal to 0.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Curried function', E'with a curried function is a function that returns a function, you can use it to pass parameters by parts. example:\nfunction curried(x) {\n return function(y) {\n return x + y;\n }\n}\nvar funcForY = curried(1);\nconsole.log(funcForY(2)); // Prints 3', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('partial function', E'A partial function is a function created from another, example:\nfunction impartial(x, y, z) {\n return x + y + z;\n}\nvar partialFn = impartial.bind(this, 1, 2);\npartialFn(10); // Returns 13', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('npm install node-sass', E'run this in the terminal to install the package required to use SCSS in node and webpack projects.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('npm install sass-loader sass webpack --save-dev', E'install required package to use SCSS in your project', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('use SCSS in your webpack/node project', E'1) In the terminal: npm install node-sass\n2) In the terminal, placed in the terminal project: npm install sass-loader sass webpack --save-dev \n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<dom_element>.disabled=<boolean_value>;', E'this way you can define in javascript if a DOM element is disabled or not.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fetch data from javascript', E'Use the next syntax:\n// URL (required), options (optional)\nfetch(''https://url.com/some/url'')\n .then(function(response) { \n // Successful response :)\n })\n .catch(function(err) {\n // Error :(\n });', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('allow cors for fetch queries', E'Use the next syntax:\nfetch(''url.url.com/api'', {\n mode: ''cors''\n});', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<float>.toFixed(<number>);', E'Convert the number <float> into a string, rounding the number to keep only <number> decimals.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('const that = this;', E'Use this in a module or object to use the scope of the parent in a child scope. Example: \nconst that = this;\nfunction function1(){\nconsole.log(that.variable); //print variable of the parent scope\n}\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('JSON.parse(<string>);', E'convert string to object', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('JSON.stringify(<object>);', E'convert object to string', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<string>.charAt(<index>);', E'get the char in the index <index> to string <string>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('typeof(<variable>) === ''<type>''', E'true if type of <variable> is <type>, some possible types are number and string.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('check if event was assigned', E'use the next:\ntypeof <element>.<event> === ''function''\nif true the event was assigned to the element, otherwise <element>.<event> === ''object''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('install and config jest', E'1) In the terminal: npm install --save-dev jest\n2) In the package.json replace so the script part has something like this:\n''''scripts'''': {\n ''''test'''': ''''jest''''\n }\n3) create a babel.config.js file\n4) inside the created file add:\nmodule.exports = {\n presets: [[''@babel/preset-env'', {targets: {node: ''current''}}]],\n};\n5) in the terminal, run: npm install --save-dev @babel/preset-env', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('create tests with jest', E'1) check ''install and config''\n2) create __tests__ folder\n3) inside the folder add the tests in files: <file_name>.spec.js\n4) in the terminal, run: npm test', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('describe in jest', E'Inside a spec.js file, add a describe to contain the tests of an specific group in jest, something like:\ndescribe(''<here_description_group_of_tests>'', () => {\n//here the tests\n});', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('test in jest', E'inside a ''describe'' group, add a test to test a particular case, for example:\ntest(''<description_test>'', () => {\n expect(<variable_or_method>).toBe(<expected_value>);\n });', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('toBe in jest', E'use to be in order to check equality, for example:\nexpect(2+2).toBe(4);\nIt will not work with objects or arrays', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('toBeNull() in jest', E'pass the test if the value is null, for example:\nexpect(4).toBeNull(); // this test will failed', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('not in jest', E'use not to get the opposite result of the matcher, for example with toBeNull() you can use not to check that given value or method return something different to null, for example:\nexpect(''hello world'').not.toBeNull();', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('toBeDefined() in jest', E'use to check is given value or method return a defined value:\nlet x=null;\nexpect(x).toBeDefined(); //return true', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('toBeUndefined() in jest', E'return true if the given value or method is undefined:\nlet x;\nexpect(x).toBeUndefined(); //approved test', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('toBeTruthy() in jest', E'return true if the given value or method is true:\nexpect(2==2).toBeTruthy(); //approved test', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('toBeFalsy() in jest', E'approved test if the given value or method is false:\nexpect(2==3).toBeTruthy(); //approved test', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('beforeEach in jest', E'execute some code before each test inside the current describe group:\nbeforeEach(() => {\n //your code\n});', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('afterEach in jest', E'execute some code after each test inside the current describe group:\nafterEach(() => {\n //your code\n});', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('afterAll', E'execute some code once after all the tests inside the current describe group:\nafterEach(() => {\n //your code\n});', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('beforeAll in jest', E'execute some code once before all the tests inside the current describe group:\nbeforeAll(() => {\n //your code\n});', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='javascript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('img', E'this tag is for add an image, for example, <img src=''images/hola.jpg''> show the image hola.jpg inside the folder images which is on the same folder of your html page. You can also use online images in the src.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<meta charset=''UTF-8''>', E'encode the page in UTF-8 format instead of ASCII', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<meta name=''viewport'' content=''width=device-width, initial-scale=1.0''>', E'web responsive design. This tag allow the width of the page to adjust to the width of the screen.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<link rel=''tylesheet'' type=''text/css'' href=''<file_path>''>', E'connect a css file to the page, so the classes in this file can modify the design in the page', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<script src=''<file_path>'' type=''aplication/javascript''></script>', E'add the javascript file, with path <file_path>, to the current page', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('placeholder', E'allow to add a guide text inside an input, this can show information or show how to fill the input. For example, with placeholder=''here your answer'' that text will appear in the input text until the user writes something there.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('onclick=''<javascript-code>''', E'when click the current element it executes the code <javascript-code>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('flex-basis', E'define the width (or the hight) of the element using pixels or a percentage. For example, ''flax-basis: 20%;'' means that the element will be using 20% of their father element.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('font-family', E'change typography of the text in the page. For example, for times new roman use:\nfont-family: ''''Times New Roman'''', Times, serif;\nor for arial use:\nfont-family: Arial, Helvetica, sans-serif;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fill', E'use this to define color of an svg, for example: ''fill: blue;'' for blue color', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('vh', E'Represent a percentage of the viewport height, 1vh is equal to 1%, therefore if you write ''height: 10vh;'' then the height will be equal to 10% of the viewport height', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('vw', E'Represent a percentage of the viewport width, 1vw is equal to 1%, therefore if you write ''width: 10vw;'' then the width will be equal to 10% of the viewport width', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='html' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('z-index', E'for a parent with relative position and children with absolute position, allow defining which element goes above or below. For example, if div1 element have z-index:1 and div2 element have z-index:2 then div2 appears above div1.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('background-color', E'color on the background of the element', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('color', E'color of the text inside the element', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-align', E'define horizontal alignment of the inline-level content, such as text and images. to center text use text-align:center;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('opacity', E'define the opacity (transparency) of the content of the element, for example, for 50% of opacity use opacity:0.5;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('glyphicon', E'class of bootstrap which contains different icons. For example, to use the info icon write ''glyphicon glyphicon-info-sign'' or for search icon write ''glyphicon glyphicon-search''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('font-size', E'change the size of the text inside the current element', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rgb(x, y, z)', E'to define the color using RGB using three numbers x, y, and z. For example, for white color to text with RGB use color: rgb(255,255,255)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('font-weight', E'define the weight (width) of the characters in the text inside your current element. for normal weight use font-weight:400; and for bold weight use font-weight:700;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('width', E'define the width of the current element, you can use px, for example ''width:500px;'' or percentage, for example ''width:30%;''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('height', E'define the height of the current element, you can use px, for example ''height:500px;'' or percentage, for example ''height:30%;''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('position: absolute;', E'element is positioned relative to its first non-static ancestor element', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('position: relative;', E'element with a relative position is positioned relative to its original position, so the left, right, top and bottom will move the element from its original position, no moving other elements.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('@media only screen and (max-width: <number>px)', E'define classes for screens with a max size of <number>px', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border-color', E'define the color of the border of the element, for example, for example, border-color: black; means the border color is going to be black', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border', E'define the size of the border for the current element. For example, border: 2px; define a size of 2px for the border', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('margin: auto', E'center de element inside the parent element', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('float', E'this property can move an element in a specific direction. For example, ''float: right'' move the element to the right, ''float: left'' to the left side, and ''float: center'' to the center of the page.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('a:hover{}', E'this class assigns a design for an element ''a'' when the mouse pass over. For example, ''a:hover{color:green;}'' assigns a green tet color when the mouse is over the ''a'' element.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('a:link{}', E'class for tag ''a'' when this element is unvisited', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('a:visited{}', E'this class assigns styles to the element ''a'' when it was visited. An element is visited when the element redirects to another site, and this another site was already visited by the user.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('a:active{}', E'this is a class which assigns different styles to the element ''a'' after this element is clicked.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<tag>.<class>{}', E'class for assigns styles to an element with tag <tag> and class <class>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<tag>:first-child{}', E'assigns styles to those elements <tag> which are the first child of their father element.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<tag1> <tag2>{}', E'assigns styles to the tag <tag2> which is inside (not necessarily direct child) of the tag <tag1>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('.<class>:focus{}', E'assigns styles to the elements with class <class> and that are focused. An example of a focused element is an input when we make click over it because we want to write something. After clicking over the input text this element is focused.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<tag>:lang(<language>){}', E'This class assigns styles to the tag <tag> and with language <language>. For example, with the div:lang(en){background-color:black;} we can change the background color of the next element <div lang=''en''></div>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('display: flex;', E'allow using flexbox grid inside this element', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('flex: <number>;', E'This is the flexbox style to define the distribution of the width of the father element. For example, if you have two elements, the first with ''flex:1;'' and the second with ''flex;1;'' then each element will use the 50% of the width. Same if both element have ''flex:4;''. But if the first element has ''flex: 1''; and the second element has ''flex:3;'' then the first element will use the 25% of the width and the other will use the 75% of the width, same if first element has ''flex:2;'' and the second have ''flex:6;''\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('order: <number>;', E'inside an element with display: flex;'' this command allows to define the order of the element inside the parent. For example, if the firs element has ''order:2;'' and the second element has ''order;1'' then the second element will be added first and then the second element will be added. ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('display: grid;', E'allows using the CSS Grid inside the current element', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grid-template-columns: <size1 size2 ... sizen>;', E'this style allows defining how many columns will contain the current element and the size of each column. For this purpose, you can use both px, for specific width, or fr for a proportioned width. For example, if the element has the next style ''grid-template-columns: 100px 200px 300px'' then the first column width will be 100px, the second will be 200px and the third will be 300px. If you use ''grid-template-columns: 4fr 10fr 6fr;'' then the first element will have the 20% of the width of the parent element, the second column will have the 50% and the last will have the 30%.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grid-template-rows: <size1 size2 ... sizen>', E'this style allows defining how many rows will contain the current element and the size of each row. For this purpose, you can use both px, for specific width, or fr for a proportioned width. For example, if the element has the next style ''grid-template-rows: 100px 200px 300px'' then the first row width will be 100px, the second will be 200px and the third will be 300px. If you use ''grid-template-rows: 3fr 9fr 6fr;'' then the first element will have the 20% of the height of the parent element, the second row will have the 60% and the last will have the 40%.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grid-gap: <number>px;', E'INside an element using CSS Grid, allow defining a gap between columns and between rows. For examples, if your element has ''grid-gap: 25px;'' then the distance between columns and between rows will be 25px', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('clear: both;', E'doesn''t allow float elements to the left and the right side of this element\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('align-items: center;', E'vertical align items inside a CSS Grid or flex grid', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES (' justify-items: center;', E'horizontal align items inside a CSS Grid', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('gradient', E'Example doing a gradient with only two colors with no transition of colors:\n/*background-image: linear-gradient(0deg, rgba(255,255,255,0.1) 5%, rgba(255,255,255,0) 50%, rgba(255,255,255,0.1) 51%);*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('flex-direction', E'defines the direction of flexbox element. By default the direction is row, other alternatives are ''row-reverse'', ''column'' and ''column-reverse''.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('flex-wrap', E'defines the behavior of the items when they overflow the space of the father. By default, the value of this property is ''nowrap'', which mean all the contain must stay in the same line (row or width). If we change to ''wrap and if we have five elements with flex-base: 25%;'' then the first 4 elements will use the 100% of the line, so the fifth element will move to the next line.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('width: (<percentage>%);', E'define the width using a percentage of the width of the father element', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('width: calc(<percentage>%+<number>px);', E'define de width the element using the width of the father element and adding (or subtracting) a certain amount of pixels. For example, ''width: calc(20%+25px);'' means that the width of the element will be 20% of the father element width plus 25 px. On the other hand ''width: calc(20%-25px);'' do the same but this time it reduce (instead of add) 25px.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('padding', E'this property generates a distance between the border element and it''s direct children elements. For example, ''padding: 5px;'' will make that any direct children keep, at least, 5px away from the border of its father element.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('margin', E'This property generates a distance between the border of this element and it''s sibling and father element. Therefore, the property ''margin: 5px;'' generates a minimal distance between the border of this element and the elements around him (including his father).', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grid-row: 1 / -1;', E'with this property, the element will use all the rows of the father. Also apply for ''grid-column: 1 / -1;'' which means the element will be using all the columns.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grid-column: 2 / span 4;', E'With this property, the element will use columns 2, 3 and 4. The same structure applies to the rows, so for example, if we have ''grid-row: 3 / 7;'' then the element will be using the rows 3, 4, 5, 6 and 7. ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grid-template-rows: <number1>fr <number2>fr ... <numbern>fr ;', E'on an element with ''display: grid;'' and the height defined this property will define the rows of the grid. For example, for a property ''grid-template-rows: 1fr 2fr 1fr;'' will make that the grid have three rows, the second one will use 2 fractions, while first and third will use only one fraction of the height. For example, if the height is ''400px'' then the first and third row will have 100px and the second row will have 200px. ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grid-template-columns: <number1>fr <number2>fr ... <numbern>fr ;', E'on an element with ''display: grid;'' this property will define the columns of the grid. For example, for a property ''grid-template-columns: 1fr 2fr 1fr;'' will make that the grid have three columns, the second one will use 2 fractions, while first and third will use only one fraction of the width. For example, if the father element has a width of 400px then the first a third column will use 100px and the second column will use 200px.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('justify-content: space-between;', E'maximize horizontal space between the inside elements. For example, if you have only two elements inside a tag and this tag uses the property ''justify-content: space-between;'' then the first element inside will be moved to the extreme left en the second element to the extreme right of the father element.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<tag>:nth-of-type(<number>) {}', E'This selector modifies the nth element <tag> appears inside the current element. For example, the selector ''.box:nth-of-type(2){color:red;} will make the text color ''red'' each time the box class .appears inside another element by second time.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border: 0;', E'remove the borders of the element', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('.break {flex-basis: 100%; height: 0;}', E'with this class you can create a breakline class for flexbox grid. To use it for example for break the first row into two, add this class to a void element after the last element of the first row and previous to the first element of the second row.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cursor: pointer;', E'when the cursor is over the element it shows the pointer icon (a hand with a finger pointing out)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-decoration-line: underline;', E'put a line under the text of this element', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('padding: <top>px <right>px <bottom>px <left>px;', E'defines specific padding (the space between the border and the inside elements) for all the sides in just one command', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('margin: <top>px <right>px <bottom>px <left>px;', E'defines specific margin (the space between the border and outside elements) for each side in only one command', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('font: <style> <weight> <size> <family>;', E'With this shorthand, you can add the 4 most important properties of the font in only one statement.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border: <width> <style> <color>;', E'define in only one statement the most important three properties of the border (width, style and color).', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('calc(<number1>% + <number2>px);', E'this is a method to calculate a position, we use a percentage of the parent and we add a number of pixels. This can be used for position absolute inside another div. It also works for subtraction using - instead of +.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border-radius: <number>px', E'useful to define a circular design for the borders of the element.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-align: justify;', E'to justify the alignment of the text', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('display: none;', E'to hide an element', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('background-repeat: no-repeat;', E'this command doesn''t allow the background image to be repeated in the background of the current element.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('background-position: center center;', E'to center the background image in it''s element container, other alternatives for this element are, for example, ''left top'' to make the top left corner of the image to left top of the element.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('max-width', E'define a max-width size for the current element', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('min-width', E'set a minimum width for the current element. for example ''min-width: 50px;'' means that the element can''t be has a width less than 50px.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('justify-content: center;', E'horizontal center items inside of the current element. To work, the current element must be CSS Grid or flex grid.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('not(<tag_class_id>)', E'affect all except the tag, class, or id <tag_class_id>. For example:\n.boxes > *:not(p){color: blue;}\nthis element affects all the children of class ''boxes'' when that child is not the ''p'' tag.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grid-template-columns: repeat(<number>, 1fr);', E'Divided the width in <number> columns of same size. You can also use for height with: ''grid-template-rows: repeat(<number>, 1fr)''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('position fixed', E'fixed the element relative to the viewport, so it stays there even if the size or shape of the screen changes. Example:\n.fixed {\n position: fixed;\n bottom: 0;\n right: 0;\n} # this selector fixed the element permanently in the right bottom corner', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rem', E'a unit for font size relative to the root font size. For example, if you have the next:\nhtml {\nfont-size: 10px;\n} \nThen you can say in another element: ''font-size: 1.4rem'', that will be 14px, or ''font-size: 2rem'' that will be 20px. By default the root font size is 16px.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('@import url(''<link_font>'');', E'At the top of your CSS file, add this to add a new font that is available in the link <link_font>. You can find some fonts in ''google fonts'' and it will provide you with the link you need to add in your CSS.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='css' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('lftp ftp://<username>@<hostname>', E'ftp connection', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='lftp' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mirror -c <remote_path> <local_path>', E'download remote folder <remote_path> in the local folder <local_folder>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='lftp' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mirror -R <local_folder> <remote_folder>', E'update remote folder <remote_folder> from local folder <local_folder>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='lftp' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('lftp sftp://username@hostname:port', E'connect using sftp', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='lftp' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ctrl+g', E'search for a line in your current page', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='Visual Studio Code' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('!+ENTER', E'shortcut to generate the basic skeleton of an html webpage', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='Visual Studio Code' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ctrl+k+c', E'comment a section of code', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='Visual Studio Code' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ctrl+k+u', E'uncomment code', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='Visual Studio Code' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('alt + up / down', E'Click on a line un move it to the line above with alt + up, or move it to the line below with alt+ down', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='Visual Studio Code' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('find with regex', E'ctrl+f to open the search option, click in the * option to search using a regex expression, for example:\nhello world\d{1,0}\nThis means the text ''hello world'' immediately followed by one or more digits. ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='Visual Studio Code' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ctrl + p', E'search by file name', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='Visual Studio Code' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ctrl + shift + i', E'indent html code', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='Visual Studio Code' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('format document', E'1) ctrl + shift + p\n2) select: format document', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='Visual Studio Code' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ERB formatter/beautify', E'extension for indenting your html.erb files in rails', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='Visual Studio Code' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ctrl + alt + f', E'format current document', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='Visual Studio Code' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('scss formatter', E'install this extension in visual studio code for formatting scss', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='Visual Studio Code' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('search in a specific folder', E'Click in the len icon, then click in the three points (...) and in files to include write the relative path of the folder. For example, if your current visual studio location has the folder wikit/app, and you want to search there, then type: ./wikit/app', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='Visual Studio Code' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git config credential.helper store', E'save credentials so you don''t need to add your user and password every time you make a push', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('githack live demo generator', E'using the link https://raw.githack.com/ enter there the html file where you project begins, and that will generate your live demo.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git --version', E'get the git version of your machine', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('checkout -b <new_branch>', E'create the new branch <new_branch> and move there.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git checkout -- <file>', E'Discarding local changes (permanently) to the file <file>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git reset --hard', E'Discard all local changes to all files permanently until the last commit.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git stash', E'Discard all local changes, but save them for possible re-use later, then you can use ''git stash pop'' which redoes previously stashed changes', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git stash pop', E'If you discard all local changes, but save them for possible re-use later using ''git stash'', then you can use this command to redo previously stashed changes.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git log', E'Shows the commit logs.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git checkout <log>', E'allow watching the code for the given commit log', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git reset', E'undo the last ''git add''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git reset --soft HEAD~1', E'undo the last commit', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('undo git add && git commit -m ''<message>''', E'to undo both add and commit use the next:\ngit reset --soft HEAD~1 && git reset', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git checkout -b <new_branch>', E'create a new branch, based on the current branch, and move there', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git branch', E'List all of the branches in your repository. This is synonymous with ''git branch --list''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git branch -d <branch_name>', E'remove a branch, it has to be merged before, otherwise, it will not be possible to delete it', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git branch -D <branch-name>', E'Force delete the specified branch, even if it has unmerged changes', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git branch -m <new-name>', E'rename current branch to <new-name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git branch <new-branch>', E'create a new branch with the name <new-branch> based on the current one, but it doesn''t checkout to the new branch.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git config --global --list', E'Check out your saved email and name in your local git configuration. The user name and email should match the ones youâre using on GitLab.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git config --global user.name <name>', E'Add your user name to your local git configuration', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git config --global user.email <your_email>', E'Define the email of your local git configuration', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('namespace', E'namespace refers to a username or group name. For example, suppose Jo is a GitLab user and they chose their user name as jo. You can see Joâs profile at https://gitlab.com/jo. jo is a namespace. Supposed Jo created a group, test-group. The group can be accessed under https://gitlab.com/test-group. test-group is a namespace.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fork', E'When you want to copy someone elseâs repository, you fork the project. By forking it, youâll create a copy of the project into your own namespace to have read and write permissions to modify the project files and settings.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Download vs clone', E'To create a copy of a remote repository files on your computer, you can either download or clone it. If you download it, you cannot sync it with the remote repository on GitLab.By cloning a repository, youâll download and also preserve the Git connection with the remote repository, so that you can work on its files on your computer and then upload the changes.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('repository', E'Your files in Git live in a repository, similar to how you have them in a folder or directory on your computer. For example, is user jo create the repository ''my-repo'' in gitlab then you must be able to find this: https://gitlab.com/jo/my-repo', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git clone <repo_url>', E'create a github clone of the repository <repo_url> in your computer', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git init', E'Convert all the files and folders of the current folder into a repository', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git remote add origin <repo_url>', E'By ''adding a remote repository'' to your local directory youâll tell Git that the path to that specific project in GitLab corresponds to that specific folder you have on your computer. This way, your local folder will be identified by Git as the local content for that specific remote project.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git remote -v', E'get the remote URL of your repository', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git pull <REMOTE> <branch>', E'Get the latest changes from this repo in the branch <branch> and the remote copy <REMOTE>. If you use ''origin'' as remote it means you use the repository from where you clone your local.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('origin concept', E'In git, origin refers to the repository URL from where you clone your local repository.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('REMOTE concept', E'remote is the repository URL, by default the REMOTE is ''origin'' which refers to the repo URL from where you clone. But there might be other repo URLs which are a copy of your origin, then you can also use as REMOTE that others repo URLs.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Add existing project to github', E'1. create a repo in github\n2. Initialize your local directory as a Git repository.\ngit init\n3. Add the files to your new local repository. This stages them for the first commit.\ngit add .\n4. Commit the files that youâve staged in your local repository.\ngit commit -m ''initial commit''\n5. connect with the git repository\ngit remote add origin <url_clone>\n6. move to the main branch\ngit branch -M main\n7. push your project\ngit push -u origin main', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git merge --abort', E'to abort a merge, useful if you try a merge but it fails because of conflicts, in that case, use this command to return to the original state.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git rebase <repository>', E'similar to merge but not only merge the changes but also the commit history, so it makes seems everything was a line of changes. So if master branch has a, b and c commits, and develop branch (child of master) has d and e, after rebase the git log will contain all the commits on master, like this: a,b,c,d,e ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git fetch', E'Use this command to find out about the changes in the remote repository', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git revert <commit>', E'let you go back and keep the last commits, for example, having this commit history: a,b,c,d\nif you revert to b then you will have:\na,b,c,d,b', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git reset --hard HEAD~<number>', E'By default, git reset --hard only undo the changes in the last commit, but if you specified the additional flag ''HEAD~<number>'' then you will remove the last commits until the <number> before the current commit. For example, you have this commit log: a,b,c,d\nif you do: git reset --hard HEAD~2\nthen now your commit log will be: a,b', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git revert <commit> HEAD~<number>', E'If you specified the additional flag ''HEAD~<number>'' then you will create a new commit equivalent to <number> commit before the current commit. For example, you have this commit log: a,b,c,d\nif you do: git reset --hard HEAD~2\nthen now your commit log will be: a,b,c,d,b', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='github' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sudo lshw -html > mySpecs.html', E'create the file ''mySpecs.html'' in the current folder. This file contains all the information system of the computer.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('kill linux process by port', E'If you want to kill the process running on the port <port> first you run:\nlsof -wni tcp:<PORT>\nthen look at the PID number of the process, then run the next command:\nkill -9 <PID>\nto kill process with PID <PID>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('node -v', E'get you current version of node\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('npm -v', E'get current version of your npm ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sleep <seconds>', E'Can be used to wait before executing another command, for example: \nsudo sleep 7200 && systemctl suspend\nOn this way, the computer will suspend after 7200 seconds\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('&&', E'Can be used to concatenate the execution of different commands, for example:\nsudo sleep 7200 && systemctl suspend\nfirs make the program wait 7200 seconds and after that suspend the computer.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('systemctl suspend', E'suspend the system', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('lsb_release -a', E'Check the name of the operative system and the version', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('zip -r <zip>.zip <file_or_folder1> <file_or_folder2>...', E'to create a zip file using this command, you can add one or more files or folders to your zip', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cd /etc/NetworkManager/system-connections', E'Use ''ls'' inside this folder for looking the name of all the saved connections', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sudo cat ''<connection_name>''', E'Check all the information about the internet connection <connection_name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('check internet connection password on linux', E'1) type: cd /etc/NetworkManager/system-connections\n2) type: ls\n3) look for the name of the connection\n4) type: sudo cat ''<connection_name>''\n5) look password in [wifi-security]->psk', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('kill linux process by PID', E'use command ''top'' to watch the PID of all the processes. Then use: kill <PID> to kill the specific process. ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('kill linux process by name', E'Use command ''top'' to watch all the active processes, there you can see the name of the process in the COMMAND column. Then, with the command ''killall <NAME>'' you can kill the specific process.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('top', E'''top'' command is used to show the Linux processes. It provides a dynamic real-time view of the running system. ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('unzip <file>.zip', E'unzip the file', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('uname -m', E'get the architecture of your computer', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('install debian package', E'1) if you haven''t, download the package, it must have a .deb extension\n2) go to the folder with the package and run ''sudo apt install ./<package_name>.deb''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('du -h <folder>', E'get the weight of the folder <folder>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('du -h <folder>/*', E'get the weight of every folder inside the folder <folder>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tree <folder>', E'show tree of folders and files inside folder <folder>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='linux terminal' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('container', E'this class defines a width that will be equal to the biggest breakpoint possible with the width of the page. For example, if the width of the page is 1400 pixels then the with of the element will be 1200, but if the width of the screen is 1150 pixels then the width of the element will be 768 pixels.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='bootstrap' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('container-fluid', E'the element will be using 100% of the width of the parent element.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='bootstrap' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('row', E'all the elements inside the element will be put in a row', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='bootstrap' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('col-<number>', E'allow defining a proportion of the width of the father element for the current element, having as a max col-12, which is the 100% of the width, if for example we use the class ''col-6'' then we are using the 50% of the width of the father element.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='bootstrap' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('col-md', E'this class allows bootstrap to deduce the size of the element for middle screen elements. For example, if you have to elements with col-md then each element will use 50% of the page. But if you have one element with col-md-6 and the other two elements use just col-md the the first element will use 50% of the width and the other two will use the 25% of the width (all this for medium-size screens).', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='bootstrap' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('justify-content-md-center', E'move all the content to the center for medium-size screen\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='bootstrap' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('justify-content-md-end', E'justify content to the most right, inside the father element. This for medium-sized screens.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='bootstrap' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('order-first', E'makes an element be the first one, in other words, to move to the most left of the father element', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='bootstrap' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('order-last', E'makes an element be the last one, in other words, to move to the most right of the father element', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='bootstrap' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('align-middle', E'vertical-align an element in the center of its father', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='bootstrap' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bg-warning', E'change the background color element to be yellow, in order to mean warning', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='bootstrap' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-white', E'change text color to white', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='bootstrap' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cutomize link', E'use this link: https://bootstrap.build/ to customize bootstrap 4', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='bootstrap' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-center', E'class to center text inside an element\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='bootstrap' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-right', E'align text inside of the element to the right side', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='bootstrap' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-left', E'align text inside of the element to the left side', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='bootstrap' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('overflow-x: scroll;', E'if the width of the page overflow the width of the screen then a horizontal scroll appears', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='bootstrap' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bg-danger', E'change the color of a button to red, which means danger', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='bootstrap' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('justify-content-center', E'this class is equivalent to ''justify-content: center;''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='bootstrap' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('align-items-center', E'This class is equivalent to property ''align-items: center;''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='bootstrap' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('puts ''<message>''', E'print message <message> in console', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('end', E'tag to close different statements in ruby. For example, to close the statement if ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('elsif', E'continuation of the if statement, make a second comparison if the first condition didn''t pass', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ruby <filename>.rb', E'execute in console the ruby file with name <filename>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('==', E'comparison of two values, either integers, floats, strings, boolean of others', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('and', E'and logical operator', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('&&', E'and logical operator', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('or', E'or logical operator', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('||', E'or logical operator', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sudo snap install ruby --classic', E'install ruby', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES (' ruby -v', E'get ruby version installed in you machine', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('for i in 1..10 do', E'this statement executes the code inside the loop 10 times, in each scenario with values from 1=1 to 1=10', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('for i in 1...10', E'executes the code inside the loop 9 times, each case with having values from 1=1 to 1=9', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('break', E'exit out of the loop', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('loop do', E'this loop executes infinitely unless you use a break, therefore use a break', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('a += 1', E'a shortcut for a = a + 1', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('def <function-name>', E'create a function with the name <function-name> ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<varname> = [<item_1>, <item_2>... <item_n>]', E'initialize an array with name <varname> and the elements <item_1>, <item_2>... <item_n>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<varname>[<position>]', E'Shows element in position <position> of the array with name <varname>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<varname> = array.new(<number>, <value>)', E'assign to the array with name <varname> the <numbers> items, all with value <value>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<varname>[-<positive-number>]', E'For example, if we put <varname>[-1] it will show you the last element of the array variable with name <varname>. With <varname>[-2] you will see the element previous to the last one.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<varname>.first', E'show the first element of the array <varname>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<varname>.last', E'show the last element of the array <varname>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<varname>.fecth(<position>, <message>)', E'shows the item in position <position> of the array <varname>, if the element doesnt exists shows the message <message>.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<varname>[<position1>, <position2>]', E'create a subarray from the array <varname> with the item from the position <position1> to the position <position2> excluding the last one', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<var2> = <var1>.slice(<position>,<number>);', E'create variable <var2> with elements of the array <var1> from position <position>, one by one until get a total of <number> items', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<var2> = <var1>.slice!(<position>, <number>)', E'create variable <var2> with all the elements of the array <var1> excluding the elements from position <position>, one by one until get a total of <number> items', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<varname>.take(<number>)', E'select a subarray from the array <varname> with it''s first <number> items', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<varname>.sample', E'select one random item from array <varname>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<varname>.sample(<number>)', E'generate a subarray with <number> random items from the array <varname>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<varname>.include?(<item>);', E'return true if array <varname> includes item <item>, otherwise false', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<var1> = <var2>.reverse', E'assign reverse of the list of items of <var2> to the variable <var1>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<varname>.reverse!', E'reverse the order of items of <varname>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<var1> = <var2>.sort', E'assigns to <var1> a sort version of the items of <var2>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<varname>.sort', E'sort the items of <varname>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<var1> = <var2>.uniq', E'assign to <var1> a list of unique items in <var2>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<varname>.uniq', E'remove repeated items in <varname>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<var_str> = <var_arr>.join('', '')', E'create a string with name <var_str> with all the items in <var_arr> separated by '', ''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<var_arr> = <var_str>.split('', '')', E'create the array <var_arr> using the string <var_str> by the text it has, splitting different part using '', ''. For example, variable = ''a+b+c+d'' if you use variable.split(''+'') you generates a array with the first four elements of the alphabet', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('case-when-else structure', E'for example, if you have something like:\na=''oscar''\ncase a\nwhen ''andres''\n puts ''my name is andres''\nwhen ''oscar''\n puts ''my name is oscar''\nelse\n puts ''this name is not oscar or andres''\n\nthe output of this code will be ''my name is oscar''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('class <class-name>', E'this command create a class with name <class-name>\nbelow a complete example of a basic class structure\nclass person\n attr_accessor :name, :age, :gender\n def initialize(name, age, gender)\n @name = name\n @age = age\n @gender = gender\n end\n\n def exampleMethod\n puts ''hello world''\n end\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('def initialize(<attr_1>, <attr_2>, ... , <attr_n>)', E'initialize attributes of the class', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('@<attr-name> = <var-name>', E'Inside the definition of a class, assigns value <var-name> to the attribute <attr_name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<class-name>.new', E'creates a new instance of the class <class-name> without initializing the value of the attributes\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<class-name>.new(<variable_1>, <variable_2>, ... . <variable_n>)', E'creates an instance of the class <class-name> and initialize the value of it''s attributes.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('#{n}', E'show the value of the variable n inside a string, for example, if n=10, and string if ''the number is #{n}'' the the string will show ''the number is 10''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('to_a', E'convert a range to an array, for example, if we have the range (1..5), if we make (1..5).to_a then it becomes in [1,2,3,4,5]', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('nil', E'equivalent to the null of other languages', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<list>.unshift(<first>)', E'add value <first> to the list <list> in the position 0', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('(<first>..<last>)', E'creates a range from <first> to last, for example, (5..10) creates a range which contains 5,6,7,8,9,10', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rubocop', E'execute in terminal to fix errors in ruby files inside current folder', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sudo apt install rubocop', E'Execute in the terminal to install rubocop program to show errors and automatically fix problems in your ruby code', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rspec --init', E'this command in the terminal add the required files to create a test for a ruby project', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('RSpec.describe <class> do', E'When working with rspec to make tests in ruby, create a file inside spec folder with the name ''<class>_spec.rb'' , then use the command ''RSpec.describe <class> do'' to put inside the test to the class <class>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('expect(<object>.<method>(<params>)).to eql(<method_return>)', E'When using rspec for doing tests, use the command ''expect(<object>.<method>(<params>)).to eql(<method_return>)'' to prove the method <method> of the object <object> when params are <params> and proof that the method actually return <method_return>. If return something different shows an error, otherwise shows that everything is ok.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tutorial ruby to create an executable', E'Having <file>.rb as your desire executable file follow the next steps:\n1) in the top of your file put the next: #!/usr/bin/env ruby\n2) from the terminal execute: ''sudo chmod 755 <file>.rb'' (you can use ''ls -l <ruby>.rb'' to confirm the change in the permissions)\n3) execute ./<file>.rb to confirm that now you can execute this file like this\n4) rename the file to delete the extension with the next terminal command: ''mv <file>.rb <file>''\n5) execute in the terminal: ''echo $PATH'' to confirm that the path ''/usr/local/bin/'' exists, otherwise create it with ''mkdir -p /usr/local/bin/''\n6) in the terminal execute: ''sudo ln -s $PWD/<file> /usr/local/bin/'' and to confirm everything works execute the file in the terminal with ''<file>''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<logic_question> ? <if_true> : <if_false>', E'The ternary operator in ruby. If logic statement condition is true then execute the code after the ?, otherwise execute the code after :', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable> = gets.chomp', E'From the terminal, allow getting the input of the user, as a string, in the variable <variable>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<number>.positive?', E'In this way you can asked if a number is positive or not. for example, ''1.positive?'' is true, but ''-2.positive?'' is false.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('blocks', E'Using blocks you can pass a line of code to a method \nfor example if you create the next method:\ndef operation(x,y)\n yield x,y\nend\nAn the you class the method like this:\noperation(2,3) do |x,y|\n ''the result of the sum is: #{x+y}''\nend\nIn that way you will get the sum of 2 and 3, or you also use the same method in the next way:\noperation(2,3) do |x,y|\n ''the product of the sum is: #{x*y}''\nend\nIn that way you will get the product of 2 and 3', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<number>.even?', E'true if <number> is even, false if <number> is uneven', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<number>.odd?', E'return true if <number> is uneven, otherwise false', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('? (ternary conditional)', E'<condition> ? <if_true> : <if_false>, for example: 2>1 ? ''hello world'' : ''bye bye'' -> this return ''hello world''\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ruby -v', E'confirm ruby version\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES (' gem update --system', E'update version of gem', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('install rvm', E'to install RVM follow the instructions if this website http://rvm.io/ ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('install yarn', E'follows the next tutorial: https://classic.yarnpkg.com/en/docs/install/#debian-stable', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('gem install bundler', E'command to install bundler in the terminal', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('root ''<controller_name>#index''', E'Connect controller with name <controller_name> with index html file', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('get ''<html_name>'', to: ''<controller_name>#<method_name>''', E'route file <html_name> to controller <controller> and its get action <method_name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('@<variable>', E'assign name to class variable, use in controller for variables that you can use in your html file', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<%=@<variable>%>', E'In this way you can use your variable <variable> (of the method of the controller that manages the page) in your view.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('resource :<table_name>', E'Add this in your route file to indicate a crud connection between the models, the views and the controllers of the table <table_name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('get ''<controller>/<method>''', E'map route ''<controller>/<method>'' to the controller <controller> and it''s method ''method''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('irb', E'Use this command to work in the console mode of ruby', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<string> =~ %{<text>}', E'regex expression which returns true if string <string> contains <text>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sudo snap install postman', E'command to install postman', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('add_column(:<table>s, :<column>, :<type>)', E'use this command in a migration file to add the column <column> of type <type> in the table <table>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('gem pristine --all', E'restores the installed gems in the bundle to their pristine condition using the local gem cache from RubyGems Useful to solve configuration problems and conflicts between different versions.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<model>.find(<id>)', E'find the object of model <model> with id <id>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('unless <condition>', E'Execute a code unless condition <condition> is true', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<%= check_box_tag ''<checkbox_name>'', ''<value_if_click>'' %>', E'create a checkbox which can be identified with th name <checkbox_name> and if click save the value <value_if_click>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.slice!(<position>) ', E'remove from array <array> the item in position <position>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.to_i', E'convert this variable to integer', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.to_s', E'convert the variable to string', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.to_a', E'convert variable to array', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.to_f', E'convert variable to float', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<string>.to_sym', E'convert string to symbol', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Math::PI', E'pi number', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('''<some_text> #{<variable>} <some_other_text> ''', E'use this format with quotation mark to use the variable <variable> as a string inside a string', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('%[<item1> <item2>... ]', E'short version of the array of strings [''<item1>'', ''<item2>''...]', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<string>.gsub(''''<old_content>'''',''''<new_content>'''')', E'in the string <string> replace any coincidence of <old content> with <new_content>. For example, str = ''''hello world'''', then you use str.gsub(''''hello'''',''''bye bye''''), then the new string will be ''''bye bye world''''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<string>.gsub(<regex_pattern>, ''''<new_content>'''')', E'in the string <string>, replace any coincidence of the pattern <regex_pattern> with the content <new_contenct>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.join('','')', E'join all items in an array separated by comma, for example: ''[1,2,3,4].join('''');'' generate the next string ''1,2,3,4''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('%w[<item1> <item2> <item3>]', E'equivalent to [''<item1>'',''<item2>'',''<item3>''];', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<var1> &&= <var2>', E'shortcut to: <var1> = <var1> && <var2>. It works equal with other logical operations (for example: ||=)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<var>.each{|<item>| <do_something>}', E'select each item of the array (or range, between others objects types) and so something with it.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.each_with_index{|<item>, <index>| <do_something>}', E'From an array, get each element and the index of the element and then do something with it.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.select{|item| <logic-validation>}', E'move through each element of <variable> and add these elements to a new array if for these elements it''s true the validation <logic-validation>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.all?{|<item>| <logic-validation>}', E'returns true if for all items in <variable> it''s true the validation <logic-validation>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.all?(<type>)', E'return true if all elements of <variable> are of type <type>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.all?(<value>)', E'return true if all items of variable <variable> are equal to <value>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.all?(<regex>)', E'return true if all the items of variable <variable> are string which accomplish the regular expression <regex>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.all?', E'return true if all items in variable <variable> are not false or null. Otherwise returns false.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.any?{|<item>| <logic-validation>}', E'return true if any item of <variable> pass the validation <logic-validation>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.any?(<type>)', E'return true if any item of <variable> is of type <type>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.any?(<value>)', E'return true if any item of <variable> is equal to <value>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.any?(<regex>)', E'return true if any item of <variable> is a string and follows the <regex> structure', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.any?', E'returns true if any item is not false or null. Otherwise return false.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.none?{|<item>| <logic-validation>}', E'return true if none item of <variable> pass the validation <logic-validation>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.none?(<type>)', E'return true if no item of <variable> is of type <type>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.none?(<value>)', E'return true if no item of <variable> is equal to <value>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.none?(<regex>)', E'return true if no item is a string which follows the structure <regex>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.none?', E'return true if no item of <variable> is different to null or false.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.count{|<item>| <logic-validation>}', E'count how many items of <variable> pass the validation <logic-validation>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.count(<type>)', E'count how many items in <variable> are of type <type>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.count(<value>)', E'count how many items are equal to <value>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.count(<regex>)', E'count how many items of <variable> are strings which follow the structure <regex>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.count', E'count how many items in <variable>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.map{|<item>| <item>*2}', E'return a new variable that contains each of the items in <variable> but multiplied for 2. Example, [1,2,3].map{|m| m*2} will return [2,4,6]', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.map(&:!)', E'convert items of value ''true'' in false, and item of value ''false'' in true.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.inject{|<total>, <item>| total*item }', E'multiply all the items of <variable>. For example, ''[1,2,3,4].inject{|total, val| total*val}'' will be equal to 1*2*3*4=24. The initial value of <total> is equal to the value of the first element.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.inject(<initial>){|<total>, <item>| total*item }', E'multiply all the elements of variable, the initial value of total will be <initial>. Example: ''[1,2,3].inject(10){|total, x| total*item}'' will be equal to 10*1*2*3=60', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.inject(<initial>, <operation>)', E'return the value of <total> where total will have as initial value of <initial> and will be operated by all items using the operation <operation>. Example ''[1,2,3].inject(5, :+)'' this will be equal to 5+1+2+3=11.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<variable>.inject(<operation>)', E'return <total> where total has an initial value equal to the first element of <variable> and then is modified for being operated by the next element through the operation <operation>. Example ''[1,3,5].inject(:*)'' equals to 1*3*5=15', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Proc.new{|params| <logic>}', E'creates a line of code that can be used in any part. For example ''multiple = Proc.new{|total,x| total*x}'' and then ''multiply.call(3,4)'' will be equal to 3*4=12', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<proc>.call(<params>)', E'executes a proc, which is a line of code. For example ''multiple = Proc.new{|total,x| total*x}'' and then ''multiply.call(3,4)'' will be equal to 3*4=12', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Float::INFINITY', E'represent infinity number, so if ''Float::INFINITY > <any_number>'' will return true', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('has_secure_password', E'Adds methods to set and authenticate. Requires bcrypt gem.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<instance_user>.authenticate(<password>)', E'check if <password> is the password of user <instance_user>. To use this is required to add ''has_secure_password'' in the top of your user model', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<instance_model>.destroy', E'delete from the database the model instance <instance_model> and all the associated instances.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('redirect_to :''<path>'', notice: ''<message>''', E'redirect to <path> route and send the variable flash[:notice] that you can use in the view. Other alternative to ''notice'' is ''alert''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('redirect_to :''<path>''', E'redirect to route ''<path>''. For example:\nredirect_to :''users/create''\nthe redirect to the route ''users/create'' and execute its respective controller and method (following the configuration you specified for this route in the route file).', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<model>.find_by(<param1>:<value1>, <param2>:<value2>...)', E'search for the instance of model <model> which have value <value1> in param <param1> and value <value2> in param <param2>...', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<var1> ||=<var2>', E'<var1> = <var1> || <var2>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('scope :ordered_by_most_recent, -> { order(created_at: :desc) }', E'add this in your model, in that way you can make ''<Model>.order_by_most_recent'' to get all the instances of the model, ordered by created_at in descending order.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('has_many :<associate_model>s, dependent: :destroy', E'on this way when an instance of current model is destroyed, then it will also destroyed all the associated instances of model ''<associate_model>''.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('require ''rest-client''', E'add this at the top of your file in order to use rest API client that you will consume.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<response> = RestClient.get(<address>, { params: { <param1>: <value1>, <param2>:<value2>... } })', E'having added in the top of your file:\nrequire ''rest-client''\nThen now you can use this line to consume the API with the address <addres> and giving it the necessary list of params. You can see the answer to the response using:\nputs <response>.code\nputs <response>.headers', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('File.open(<file>, ''''w'''') { |f| f.write(<content>)}', E'overwrite file <file> with the new content <content>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<Model>.where(<param>: <value>)', E'select all the instances of model <Model> where param <param> has value <value>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('validates :<param>, uniqueness: true', E'On the current model, add this to validate that param <param> is unique', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<%@<list>.each do |<item>|%>', E'in your view, if you want to add a stack of code for item in the list @<list>, then do it in this way:\n<%@<list>.each do |<item>|%>\n<here_your_code>\n<%end%>\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('validates :<param>, format: { with: <regex> }', E'in the current model, add this to validate that param <param> follows the format <regex>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('before_save { <some_code> }', E'add this in your model to execute the code <some_code> before saving. You can use this, for example, to edit some attributes (downcase your email, round a number attribute, etc).', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<string>.upcase', E'uppercase the string <string>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<string>.downcase', E'downcase the string <string>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<SOME_CONSTANT> = <value>.freeze', E'use this to make the variable a constant, so it cannot be modified. Is a good practice to make your constant uppercase, but is not necessary.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<valid_email_regex> = /A[w+-.]+@[a-zd-.]+.[a-z]+z/i', E'use this regex to make a basic validation of your email', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('belongs_to :<model>', E'Use in a rail model to indicate that the current model belongs to an instance of the model <model>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('has_many :<model_grandchild>s, :through => :<model_child>s', E'use this on the definition of your model when your model has many <model_child>s and each of those <model_child>s can have many <model_grandchild>s. In that way you can make:\n<current_model>.<model_grandchild>s\nto get all the <model_grandchild>s of all the <model_child>s of your current <current_model>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('yardoc ''app/controllers/*.rb'' - README.md', E'Generate the documentation for the API and also include the README file in the documentation.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.index(''<item_value>'')', E'return the index of the first position of <array> with value <item_value>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<hash>.each_key {|<nth_key>|...}', E'loop through all the keys of the hash', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<arr2> - <arr1>', E'return an array with the items of <arr2> which are not present in <arr1>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('until', E'repeat the loop until a condition is accomplished:\nuntil <condition>\n <some_code>\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('attr_accessor :<attribute_1>, :<attribute_2>, ...:<attribute_n>', E'put this inside the class to allow read (get) and write (set) directly the attributes of the class, outside the class.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('gem ''csv''', E'add this gem in gemfile for working with csv files', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('gem ''activeadmin''', E'gem for using the activeadmin framework. To use this gem you also need to add the gem devise.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('gem ''devise''', E'gem for authorization, an alternative to bcrypt', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('gem ''active_admin_import'' , github: ''Fivell/active_admin_import''', E'gem for import files in ''active admin'' framework.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bundle update --all', E'update all the gems specified in gemfile', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bundle update <gem_name1> <gem_name2>...', E'update the list of gem specified. These gems must be present in the gemfile.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bundle install', E'install all the non-installed gems specified in the gemfile', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('specify csv columns in active admin', E'If you want to specify the columns of csv files for the model <model> then in the path ''app/admin/<model>'' add the next:\ncsv do\n column :<column1>\n column :<column2>\n .\n .\n end', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('update all data using an csv in active admin', E'#to update data in table User\n#we will need a second table, the table ImportedUser with the same fields\nactive_admin_import validate: false,\n resource_class: ImportedUser ,\n before_import: ->(importer){ ImportedUser.delete_all },\n after_import: ->(importer){\n User.transaction do\n User.delete_all\n User.connection.execute(''INSERT INTO users (name, email, created_at, updated_at) SELECT name, email, created_at, updated_at FROM imported_users'')\n end\n }', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rspec describe', E'Use in rspec test to describe a group of tests, example:\ndescribe ''<tests_description>'' do\n <some_tests> \n end', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rspec it', E'use ''it'' to describe a specific test in rspec. Example:\nit ''<test_description>'' do\n <test_code>\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('to eql', E'Use this to test that a specific test returns an specific output. Example:\nit ''<test_description>'' do\n expect(<function>(<params>)).to eql(<expected_output>)\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('to_not eql', E'Use this to test that a specific test doesn''t return an specific output. Example:\nit ''<test_description>'' do\n expect(<function>(<params>)).to_not eql(<unexpected_output>)\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('to be_an', E'Use this to test that a specific test returns an output of an specific type (String, nil, Enumerator, etc). Example:\nit ''<test_description>'' do\n expect(<function>(<params>)).to be_an Enumerator\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('to_not be_an', E'Use this to test that a specific test doesn''t return an output of a specific type (String, nil, Enumerator, etc). Example:\nit ''<test_description>'' do\n expect(<function>(<params>)).to_not be_an Enumerator\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<string>.each_char', E'move through each char in a string. example:\n ''oscar''.each_char{|c| print c}\n#prints each char in the word ''oscar''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<hash>.values', E'create an array with all the values of the hash.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<hash>.keys', E'creates an array with all the keys of the hash', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('(''a''..''z'').to_a', E'create an array with all the English alphabet', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('(''a''..''z'')', E'create a range with all the English alphabet', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<hash> = {''<key1>'' => <value1>, ''<key2>'' => <value2>} ', E'declare a hash with two keys and its values. A hash can have as many keys as you want.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<hash> = {<key1>:<value1>, <key2>:<value2>, <key3>:<value3>} ', E'create a hash with three key and its values. A hash can have as many keys as you want.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<hash>.store(''<key>'', <value>)', E'update/create the key and return it''s value. For example:\nputs ''''#{a.store(''e'', 67)}''''\n#this create the key ''e'' and return the value 67.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('next', E'use this inside a loop to jump all the logic of the next lines inside the loop and continue with the next iteration. Example:\n [1,2,3,4].each do |x|\n next if x==1\n print x\nend\n#print all the number from 2 to 4', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('attr_reader :<attribute_1>, :<attribute_2>, ...:<attribute_n>', E'Use it to allow read (get) directly your attributes outside the class', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('attr_writer :<attribute_1>, :<attribute_2>, ...:<attribute_n>', E'allow write (set) directly your attributes outside your class', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('@@<variable>', E'class variable, it the same for all the instances, different to @ which create a different variable for each instance. Example, having class variable @@value with initial value=1 in class Test then:\nt1 = Test.new\np t1.value #1\nt1.value=2\nt2=Test.new\np t2.value #2', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.tap', E'return the array after doing something else with the array. For example: \n[1,2,3,4].tap{|t| t.delete_at(0)}\n#return [2,3,4]', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<matrix>.map(&:clone)', E'clone a multidimensional array', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('catch errors', E'To catch an error in ruby you might use the next syntax:\nbegin\n <code>\nrescue <error_type>\n <code_if_error_type>\n end', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.shift', E'removes the first element of the array and return it', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.slice!(<init>,<total>)', E'remove and return the range. For example:\narray = [1,2,3,4]\np array.slice!(1,3) #this returns 2,3,4\np array #this returns 1', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.max_by{|<item>| <logic>}', E'Use this to get the max by some criteria, for example:\n[''oscar'',''andres'',''russi''].max_by { |x| x.length }\n#returns the item with more characters, in this case ''andres''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.max_by{|<key>, <value>| <logic>}', E'Use a hash a return something following the <logic> criterion, for example:\nhash = {1: 9, 2: 4, 3:4}\nhash.max_by{|k,v| k*v}\n#it returns 12, because 3*4 is bigger than 2*4 and 1*9', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rand(<integer>)', E'generate a random integer between 0 and <interger>-1', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<string_arr>.sort{|a,b| a.length<=>b.length}', E'sort the array of strings using the length of the items as criteria.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('let(:<variable>) {<valure>}', E'in your RSpec tests, create available to be used through different tests.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('before(:each)', E'runs the block one time before each of your specs in the file, so if you have 5 test the code runs 5 times:\nbefore(:each) do\n <some_code>\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('before(:all)', E' runs the block one time before all of the examples are run. So even if you have 5 tests, this code will run only once:\nbefore(:all)\n <some_code>\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('visit ''<route>''', E'For RSpec/capybara tests, visit the route, for example:\nvisit ''/user/show?id=1''\n#visit controller user, action show and pass param id with value 1', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fill_in ''<field_name>'', with: ''<content>''', E'For rspec/capybara, fill the form field which name is <field_name> with the content <content>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<string_arr>.max{|a,b| a.length<=>b.length}', E'get the longest string from the array', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.sort!', E'sort array <array> in the variable <array>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('create array of arrays in ruby', E'Use the next: (0..<size>).map{|m| []}', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('flatten', E'When you have an array of arrays, you can get all the values of the arrays and make a new array with those values. Example:\n [[0,1],[2,3]].flatten\n# it will be equal to [0,1,2,3]', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('to_h', E'convert an array in a hash. The array must have arrays, each one with two elements, the first will be the key, the second will be the value. Example:\n[[0,1],[2,3]].to_h\n#will be equal to {0=>1, 2=>3}', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('click_button ''<value>''', E'in rspec/capybara, click the button with value <value>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('expect(page).to have_content(''<content>'')', E'In rspec/capybara, check if page has content <content>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('click_link ''<content>''', E'In rspec/capybara, click link with content <content>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('expect(page).to have_button(''<value>'')', E'In spec/capybara, check if the page has a button with content <value>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('visit ''/''', E'In spec/capybara, visit the root page of the project', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('first(:button, ''<value>'').click', E'In spec/capybara, click the first button in the page that has the value <value>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('expect(page).to have_selector(''<selector>'')', E'Check if the page has the selector <selector>. For example, if you have a div and inside an element with id=''table_colors'' then the next check will be true:\nexpect(page).to have_selector(''div>#table_colors'')', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('expect(page).to_not have_selector(''<selector>'')', E'Check if the page doesn''t have the selector <selector>. For example, if you have a div and inside an element with id=''table_colors'' then the next check will be false:\nexpect(page).to_not have_selector(''div>#table_colors'')', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('expect(page).to_not have_button(''<value>'')', E'In spec/capybara, check if the page doesn''t have a button with content <value>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('expect(page).to_not have_content(''<content>'')', E'In rspec/capybara, check if page doesn''t have content <content>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<word>.sub(''<old_text>'', ''<new_text>'')', E'In the string <wod> replace the first coincidence of ''<old_text>'' with ''<new_text>''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<word>.include? <sub_word>', E'true if the string <word> contains the string <sub_word>. Otherwise false.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<string>=~/<substring>/', E'true if string <string> contains the substring <subtring>, otherwise false', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<text>=~/[<list_of_chars>]/', E'1 if the text <text> contains any of the characters in <list_of_chars>, otherwise nil', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<text>=~/\d/', E'if the text <text> contains a digit then return the first index with a digit, otherwise nil', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<text>=~/\s/', E'if the text <text> contains tabs, white spaces, or newlines then return the first index with a coincidence, otherwise nil', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<text>=~/\w/', E'if the text <text> contains among [0-9], [a-z] or [A-Z] then return the first index with a coincidence, otherwise nil', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<text> = ~/\D/', E'if the text <text> contains anything except [0-9] then return the first index with a coincidence, otherwise nil', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<text> = ~/\S/', E'if the text <text> contains anything except tabs, white spaces or newlines then return the first index with a coincidence, otherwise nil', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<text> = ~/\W/', E'if the text <text> contains anything except characters from [0-9], [a-z] or [A-Z] then return the first index with a coincidence, otherwise nil', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<text> = ~/[0-9]/', E'Equivalent to \d, if the text <text> contains a digit then return the first index with a coincidence, otherwise nil', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<text> = ~/[a-z]/', E'if the text <text> contains a lowercase alphabet character then return the first index with a coincidence, otherwise nil', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<text>=~/[A-Z]/', E'if the text <text> contains an uppercase alphabet character then return the first index with a coincidence, otherwise nil', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('\A', E'match at the start of a string. For example: \n''asdf''=~ /\Aas/\n will return 0 (index of the match), but:\n''asdf''=~ /\As/\nwill return nil', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('\z', E'match at the start of a string. For example: \n''asdf''=~ /df\z/\n will return 2 (index of the match), but:\n''asdf''=~ /d\z/\nwill return nil', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('+ in regex', E'use + to request one or more in a pattern. example:\n''1''=~ /[1-9]+/\nreturns 0 (index of the match)\n''''=~ /[1-9]+/\nreturns nil', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('? in regex', E'use ? to request no more than one in the pattern, for example:\n''''=~ /\A[1-9]?\z/ #return 0 (index of the match)\n''1''=~ /\A[1-9]?\z/ #return 0 (index of the match)\n''12''=~ /\A[1-9]?\z/ #return nil\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{<min>, <max>} in regex', E'specify a min and max number of a specific pattern in your string. Example:\n''12''=~ /\A[1-9]{2,3}\z/ #returns 0 (index of the match)\n''2''=~ /\A[1-9]{2,3}\z/ #returns nil', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{<amount>} in regex', E'specify a specific amount for the pattern in your string. Example:\n''123''=~ /\A[1-9]{3}\z/ #returns 0 (index of the match)\n''23''=~ /\A[1-9]{3}\z/ #returns nil', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('() in regex', E'use this to group a pattern, for example:\n''1s3z''=~ /\A([1-9][a-z]){2}\z/ #true, it expects number-alphabet-number-alphabet\n''1sz''=~ /\A([1-9][a-z]){2}\z/ #false\n''1s3z''=~ /\A[1-9][a-z]{2}\z/ #false, it expects number-alphabet-alphabet\n''1sz''=~ /\A[1-9][a-z]{2}\z/ #true', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('* in regex', E'use * to accept 0 or more coincidences of the pattern. Example:\n''102304''=~ /A([1-9]{3})*z/ #true, it expects zero or more groups of three numbers\n''''=~ /\A([1-9]{3})*\z/ #true\n''20''=~ /\A([1-9]{3})*\z/ #false', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('accepting any character in regex', E'Use either [\d\D] or [\w\W] to accept any character in the pattern, for example:\n''x12''=~ /\Ax[\d\D]{2}\z/ #0, it expect an x first and then 2 any characters\n''s12''=~ /\Ax[\d\D]{2}\z/ #nil\n''s1s''=~ /\Ax[\d\D]{2}\z/ #nil\n''x1s''=~ /\Ax[\d\D]{2}\z/ #nil', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<string> =~ %r{<sub_string>}', E'you can use this instead of:\n<string> =~ /<sub_string>/\nand with this alternative you don''t need to escape / (otherwise you will need to use \/)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('/ clear in regex pattern', E'This is a special character, to check if a string has this character you can either use:\n<text> =~ /\//\nor use\n<text> =~ %r{/}', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Time.now', E'get current date and time', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<% if false %>', E'you can user this to comment (unable) your code, like this:\n<% if false %>\n<your_code>\n<% end %>\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rvm install <ruby_version>', E'using rvm, install another ruby version (it doesn''t change the current default)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rvm use <ruby_version> --default', E'replace the current ruby system version with <ruby_version> it must have been previously downloaded with rvm.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('change ruby version of the system using rvm', E'if you want to use <ruby_version> in your system, do the next:\n1) rvm install <ruby_version>\n2) rvm use <ruby_version> --default', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('request.referer', E'gives you the previous URL or / if none', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<string>[<substring>]', E'if <string> contains <substring> then this returns <subtring>, otherwise returns nil.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('super', E'use in a child class to call the parent method of the same name, in that way you can add some additional after (or before) the code to the parent method:\nclass Parent\n def say\n print ''hello world''\n end\nend\n\nclass Child < Parent\n def say\n super\n print '', how are you?''\n end\nend\nChild.new.say #this will print: ''hello world, how are you?''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<ChildClass> < <ParentClass>', E'In this way, you can create a child class that inherits all the attributes and methods of the parent class.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('post ''<html_name>'', to: ''<controller_name>#<method_name>''', E'route file <html_name> to controller <controller> and its post action <method_name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('put ''<html_name>'', to: ''<controller_name>#<method_name>''', E'route file <html_name> to controller <controller> and its put action <method_name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('delete ''<html_name>'', to: ''<controller_name>#<method_name>''', E'route file <html_name> to controller <controller> and its delete action <method_name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert_select ''<selector>''', E'In ruby default tests, check if the page contains at least one selector <selector>. example:\nassert_select ''h1 > .user-name'' #pass if page has an element h1 which child element with class user-name', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('::', E'Lets you access a constant, module, or class defined inside another class or module. For example:\nmodule SomeModule\n module InnerModule\n class MyClass\n CONSTANT = 4\n end\n end\nend\np SomeModule::InnerModule::MyClass::CONSTANT #print 4 ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<object>.ancestors', E'The ancestors method returns an ordered list of classes and modules, including itself', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('self', E'get the current object', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('def self.<method>', E'to declare a class-level method inside your class use the next syntax:\ndef self.<method>\n <your_code>\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('self.<some_name>', E'if you have both a method and a variable with the name <some_name> then self.<some_name> always call the method.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<object>.clear', E'If you have an array, hash, or string, you can remove all its elements or text using this command.\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<instance_class>.instance_eval', E'Can be use to add a method in <instance_class>, example:\n<intance_class>.instance_eval do\n def <new_method>\n <some_code> \n end\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<class>.class_eval', E'Can be use to add a method in <class>, example:\n<class>.class_eval do\n def <new_method>\n <some_code> \n end\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<module>.module_eval', E'Can be use to add a method in <module>, example:\n<module>.module_eval do\n def <new_method>\n <some_code> \n end\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ruby ./bin/webpack-dev-server --host 127.0.0.1', E'to run a project that it''s using webpack', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<instance>.methods', E'get the methods of an instance of a class', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<instance>.attributes', E'get the attributes of an instance of a class', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('def <method>(<optional_param> = nil)', E'giving a default value of nil, the param becomes optional', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.delete_at(<index>)', E'delete from <array> in the position <index>. Returning that element, or nil if the index is out of range.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<a>..equal?(<b>)', E'return true if <a> and <b> are the same object. For example:\na = ''asd''\nb= ''asd''\n a.equal? b #false, because a and b are different objects', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<a>.object_id', E'Returns an integer identifier. The same number will be returned on all calls to object_id for a given object, and no two active objects will share an id.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert_same <expected>, <actual>', E'return true if <expected> and <actual> are the same object', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert_not_same <expected>, <actual>', E'return true if <expected> and <actual> are not the same object', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('system(''<cmd_windows_command>'')', E'it can run most of the cmd windows command. It doesn''t work for changing the current directory, in that case, use Dir.chdir ''<route>''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Dir.chdir ''<route>''', E'when using cmd windows commands (for example, with system command) then use this one to change the directory, you can use both relative and absolute path. ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ruby' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sudo apt-get install sqlitebrowser', E'install tool to see the structure of sql databases', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sudo mysql', E'run mysql in ubuntu terminal\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select * from <table>', E'select all records and columns from table <table>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select * from <table> WHERE <condition>', E'select all columns and records from table <table> when the record accomplish the condition <condition>. For example, ''select * from countries WHERE population>10000'' select all countries which column ''population'' has a value bigger than 1000', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select <column> from <table>', E'For each row select column <column> from table <table>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select <column1>, <column2> from <table>', E'select columns <column1>, <column2> from table <table>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('GROUP BY <column1>, <column2>...', E'each selected row in output must contain a unique combination of columns <column1>, <column2>...', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('SELECT DISTINCT <COLUMN1> <COLUMN2> FROM <TABLE>', E'return unique combinations of <COLUMN1> and <COLUMN2> from the table <TABLE>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('SUBQUERY', E'Query over the data provided by another query. For example, if you have table cities and want to know how many cities have a population bigger than 10000 then you can use ''select count(*) from (select * from CITIES where POPULATION>10000)''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select count(*) from <table>', E'select number of rows in the table <table>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select LENGTH(<column>) from <table>', E'select the length of string column <column> from table <table>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select * from <table> order by <column1>, <column2>', E'select all rows and columns from table <table>, order using <column1> value (ascending order by default), if two rows have the same value in column <column1> then order using column <column2> as the second criteria.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select * from <table> order by <column1> DESC', E'select all rows and columns from table <table> and organize using the value of column <column1> (instead of default behavior which is to order using ascending order) ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select * from <table> order by <column> limit 2', E'select the first two rows in the query, in this case, the two rows with the lowest values in column <column>. First the row with the lowest value in <column>, second the row with the second-lowest value in <column>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select LEFT(<column>,<len>) from <table>', E'select the first <len> characters of the column <column> from each row of table <table>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select MAX(<column>) from table', E'Get max value of any column <column> in table <table>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select MIN(<column>) from table', E'get min value of column <column> from any row in table <table>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select RIGHT(<column>,<len>) from <table>', E'select the last <len> characters of column <column> for each row in table <table>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select <column1> from <table> where <column2> in (<value1>, <value2>, <value3>)', E'select <column1> for any row in <table>which <column2> has it''s value in the list of values (<value1>, <value2>, <value3>)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select <column1> from <table> where <column2> not in (<value1>, <value2>, <value3>)', E'select <column1> of rows of <table> which value of <column2> is not in the list (<value1>, <value2>, <value3>)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('case when <condition1> then <output1> when <condition2> then <output2> else <output3> end from <table>', E'use to choose one of the different options, for example: select case when age>17 then ''adult'' case when age>11 then ''teenager'' else ''kid'' end from people', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select LOWER(<column>) from <table>', E'select all the values of column <column> from table <table>, convert the content to lowercase. ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('(<query1>) union (<query2>)', E'if both queries return the same columns, the union will be the rows of <query1> followed by the rows of <query2>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select UPPER(<column>) from <table>', E'select all values from column <column> from table <table>, convert each value to uppercase.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select concat(<string1>, <column>, <string2>) from <table>', E'concat in only one column the string <string1> the column <column> from the table <table>, and the string <string2>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('set @<variable>=<value>;', E'initialize an sql variable with name @<variable> and value <value>. THe @ is mandatory.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('if(<condition>, <if_true>, <if_false>) as <var_name>', E'use this to replace ''case when'' if you only want to check two scenarios, if something is true or not. For example: ''''select if(number%2=0, ''even'', ''odd'') from numbers'''' this query will bring for each row the value ''even'' if column number, from table numbers, is even, otherwise the output will be ''odd''.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('SELECT (@<variable>:=@<variable> + 1) as <var_name>, <column1> from <table> order by <column2>', E'use this syntax to make an index for a query, so the first row which brings the query will be index 1, the next will be index 2, etc. Don''t forget to create the variable @<variable> before you use it in the query.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('exists(<query>)', E'use this in a condition to check if a query returns something (true) or not (false)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select * from <table1> as t1 inner join <table2> as t2 on t1.<column1>=t2.<column2>', E'join columns from rows of <table> with columns from rows of <table2> where column <column1> of <table1> is equal to column <column2> of <table2>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select count(distinct <column1>, <column2>...) from <table>', E'return the count of rows from <table> with uniques combinations of columns <column1>, <column2>...', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select SUM(<column>) from<table> where <condition>', E'return the sum of every value of column <column> from table <table>, where the rows accomplish the condition <condition>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select AVG(<column>) from <table> where <condition>', E'return the average of all values of column <column> from table <table>, where the rows accomplish the condition <condition>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select ROUND(<column>) from <table>', E'return every value in column <column> for table <table>, and round the value to the nearest integer.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select floor(<column>) from <table>', E'select each value of column <column> from table <table> and round it down to the biggest integer equal or below. For example, FLOOR(3.7) will be 3', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select ceiling(<column>) from <table>', E'select each value of column <column> from table <table> and round it up to the minor integer which is equal or bigger. For example, ceiling(2.4) is 3', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select REPLACE(<column>, <old>, <new>) from <table>', E'select all values of column <column> from table <table>, replacing in each value any coincidence of <old> with <new>. For example, REPLACE(''hello world'', ''hello'', ''bye bye'') return ''bye bye world''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('CAST(<column> as CHAR)', E'convert the value of <column> in string', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('CAST(<column> as DECIMAL)', E'convert the value of <column> to decimal', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('CAST(<column> as DATE)', E'convert the value of <column> to date', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('CAST(<column> as DATETIME)', E'convert the value of <column> to datetime', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('CAST(<column> as TIME)', E'convert the value of <column> to time', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('CAST(<column> as UNSIGNED)', E'convert the value of <column> to positive integer (or zero)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('CAST(<column> as SIGNED)', E'convert the value of <column> to integer (or zero) ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select ROUND(<column>, 2) from <table>', E'select all values from <column2> of <table>, round each value to two decimals.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select TRUNCATE(<column> ,<num>) from <table>', E'select all values from column <column> of table <table>, and truncate each value to <num> decimals.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select abs(<column>) from <table>', E'select all the values from <column> of <table>, and convert each value to it''s absolute value (for example 2 became in 2, and -3 became in 3).', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select SQRT(<column>) from <table>', E'return que square root of each value of <column> from <table>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select POWER(<column>, <num>) from <table>', E'select the power <num> of each value in column <column> from table <table>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select * from <table1> as t1 inner join <table2> as t2 on <conditions>', E'map the rows of tables <table1> and <table2> when they accomplish a list of conditions <conditions>. For example ''select * from students as s inner join grades as g on s.score>=g.min_score and s.score<=g.max_score'' maps the row of a student with that row which has the grade for its own score (if the student with name ''oscar'' score has score 88 then is mapped with grades row with the name ''awesome'' and min_score ''81'' and max_score ''89'').', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('having clause', E'For example:\n''SELECT column_name(s)\nFROM table_name\nWHERE condition\nGROUP BY column_name(s)\nHAVING condition''\nUse having when you want to do a ''where'' in aggregated values. In other words, ''having'' statements must only appear in queries quere you are using ''group by''. The order must be like in the example where -> group by -> having', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('heroku run rails c', E'run rails console in Heroku branch', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='heroku' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('heroku logs --tail', E'watch errors and messages for Heroku', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='heroku' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('deploy rails project in heroku', E'to deploy in heroku a rails project which has a repository in github then do the next:\n1) go to the folder with the project (in your computer)\n2) make sure you are in master branch\n3) executes ''heroku create''\n4) add: gem ''pg''\n5) remove: gem ''sqlite3'' \n6) add in ''group :development, :test do'': gem ''sqlite3'' \n7) run ''bundle install --without production''\n8) run: git commit -a -m ''''Update Gemfile for Heroku''''\n9) run: git push -u heroku <your-branch-name>:master\n10) finally run: heroku run rake db:migrate\n11) if you have some initial data in your seeds file, run: heroku run rake db:seed', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='heroku' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('heroku create', E'create a heroku project in the current folder', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='heroku' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('heroku run rake db:migrate', E'in a rails project deployed in heroku, use this command to create or update your database.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='heroku' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('git push -u heroku master', E'push to heroku (from master), make sure you are on master branch and inside the folder of the project.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='heroku' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('heroku run rake db:seeds', E'run seeds file in heroku projects, use this for example to add instances of the models to your project.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='heroku' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('heroku --version', E'get current heroku version', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='heroku' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('deploy react app in heroku', E'1) go to the folder of the git react project\n2) run the next command: heroku create <name-url-app> --buildpack mars/create-react-app\n3) git push heroku <branch>:master\n<name-url-app>: the name of the app in the url\n<branch>: the branch where you will deploy from', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='heroku' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('npm install -g @angular/cli', E'install angular command line', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ng new <app-name>', E'create a new angular project', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ng serve', E'being inside an angular project, use this command to run the server of the project', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ng --version', E'get your current version of angular', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('export class <name>Component', E'This element should appear in ''./src/app/<name-component>.component.ts''. This class contains the data and logic used by the component', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('component', E'usually, a part of the view which can be used in different pages', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('@component', E'This element should appear in ''./src/app/<name-component>.component.ts'' route and contains the next information: selector which shows the command to call this component, the templateUrl: the route to the view of the component, and styleUrls which contain the route to the style sheet for this component. The default appComponent looks like this: \n@Component({\n selector: ''app-root'',\n templateUrl: ''./app.component.html'',\n styleUrls: [''./app.component.css'']\n})', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('selector', E'the selector is found inside the object @component of your components, which you will find in ''./src/app/<name-component>.component.ts''. The selector is a tag that you need to use in the HTML to add this component.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{{<variable>}}', E'use this in the view of your component to use the variable <variable>, which must exist in the definition of your angular class for this component.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<<selector-name>></<selector-name>>', E'use your selector <selector name> on this way in order to render your selector in the place you had added this line.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('templateUrl', E'the templateUrl is found inside the object @component of your components, which you will find in ''./src/app/<name-component>.component.ts''. It shows the route for your HTML file.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('styleUrls', E'the styleUrls is found inside the object @component of your components, which you will find in ''./src/app/<name-component>.component.ts''. This is a list of routes and you can add here the list of files where you control the styling of your component (usually done with css files).', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ng g c <name-component>', E'Generate a new component with name <name-component>. As a consequence, a new folder is added inside ''./src/app''. Inside this folder, you will found the next four files: <name-component>.component.css for the styles of your component, <name-component>.component.html with the HTML of your component. <name-component>.component.spec.ts for testing, and <name-component>.component.ts with the logic of your component. Finally, when you create a module a line is added to the file ''''./src/app/app.module.ts''. This line should looks like this ''import {<name-component>Component} from ''./<name-component>/<name-component>.component'';'''' and inside that same file add a line ''<name-component>Component'' as another item in the list of ''declarations'' which is inside ''@NgModule''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('app.component.html', E'is, by default, the root component of the project.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('add selector as a class', E'To achieve this, write ''''selector: ''.<selector-name>'','''' in other words add a point at the beginning of your selector name. After that, you can do the next <div class=''''<select-name>''''></div> to add your component to the project, declaring this one as a class. ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('add selector as an attribute', E'To achieve this, write ''''selector: ''[<selector-name>]'','''' in other words add square brackets around your selector. After that, you can do the next <div <select-name> ></div> to add your component to the project, declaring this one as an attribute.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('template', E'to use an inline template, instead of a route to a file, you can replace ''templateUrl'' with ''template'' and then define your HTML code. For example ''template: ''<div>hello world</div>'';'' To write an inline template in multiple lines use backticks (``)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('styles', E'Instead of styleUrls, you can use styles and add the styles inline. For example, ''styles: [''a {color: red;}'']''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('interpolation in template', E'For example, ''''template: ''<div>hello {{name}}</div>'';'''' where ''name'' is the name of the variable which should be defined inside the class of your component.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<div [id]=''<variable>''></div>', E'bind the value of variable <variable> to the id of the div. Works the same for other attributes like ''disabled'' and others.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bind-<attribute>=''<variable>''', E'bind the value of the attribute, for an element in the view, with the value of variable <variable>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('[class.<class-name>]=''<variable>''', E'apply to the current element the style of the class <class-name> when variable <variable> it''s true', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ngClass directive', E'Create a variable with the name of the class and the expression to define, for each class, if apply or not the class. For example, public classes = {''class1'': this.var1, ''class2'': this.var2>10}. On this way, add class1 if var1 is true and add class2 if var2>10, where class1 and class2 are classes in defined in the styles for the component. Then in the view add: [ngClass]=''''classes''''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('[style.<style-name>]=''<variable>''', E'For the current tag, define value of style <style-name> with the value of the variable <variable>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ngStyle directive', E'Create a variable with the name of the style and the expression to define its value for each style. For example, public styles = {''style1'': this.var1, ''stylle2'': this.var2}. In this way, the value of style1 will be the value of var1 and the value of style2 will be var2. Then, in the element use: [ngStyle]=''''styles''''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('(click)=''''<method>()''''', E'Add this inside a button or some other HTML tag. It will call the method <method> when the user clicks.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('(click)=''''<variable>=<new-value>''''', E'Instead of calling a method, you can put your code inline with the click event, this is useful if the method would only execute one line and that line is not called in any other place. In this case assign to the variable <variable> (which must exist in the component class) the value <new-value>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<div #<identificator> ></div>', E'create a reference for the element, then you can, for example, use it like this ''<button (click)=''''<method>(<identification>.value)'''' ></button>'' in that way you can get the value of the element with the reference and pass it as a parameter of the method <method> when this is called by click in the created button.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('formsModule', E'this is a module that allows using ngModel and other useful directives in the modules. To use this module add ''''import {FormsModule} from ''@angular/forms'';'''' in ''app.module.ts'' and then, add ''FormsModule'' inside @ngModule, in the property ''imports'' as another item of this list.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES (' [(ngModel)]=''<variable>'' ', E'ngModel create a two way binding between a variable and the value of the element in the view, so if you modify the value of the element then <variable> is updated, and if you update <variable> then the value of the element is updated. To use ngModel, you need to define the name attribute of the tag where you want to use this directive.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('*ngIf=''<variable>''', E'add the directive to a tag and then if <variable> is true then the element will be load in the DOM, if false then it will not be load in the DOM, and element will disappear from the view.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('*ngIf=''<variable>; else <reference>''', E'let''s say, you have ''<div #<reference> >hello world</div>''. If variable it''s true then the element with the ngIf appears, otherwise appear the element with the reference <reference> (in this case the div with the message ''hello world'')', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<ng-template></ng-template>', E'an angular tag with no default properties.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('*ngIf=''<variable>; then <reference1>; else <reference2>''', E'having two elements, the first with reference <reference1> and the second with <reference2>, then if <variable> is true then element with <reference1> will be loaded , otherwise element with <reference2> will be loaded.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ngSwitch directive', E'for example ''<div [ngSwitch]=''<variable>''><span *ngSwitchCase=''<val1>''>hello world</span><span *ngSwitchCase=''<val2>''>welcome</span><span *ngSwitchDefault>nice day</span></div>'' then if <variable> value if <val1> then appears first span with message ''hello world'', if <variable> equals to <val2> then appears second span with message ''welcome'', if non of the previous then appears third span which message is ''nice day''.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ngFor directive', E'example ''<div *ngFor=''let color of colors; index as i''><a>{{i}} {{color}}</a></div>'' where colors is a variable defined in the component class, in this example ''color=[''red'',''blue'',''green'',''yellow''];'' then color is each value of colors. i is the index of each item in colors. the ''; index as i'' part is not necessary if you don''t need the index of each item. With this syntax you will execute the ''div'' tag for each item of colors, in each case showing first the index and then the value of the item.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Input', E'use Input to pass parameters from the father component to the child. First, in the father component add the attribute: [<some-name>]=''<variable>''... to the tag of the child component. <variable> is a variable defined in the class component of the father, <some-name> is the name which will allow child component to identified the passed parameter. Then, in the child component, go to the file with the component class and in the Import part add ''Input''. Then you can assign the passed param with the next syntax ''@Input() public <some-name>'' or as an alternative if you want to give it a different from the name you give in the father then use ''''@Input(''<some-name>'') public <new-name>;''''. In any of this ways the value of variable <variable>, from the father, will be passed to a local variable of the child.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Output', E'Use this to modify father variables from the child. First, in the class component of the child, import ''EventEmitter'' and ''Output'' in ''Import'', something like ''Import{ Output, EventEmitter, ...'', then add the next inside the class of the child component, ''@Output public <child-variable> = new EventEmitter();'',necessary to emit the event to send the data. Then to send info you need the next ''this.<child-variable>.emit(<child-value>)'', this can be used for example inside a method which is called by a click of a button. Then, finally, in the parent, go to the tag of this child component and add the next attribute ''(child-variable)=<father-variable>=$event''. In this way the father variable <father-variable> will be assigned the value ''<child-value>''.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{{<variable> | lowercase}}', E'with this pipe, convert <variable> to lowercase in the view', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{{<variable> | uppercase}}', E'with this pipe, convert <variable> to uppercase in the view', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{{<variable> | titlecase}}', E'with this pipe, convert <variable> to titlecase (first character of each word will be uppercase, rest of the characters will be lowercase) in the view', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{{<variable> | slice:<initial-index>}}', E'with this pipe, get from <variable> all the characters from the character in position <initial-index> till the last.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{{<variable> | slice:<initial-index>:<after-last-index>}}', E'with this pipe, take all the characters from <variable> from the character in index <initial-index> till the characters in the index <after-last-index>-1.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{{<variable> | json}}', E'show the json representation of the object <variable> in the view.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{{<variable> | number:''<min-int>.<min>-<max>''}}', E'Use this pipe in the view to convert variable <variable> number to the format define with minimal number of integers <min-int>, minimal numbers of decimals <min>, and a maximum number of decimals <max>. For example ''''{{12.346 | number:''1.1-2''}}'''' will convert ''12.346'' to ''12.35'', if ''''{{12.346 | number:''3.2-3''}}'''' then ''012.346'', if ''''{{12.346 | number:''2.4-5''}}'''' then ''12.3460''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{{<number> | percentage}}', E'With this pipe get the percentage representation of the proportion <number>. So if ''{0.25 | percentage}}'' then convert ''0.25'' to ''25%''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{{<number> | currency: ''<code>''}}', E'Use this pipe to show a currency symbol before the number <number>, define the currency you want with its respective code, you can also use it like this ''''{{<number> | currency:}}'''' and use $ (which is the default options) as the currency.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{{ date | date:''<short>'' }}', E'Use this pipe to show the current date and time with a short format. Something similar to this ''12/3/17 09:40 PM''. Some alternative formats are ''medium'' and ''long''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{{ date | date:''<shortDate>'' }}', E'show only the current date with short format. Some alternative formats are ''mediumDate'' and ''longDate''.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{{ date | date:''<shortTime>'' }}', E'use this pipe to show the current time in short format. Some alternative formats are ''mediumTime'' and ''longTime''.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('n g s <service-name>', E'create a new service. This generates a new file inside ''./src/app'' which name is ''<service-name>.service.ts'' which contains the class and the logic for the service, and also a file ''<service-name>.service.spec.ts'' which is for the tests.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('register service', E'To register a service to be used in any component first import the service in ''app.modules.ts'', to do that use the next syntax ''''import {<service-name>Service} from ''./<service-name>.service'';''''. After this, add the service to the provider like this ''providers: [<service-name>Service...''. Providers are also in ''app.modules.ts''.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ngOnInit()', E'this method is inside the class component and it executes when the component is initialize.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('@Injectable', E'Also known as ''injectable decorator''. It''s required inside a service so it can use other services inside this service.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('constructor(private <local-name>: <service-name>)', E'If service <service-name> exists and it was injected on the module (or any superior component) then you can use the injector on this way inside your component, declaring the injector in the constructor of your component class. <local-name> will be the name of the service inside your component class, and <service-name> is the name of your component.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('services in angular', E'To use a service first create the service, for example, if you want the service ''student'' then use ''ng g s student'', this creates the ''studentService.service.ts'' inside you ''./src/app'' folder. Inject your service add ''''import {studentService} from ''./student.service'';'''' and ''providers: [studentService...'' in the file ''app.modules.ts''. Finally pass the service as a parameter of the constructor of your component class using the next syntax ''constructor(private _studentService: studentService)'', where ''_studentService'' is the name of this service inside your component class, and ''studentService'' is the name of the service.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ng g class <class-name>', E'generate a class, don''t forget to import the class in the service or component where you want to use this class.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ngOnDestroy', E'similar to ngOnInit, this method is called when a component is destroyed (closed)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('HTTP in Angular', E'In ''app.modules.ts'' do the next. First of all, add ''import {HttpClientModule} from ''''@angular/common/http'''','' at the begin of the document. Then, in the same module, in @ngModule=>import add the next ''HttpClientModule'' as another item in the list ''import''. Then pass this as a parameter in the component where you want to make an HTTP call. Therefore something like this: ''constructor(private http: HttpCliente)'', in the same component, at the begin, add ''import {HttpClient} from ''''@angular/common/http'''';''. Finally, to make a get, use the next command: ''this.http.get<data_type>(<api_url>).subscribe( data => <some-variable> = data);'' in that way you save in the local variable <some-variable> the value ''data'' which is of type <data_type> after get call to the URL <api_url>.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('this.http.get<data_type>(<api_url>).subscribe( data => <some-variable> = data);''', E'where http is the HttpClient module that you import and injected in the constructor of your component. Then use this to save in the variable <some-variable> the value of <data> which is the data which brings the call to the api.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('catch and throw errors in HTTP Requests', E'Add all of this in the component:\n1) in the top: import {HttpClient, HttpErrorResponse} from ''@angular/common/http'';\n2) in the top: import {Observable} from ''rxjs/Observable'';\n3) in the top: import ''rxjs/add/operator/catch'';\n4) in the top: import ''rxjs/add/observable/throw'';\n5) in the constructor: constructor(private http: HttpClient)\n6) add function: <method>(): Observable<<data-type>>{return this.http.get.<<data-type>>(<URL>).catch(this.errorHandler).subscribe(data=><some-variable>=data, error=><some-variable2>=error;)};\n7) create method ''errorHandler'': errorHandler(error:HttpErrorResponse){return Observable.throw(error.message || ''''server error'''');}', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<method>($event)', E'when method <method> is called as a result of an event, then the param ''$event'' brings the information of that event.For example, you have: <button (click)=''''method(#event)''''></button>... and in your component class you have: <method>(e){console.log(e);}... this is going to show the information of the event in the console. As a property example ''e.type'' which should said ''click'' if the event was a click.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('catch()', E'To catch an error, add function: ''''<method>(): Observable<<data-type>>{return this.http.get.<<data-type>>(<URL>).catch(this.errorHandler).subscribe(data=><some-variable>=data, error=><some-variable2>=error;)};'''' where errorHandler is the name of a method you have created and can use to throw the error.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('throw', E'To throw and error after an http request use : ''''errorHandler(error:HttpErrorResponse){return Observable.throw(error.message || ''''server error'''');}'''' which must be called inside the catch, or the catch should call a method which contains the throw method.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ng new <app-name> --routing', E'generate routing configuration to create routes for different components', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('add routing manually in angular', E'1) in index.html add ''<base hreft=''''/''''>''\n2) create module ''app-routing.module.ts''\n3) in that file add the next ''import {NgModule} from ''''@angular/core'''';''\n4) and add ''import {Routes, RouterModule} from ''''@angular/router'''',''\n5) and add ''const routes: Routes = []''\n6) and add ''@NgModule({imports: [RouterModule.forRoot(routes)], exports: [RouterModule]});''\n7) and add ''export class AppRoutingModule {}''\n8) in ''app.module.ts'' add in the begin ''import {AppRoutingModule} from ''''./app-routing.module'''';''\n8) in ''app.module.ts'' add in @NgModule=>imports list the next item ''AppRoutingModule'' as another item of the array ''imports''.\n9) In ''app.component.html'' add ''<router-outlet></router-outlet>''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ng g c <component-name> -it', E'generate a component with inline template', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ng g c <component-name> -is', E'generate a component with inline styles', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ng g c <component-name> -it -is', E'generate a component with inline template and inline styles', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('add routes in angular', E'1) execute ''ng new <app-name> --routing'' \n2) if you want a route for component <component-name> then add inside routes, in your file ''app-routing.module.ts'' as another item in the array ''routes'', the next code ''{path: <path-name1>, <component-import-name1>}'' for component <component-import-name1> and for any other component.\n3) also in the ''app-routing.module.ts'' file add ''import {<component-import-name1>} from ''<component-route1>'';'' for <component-import-name1> and for any other component\n4) at the end of ''app-routing.module.ts'' file add ''export const routingComponents = [<component-import-name1>, <component-import-name1>... ];'' fro all the imported components.\n5) in ''app.module.ts'' replace ''import {AppRoutingModule} from ''''./app-routing.module'''';'' with ''import {AppRoutingModule, routingComponents} from ''''./app-routing.module'''';'' \n6) in ''app.module.ts'', go to the array ''declarations'' (which is inside ''@NgModule'') and add ''routingComponents'' as another item of your array ''declarations''.\n7) now you can go to ''localhost:<server-port>/<path-name1>'' for your component and the same with the other component where you create them a route.\n8) user router-link for an HTML element you want to use for redirecting, for example ''<a router-link=''''<path-name1>''''>go to component1</a>''\n9) besides router-link you can also add the tag ''routerLinkActive=<classes>'' to specify the classes to use in the link after clicked.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<router-outlet></router-outlet>', E'default selector for routing, added when you run '' ng new <app-name> --routing''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<a router-link=''''<path-name1>''''>go to component1</a>', E'in the example it''s do it with ''a'' but can work with other elements like buttons for example. Use this to redirect to other component using routing', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('routerLinkActive=<classes>', E'add this attribute to an element with already have the attribute ''router-link''. With this attribute, you can define the classes which affect this element when the element is clicked.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('path: ''''**''''', E'Also known as the ''wildcard route''. Inside ''app-routing.modulte.ts'' file, in the list of routes add this item ''{path: ''''**'''', component: <default-component>}'' as the last item of the list (remember, the last). This will redirect any nonexistent route to the component <default component>. Don''t forget that <default-component> is another routed component, so you must make all the default configuration as you do with the other routed components.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('path: ''''''''', E'add ''{path: '''''''', component: <default-component>}'' this in ''app-routing.module.ts'' on the list of routes, as another item, in the first place. So when URL is not present the redirects to component <default-component>. Don''t forget to add all other configuration to make <default-component> work as any other routed component.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{path: '''''''', redirectTo: ''<default_component>'', pathMatch: ''full''}', E'add this route in ''app-routing.module.ts'' to redirect to your component <default_component>. Rules:\n1) add this in your list of routes\n2) it must be the first item of the list\n3) the specific item in routes list for your component <default_component> must exists, with its specific configuration as any other routed components.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('route parameters', E'1) In ''app-routing.module.ts'' add the next to your list of routes ''''{path: ''<name-route>/<variable>'', component: ''<default-component>''}''''. Also add all the configuration for routed components.\n2) In the component, where you want to redirect from, add in the constructor ''private route: Router'' and import this component with ''import {router} from ''''@angular/router'''';'' \n3) in the part of the code when you want to define the redirection use ''this.router.navigate[''/<rou-name>'',<local-variable>]'' where <local-variable> is the name of a variable in the current component which value you want to send.\n4) To get the send parameter, in the routed component, which received the value of <local-variable> add ''import {ActivatedRoute} from ''''@angular/router'''';'' and in the constructor inject ''constructor(private route: ActivatedRoute)''\n5) finally, to read the variable in the routed component add this inside your ngOnInit ''let <other-variable> = this.route.snapshot.paraMap.get(''<variable>'')'' in this way you saved in <other-variable> variable the value of your param <variable>\n\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{path: ''<name-route>/<variable>'', component: ''<default-component>''}', E'add a route to a parameter that receive a parameter. Add default configuration of any routed component for component <default-component>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('this.router.navigate[''/<rou-name>'',<local-variable>]', E'this command redirects to another component and sends a param. \n1) In the component, where you want to redirect from, add in the constructor ''private route: Router'' and import this component with ''import {router} from ''''@angular/router'''';'' \n2) in the part of the code when you want to define the redirection use ''this.router.navigate[''/<rou-name>'',<local-variable>]'' where <local-variable> is the name of a variable in the current component which value you want to send.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('let <other-variable> = this.route.snapshot.paraMap.get(''<variable>'')', E'In this way, you can get the parameter send (using the url) from the component which redirects to the current component.\n1) To get the send parameter, in the routed component, which received the value of <local-variable> add ''import {ActivatedRoute} from ''''@angular/router'''';'' and in the constructor inject ''constructor(private route: ActivatedRoute)''\n2) finally, to read the variable in the routed component add this inside your ngOnInit ''let <other-variable> = this.route.snapshot.paraMap.get(''<variable>'')'' in this way you saved in <other-variable> variable the value of your param <variable>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('redirect to the same component', E'when you want to redirect to the same component (but update the params)\n1) use the next in the ngOnInit:\nthis.route.paramMap.subscribe((params: ParamMap) => {\nlet <local-variable> = params.get(''<param>'');\n})\n2) import paramMap with ''import {ParamMap} from ''''@angular/router'''';''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('this.route.navigate([''<component>'', {<param1>:<local-var1>, <param2>:<local-var2>}]);', E'In this way, you can send optional parameters (not required) to the component <component>. You don''t create a special route for the mix of the component <component> and the params (like you do when param is necessary) since those are only optional. But the rest of the configuration must be the same (import ActivatedRoute and ParamMap).', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('this.route', E'get current route', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('this.router.navigate([{<param>: <variable>}],{relativeTo: this.route})', E'if you are in url ''/<route>'' and want to go to URL ''/<route>/<param>'' then use this command to redirect there.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('this.router.navigate([''../'', {<param>: <variable>}],{relativeTo: this.route})', E'if you are in url ''/<route>/<param>'' and want to go to URL ''/<route>/<param>'' but with an updated value of param then use this command to redirect there.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('add child routes', E'when you want to redirect to a route only from another route:\n1) in ''app-routing.module.ts'' add the next item in the list of routes ''{path: <route-father-component>, component: <father-component>, children: [{path: ''<route-child1-component>'', component: <child1-component>}, {path: ''route-child2-component'', component: <child2-component>}]}''\n2) add all the routing configuration for the three components\n3) in the template of <father-component> add ''<router-outlet></router-outlet>''\n4) finally, to go to child component from father component add in the father component (inside some method which is trigger by a click, or something similar): ''this.route.navigate([''<route-child1-component>''],{relativeTo: this.route})'' and do similar for child2 component.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('children: [{path: ''<route-child1-component>'', component: <child1-component>}...', E'Use this when you want to define when you want to redirect to a route only from another route:\n1) in ''app-routing.module.ts'' add the next item in the list of routes ''{path: <route-father-component>, component: <father-component>, children: [{path: ''<route-child1-component>'', component: <child1-component>}]}''\n2) add all the routing configuration for the three components', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('this.route.navigate([''<route-child1-component>''],{relativeTo: this.route})', E'Use this to navigate to a child component from the father component\n1) in the template of <father-component> add ''<router-outlet></router-outlet>''\n2) finally, to go to child component from father component add in the father component (inside some method which is trigger by a click, or something similar): ''this.route.navigate([''<route-child1-component>''],{relativeTo: this.route})''.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('remove component', E'after creating a component, if you want to delete the component\n1) delete the folder generated. For example, if you run ''ng g c game'' then remove ''game'' folder inside app folder\n2) in app.module.ts delete this line ''import {GameComponent} from ''''./game/game.component'''';''\n3) in app.module.ts delete ''GameComponent'' from the list of declarations, inside the decorator @NgModule', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ng serve --port <number>', E'run angular server in the port <number>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='angular' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('public <variable>=<value>;', E'initialize a variable with name <variable> with initial value <value>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='typescript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('readonly', E'add this in the declaration of an attribute in a class to make it impossible to modify once assigned, for example:\nreadonly <variable>: <type>;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='typescript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('npm install -g typescript', E'install globally typescript in your system, require to use typescript in your computer', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='typescript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('use typescript in node.js', E'1) if not done it before, install globally typescript: npm install -g typescript\n2) npm init\n3) yarn add -D typescript\n4) npx tsc --init //create tsconfig.json\n5) npm i --save-dev @types/node\n6) in the package.json file, in ''scripts'' section add-> ''build'': ''tsc''\n7) yarn build // to compile your project nad generate the js script file\n8) run the generated file with node <name-file>.js\n9) as an alternative install ts-node with: yarn add -D ts-node\n10) in package.json add this to the scripts section: ''start'': ''ts-node test.ts''\n11) yarn start //compile your file and then execute the generated js', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='typescript' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('node -v', E'run this in the terminal to check the node version in your system', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('node <file_name>', E'run a javascript file in the terminal', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('console.log(__dirname);', E'show directory of the current file', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('console.log(__filename);', E'returns in the terminal the full path and the name of the current file', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('require', E'if you want to use functions of another file then do the next:\n1) in your ''current file'' add: let <any_name> = require(''<another_file>'');\n2) in the ''another file'' you can then make the next:\n<declare_function_function1>\nmodule.exports = <function1>\n3) then in the ''current file'', where you are using the export, you can use your variable <any_name> and it will do the same of <function1> of the ''another file''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('module.exports.<any_name> = <variable_or_function>', E'when you want to export a variable or function you can assign not to the whole ''module.exports'' but to a variable that will be created as long as you declared for the assignment.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('events module', E'To emit an event follow the next tutorial:\nlet events = require(''events''); //call event module\nlet myEmitter = new events.EventEmitter(); //create instance of event emitter\n//below create the event someEvent, this event execute a function with a param\nmyEmitter.on(''someEvent'', function(<var>){\n<some-code>\n});\n//trigger the event someEvent, pass param to the event, so <var> will be equal to <param>\nmyEmitter.emit(''someEvent'', <param>);\n\n//in this way you can declare many ''on'' (each one with its own code, if you need it), \n//and then use the ''emit'' in your project to, trigger the event as many times as you need it (in //many parts, with the ''on'').\n//you can, for example, update many tabs of your website just triggering one event.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('module util and inherit events', E'We can use the module util to make a function or class to inherit events, check the next example:\nlet event s= require(''''events);\nlet util = require(''util'');\nlet Person = function(name){this.name=name;}\nutil.inherits(Person, events.EventEmitter);\nlet james = new Person(''james'');\nlet mary = new Person(''mary'');\nlet ryu = new Person(''ryu'');\njames.on(''speak'', function(msg){console.log(james.name + '' said: '' + msg);});\nmary.on(''speak'', function(msg){console.log(mary.name + '' said: '' + msg);});\nryu.on(''speak'', function(msg){console.log(ryu.name + '' said: '' + msg);});\njames.emit(''speak'', ''hey dudes'');\nmary.emit(''speak'', ''hi'');\n// this code will show in console ''james said: hey dudes'' and in the next line ''mary said: hi''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('readFileSync', E'Use this command to read a file in synchronous way. For example:\nlet fs = require(''fs'');\n//program doesnt continue until file is read\n//encode with utf-8, otherwise you get 0''s and 1''s\nlet readMe = fs.readFileSync(''readMe,txt'',''utf-8''); \nconsole.log(readMe); //show content of readMe.txt file', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('writeFileSync', E'Use this command to write a file in synchronous way. For example:\nlet fs = require(''fs'');\n//program doesnt continue until file is write\n//if file doesn''t exist, create it\nfs.writeFileSync(''file,txt'',''hello world''); \nlet readMe = fs.readFileSync(''file,txt'',''utf-8''); \nconsole.log(readMe); //show ''hello world''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('readFile', E'Use this command to read a file in asynchronous way. For example:\nlet fs = require(''fs'');\nlet readMe = fs.readFile(''file,txt'',''''utf-8, function(err, data){\nconsole.log(data); //show content of the file\n}); \n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('writeFile', E'Use this command to write a file in an asynchronous way. For example:\nlet fs = require(''fs'');\n//if doesn''t exists then create it\nfs.writeFile(''file,txt'',''hello world'', function(err){\n//if no error then err==null\nif(err) console.log(err);\nconsole.log(''file was successfully updated'')\n}); ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fs.unlink(''<file>'');', E'Use this command to delete a file in an asynchronous way, like this:\nvar fs = require(''fs'');\nfs.unlink(''<file>'', function(){\n<some_code_after_delete_file>\n});\n//if the file does not exist then the program will throw an error', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fs.mkdir(''<new_directory>'');', E'to create a directory in an asynchronous way use this:\nlet fs = require(''fs'');\nfs.mkdir(''<new_directory>'', function(){\n<some_code_after_create_directory>\n});', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fs.rmdir(''<directory>'');', E'to remove a directory in an asynchronous way use this:\nlet fs = require(''fs'');\nfs.rmdir(''<directory>'', function(){\n<some_code_after_remove_directory>\n});\n//if the directory is not empty then the program will not delete and will throw an error', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('module.exports = {<name1>: <func_or_var1>, <name2>: <func_or_var2>...}', E'This is another way to add the function that you want to export so it can be used for any file that requires this module.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fs.unlinkSync(''<file>'');', E'remove a file in a synchronous way, like this:\nlet fs = require(''fs'');\nfs.unlinkSync(''<file>'');\n//if the file doesn''t exists then the program will throw an error', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fs.mkdirSync(''<new_directory>'');', E'create a directory in synchronous way\nlet fs = require(''fs'');\nfs.mkdirSync(''<new_directory>'');', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fs.rmdirSync(''<directory>'');', E'to remove a directory in synchronous way use this:\nlet fs = require(''fs'');\nfs.rmdirSync(''<directory>'');\n//if the directory is not empty then the program will not delete and will throw an error', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('create a raw server', E'to create a server in node.js without any framework use the next code:\nlet http = require(''http'');\nlet server = http.createServer(function(req, res){\nres.writeHead(200, {''Content-Type'':''text/plain''});\nres.end(''hello world'');\n});\nserver.listen(3000, ''127.0.0.1'');\n//this simple setup create a server\n//listen to the port 3000 in the localhost\n//every time it''s called its answer with the message ''hello world'' in plain text\n//every time with status 200 (ok)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('obtain specific url request', E'to create a server in node.js without any framework use the next code:\nlet http = require(''http'');\nlet server = http.createServer(function(req, res){\nif(res.url=''/say/hi''){\nred.writeHead(200, {''Content-Type'':''text/plain''});\nres.end(''hello world'');\n}\nelse if(''/say/bye''){\nred.writeHead(403, {''Content-Type'':''text/plain''});\nres.end(''you cannot go'');\n}\n});\nserver.listen(3000, ''127.0.0.1'');\n//this simple setup create a server\n//listen to the port 3000 in the localhost\n//if request is to ''localhost:3000/say/hi'' then answer has status 200(ok) and plaint text message //''hello world''.\n//if request is to ''localhost:3000/say/bye'' then answer has status 403(forbidden) and plaint text //message ''you cannot go''.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('read Stream', E'streams are useful because sometimes we have to transfer a lot of information so instead of wait to transfer everything we can get access to the transferred part, to do this we can send information in chunks (pieces of data). To read a stream do the next:\nlet fs = required(''fs'');\nlet myReadStream = fs.createReadStream(__dirname+''/text.txt'', ''utf-8'');\nmyReadStream.on(''data'', function(chunk){\nconsole.log(''new chunk received'');\nconsole.log(chunk);\n});\n//in this way, for every chunk it shows in the terminal the message ''new chunk received''\n// and show the chunk obtained from the file. In this case, the file is a text in the current\n//directory and with name text.txt', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('write stream', E'streams are useful because sometimes we have to transfer a lot of information so instead of wait to transfer everything we can get access to the transferred part, to do this we can send information in chunks (pieces of data). To write a stream do the next:\nlet fs = required(''fs'');\nlet myReadStream = fs.createReadStream(__dirname+''/text.txt'', ''utf-8'');\nlet myWriteStream = fs.createWriteStream(__dirname+''/write.txt'');\nmyReadStream.on(''data'', function(chunk){\nconsole.log(''new chunk received'');\nmyWriteStream.write(chunk);\n});\n//in this way, you copy the content of one file to another by chunks\n//for each chunk send and copied in the new file the terminal shows \n//the message ''new chunk received''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pipe', E'if you want to write a writeStream using a readStream, you can do it with this command:\nlet fs = required(''fs'');\nlet myReadStream = fs.createReadStream(__dirname+''/text.txt'', ''utf-8'');\nlet myWriteStream = fs.createWriteStream(__dirname+''/write.txt'');\nmyReadStream.pipe(myWriteStream);\n//in this way, you copy the content of one file to another by chunks', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('send stream through server call', E'let http = require(''http'');\nlet fs = require(''fs'');\nlet server = http.createServer(function(req, res){\nres.writeHead(200, {''Content-Type'':''text/plain''});\nlet myReadStream = fs.createReadStream(__dirname+''/readMe.txt'', ''utf-8'');\nmyReadStream.pipe(res);\n});\nserver.listen(3000, ''127.0.0.1'');\n//this simple setup create a server\n//listen to the port 3000 in the localhost\n//send in a stream the content of file ''readMe.txt'' which is in the current folder.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('send web page through server call', E'let http = require(''http'');\nlet fs = require(''fs'');\nlet server = http.createServer(function(req, res){\nres.writeHead(200, {''Content-Type'':''text/html''});\nlet myReadStream = fs.createReadStream(__dirname+''/index.html'', ''utf-8'');\nmyReadStream.pipe(res);\n});\nserver.listen(3000, ''127.0.0.1'');\n//IMPORTANT content-type must be ''text/html'' to render an HTML page.\n//send in a stream the content of HTML page ''index.html'' which is in the current folder.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('send json through server call', E'let http = require(''http'');\nlet fs = require(''fs'');\nlet server = http.createServer(function(req, res){\nres.writeHead(200, {''Content-Type'':''application/json''});\nlet myObj = {name: ''oscar'', age: 29};\nred.end(JSON.stringify(myObj));\n});\nserver.listen(3000, ''127.0.0.1'');\n//content-type must be ''application/json''\n//to send the son you need to convert it to string, which you can do with ''JSON.stringify(myOjb)''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('create a minimalist server with node.js', E'http.createServer(function (req, res) {\n res.writeHead(200, {''Content-Type'': ''text/html''});\n res.end(''Hello World!'');\n}).listen(8080);\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('create a module', E'For example, create a file ''myfirstmodule.js'' with the next content:\nexports.myDateTime = function () {\n return Date();\n};', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('import a module', E'For example, if you created the next module ''myfirstmodule.js'' in the current directory, then you can import it like this:\nvar dt = require(''./myfirstmodule'');', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='node.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sudo systemctl start mongod', E'start mongodb service', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mongodb' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sudo systemctl status mongod', E'verify mongodb service status', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mongodb' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sudo systemctl enable mongod', E'enable mongodb service when computer start', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mongodb' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sudo systemctl stop mongod', E'stop mongodb service', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mongodb' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sudo systemctl restart mongod', E'restart mongodb service', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mongodb' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mongo', E'the command to begin to use mongo in the terminal', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mongodb' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('speed vlc', E'open vlc, then go to tools->preferences-> look for show settings->all->input/codecs->playback speed... and finally modify the value of playback speed for changing default speed.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='ubuntu' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('show databases;', E'show the complete list of databases', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mariaDB' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('show tables;', E'show all the tables of the current database', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mariaDB' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('use <databate>;', E'execute this command to use (read, write, edit, etc) the database <database>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mariaDB' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('create database <database>;', E'create database with name <database>;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mariaDB' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('exit', E'exit from MariaDB command line', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mariaDB' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mariadb -u <username> -p', E'connect to the mariaDB server with user <username>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mariaDB' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mariadb -u <username> -p <database> < <sql_file>', E'To import a database frist create a database <database> using your user <username>, then execute this command to import data and configuration of file <sql_file>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mariaDB' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sudo systemctl status mariadb', E'watch the current status of mariaDB server', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mariaDB' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sudo systemctl restart mariadb', E'restart mariaDB server', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mariaDB' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sudo systemctl start mariadb', E'start mariaDB server', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mariaDB' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sudo systemctl stop mariadb', E'stop mariaDB server', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mariaDB' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('GRANT ALL PRIVILEGES ON *.* TO ''<user>''@localhost IDENTIFIED BY ''<password>'';', E'give all privileges to user <user> and password <password>. After this run:\nFLUSH PRIVILEGES;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mariaDB' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('GRANT ALL PRIVILEGES ON ''<database>''.* TO ''<user>''@localhost;', E'give privileges to user <user> in the database <database>. After this run:\nFLUSH PRIVILEGES;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mariaDB' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('FLUSH PRIVILEGES;', E'after updating privileges of any or many users run this command', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mariaDB' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('SHOW GRANTS FOR ''<user>''@localhost;', E'show privileges of user <user>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mariaDB' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('insert', E'to insert a new record use the next command:\ninsert into <table> (<row1>, <row2>...) values (''<value_row1>'',''<value_row2>''...);\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mariaDB' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mysqldump <database_name> ><backup_name>.sql', E'execute this in the terminal to create a backup of the database', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mariaDB' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sudo su postgres -c psql', E'Login to postgresql prompt as the postgres user (default after installing postgresql)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('create user', E'create user <username> with password ''<password>'';', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('alter user <username> superuser', E'Setup your postgres user and make him a postgres superuser', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grant all privileges on database <database> to <username>;', E'Give permissions to the user on the database', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ALTER USER <user> WITH PASSWORD ''<password>'';', E'Update password for the user', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('\q', E'exit from progressql', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('\l', E'list available databases;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('\c <database>', E'connect to the database <database>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES (' \dt', E'show all tables of the current database', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('\d <table_name>', E'describe the basic information of the table <table_name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('\df', E'list of all available functions', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('\dv', E'list of all available views', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('\du', E'list of all the available users and their roles', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('SELECT version();', E'retrieve the current version of PostgreSQL server', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sudo -u postgres psql', E'login with default ''postgres'' user', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('\conninfo', E'show the current user, database and connection port', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('\i <file>', E'execute commands from a file', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('\e', E'choose a text editor and then write there your commands, once you close the editor the list of commands will execute automatically', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select CURRENT_TIME;', E'get the current time and time zone information', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('\ef <function_name>', E'edit the function <function_name> in the editor', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('PRIMARY KEY (<column1>, <colum2>...)', E'when creating a table add this row to create a primary key which will be a combination of <column1>, <column2>...', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('FOREIGN KEY (<local_column>) REFERENCES <foreign_table> (<foreign_column>)', E'when creating a table add this row to create a foreign key which connects with <foreign_table> using a match between <local_column> and <foreign_column>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('TIMESTAMP', E'this data type save date and time without time zone', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('TIMESTAMPTZ', E'This data save the date and time with the time zone.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example create a table', E'CREATE TABLE account_roles (\n user_id INT NOT NULL,\n role_id INT NOT NULL,\n grant_date TIMESTAMP,\n PRIMARY KEY (user_id, role_id),\n FOREIGN KEY (role_id)\n REFERENCES roles (role_id),\n FOREIGN KEY (user_id)\n REFERENCES accounts (user_id)\n);', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('-- <comment>', E'use it to add comments in your SQL code. Alternative to:\n/* <comment> */', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('/* <comment> */', E'use it to add comments in your SQL code. Alternative to:\n-- <comment>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('\c <database> <user>', E'change to <database> and <user>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('if ''Peer authentication failed'' error when trying to connect to database', E'if this appears when you try to connect to a database then do the next:\n1) cd /etc/postgresql/<number_version>/main\n2) nano pg_hba.conf\n3) at the end of the file, whenever possible replace peer with md5, it should look like this, or similar:\nlocal all postgres md5\n4) save and exit\n5) restart your postgresql server', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('psql <database> <user>', E'connect to database <database> by using the user <user>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('DROP TABLE <table_name>;', E'delete table <table_name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('insert', E'to add a new row to the database (with values: <value1>, <value2>...) use the next syntax:\nINSERT INTO <table_name> VALUES (<value1>, <value2>...);', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('insert specifying columns', E'to specify the columns of each value during the insert use the next syntax:\nINSERT INTO <table_name> (<column1>, <column2>...)\n VALUES (<value1>, <value2>...);\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('inherits', E'use this to implement table inheritance. For example:\nCREATE TABLE cities (\n name text,\n population float,\n elevation int\n);\nCREATE TABLE capitals (\n state char(2)\n) INHERITS (cities);\nIn this case, the capitals table inherits all the columns of its parent table, cities.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('with <temp_table> as (query)', E'create like a temp_table that you can use for a query, example:\nwith top_students as (select * from students where score>70) select from top_students as se inner join foreign_students as fe on se.id = fe.id \n// map temp best students table with foreign students table', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<query1> union all <query2>', E'when <query1> and <query2> have the same columns then return the columns of <query1> followed by the columns of <query2>, it doesn''t remove repeated rows.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<query1> union <query2>', E'when <query1> and <query2> have the same columns then return the columns of <query1> followed by the columns of <query2>, it removes repeated columns.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('CREATE VIEW myview AS <query>', E'Use this syntax to create a query that you want to save and reuse, for example:\nCREATE VIEW myview AS\n SELECT city, temp_lo, temp_hi, prcp, date, location\n FROM weather, cities\n WHERE city = name;\nSELECT * FROM myview; //use view like this', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('create function', E'create a function, receive params, and return a value. Example:\nCREATE FUNCTION add(a integer, b integer) RETURNS integer\nBEGIN\n RETURN a+b;\nEND;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('CREATE OR REPLACE FUNCTION <function_name> ...', E'use this instead of only ''CREATE FUNCTION'' to specify that function must be overwritten if already exists.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('serial', E'Make a column autoincrement in Postgresql use serial, check the example:\ncreate table users(\nusers_id int serial,\n...\n)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('add autoincrement to an existing column', E'for example, having column id in table users, you can do the next:\ncreate sequence users_id_seq\n owned by users.id;\nalter table users\n alter column id set default nextval(''users_id_seq'');\n\n--If your table already have data then add the next line:\nselect setval(''users_id_seq'', (SELECT MAX(id) FROM users));', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='postgresql' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-xs', E'font-size: 0.75rem;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-sm', E'font-size: 0.875rem;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-base', E'font-size: 1rem;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-lg', E'font-size: 1.125rem;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-xl', E'font-size: 1.25rem;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-2xl', E'font-size: 1.5rem;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-3xl', E'font-size: 1.875rem;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-4xl', E'font-size: 2.25rem;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-5xl', E'font-size: 3rem;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-6xl', E'font-size: 4rem;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-black', E'color: black;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-white', E'color: white;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-gray-<number>', E'for a text color gray. The number determines how bright or dark, where 100 is the brightest and 900 the darkest. Use only multiple of 100 between 100 and 900.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-red-<number>', E'for a text color red. The number determines how bright or dark, where 100 is the brightest and 900 the darkest. Use only multiple of 100 between 100 and 900.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-orange-<number>', E'for a text color orange. The number determines how bright or dark, where 100 is the brightest and 900 the darkest. Use only multiple of 100 between 100 and 900.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-yellow-<number>', E'for a text color yellow. The number determines how bright or dark, where 100 is the brightest and 900 the darkest. Use only multiple of 100 between 100 and 900.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-green-<number>', E'for a text color green. The number determines how bright or dark, where 100 is the brightest and 900 the darkest. Use only multiple of 100 between 100 and 900.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-teal-<number>', E'for a text color teal. The number determines how bright or dark, where 100 is the brightest and 900 the darkest. Use only multiple of 100 between 100 and 900.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-blue-<number>', E'for a text color blue. The number determines how bright or dark, where 100 is the brightest and 900 the darkest. Use only multiple of 100 between 100 and 900.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-indigo-<number>', E'for a text color indigo. The number determines how bright or dark, where 100 is the brightest and 900 the darkest. Use only multiple of 100 between 100 and 900.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-purple-<number>', E'for a text color purple. The number determines how bright or dark, where 100 is the brightest and 900 the darkest. Use only multiple of 100 between 100 and 900.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('test-pink-<number>', E'for a text color pink. The number determines how bright or dark, where 100 is the brightest and 900 the darkest. Use only multiple of 100 between 100 and 900.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('font-bold', E'font-weight: 700;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('font-hairline', E'font-weight: 100;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('font-thin', E'font-weight: 200;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('font-light', E'font-weight: 300;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('font-normal', E'font-weight: 400;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('font-medium', E'font-weight: 500;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('font-semibold', E'font-weight: 600;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('font-extrabold', E'font-weight: 800;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('font-black', E'font-weight: 900;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('uppercase', E'text-transform: uppercase;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('lowercase', E'text-transform: lowercase;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('capitalize', E'text-transform: capitalize;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('normal-case', E'text-transform: none;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('p-<number>', E'define padding for an element, where each unit of the number represents 0.25rem. so for example, ''p-2'' is 0.5rem and ''p-5'' 1.25rem. the minimum is 0 and the max is 20. But not all the numbers in this range are valid (for example: ''p-9'' doesn''t exist)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('m-<number>', E'define margin for an element, where each unit of the number represents 0.25rem. so for example, ''m-2'' is 0.5rem and ''m-5'' 1.25rem. the minimum is 0 and the max is 20. But not all the numbers in this range are valid (for example: ''m-9'' doesn''t exist)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pt-<number>', E'define top padding for an element, where each unit of the number represents 0.25rem. so for example, ''pt-2'' is 0.5rem and ''pt-5'' 1.25rem. the minimum is 0 and the max is 20. But not all the numbers in this range are valid (for example: ''pt-9'' doesn''t exist)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pb-<number>', E'define bottom padding for an element, where each unit of the number represents 0.25rem. so for example, ''pb-2'' is 0.5rem and ''pb-5'' 1.25rem. the minimum is 0 and the max is 20. But not all the numbers in this range are valid (for example: ''pb-9'' doesn''t exist)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pl-<number>', E'define left padding for an element, where each unit of the number represents 0.25rem. so for example, ''pl-2'' is 0.5rem and ''pl-5'' 1.25rem. the minimum is 0 and the max is 20. But not all the numbers in this range are valid (for example: ''pl-9'' doesn''t exist)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pr-<number>', E'define right padding for an element, where each unit of the number represents 0.25rem. so for example, ''pr-2'' is 0.5rem and ''pr-5'' 1.25rem. the minimum is 0 and the max is 20. But not all the numbers in this range are valid (for example: ''pr-9'' doesn''t exist)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mt-<number>', E'define top margin for an element, where each unit of the number represents 0.25rem. so for example, ''mt-2'' is 0.5rem and ''mt-5'' 1.25rem. the minimum is 0 and the max is 20. But not all the numbers in this range are valid (for example: ''mt-9'' doesn''t exist)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mb-<number>', E'define margin for an element, where each unit of the number represents 0.25rem. so for example, ''mb-2'' is 0.5rem and ''mb-5'' 1.25rem. the minimum is 0 and the max is 20. But not all the numbers in this range are valid (for example: ''mb-9'' doesn''t exist)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ml-<number>', E'define the left margin for an element, where each unit of the number represents 0.25rem. so for example, ''ml-2'' is 0.5rem and ''ml-5'' 1.25rem. the minimum is 0 and the max is 20. But not all the numbers in this range are valid (for example: ''ml-9'' doesn''t exist)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mr-<number>', E'define the right margin for an element, where each unit of the number represents 0.25rem. so for example, ''mr-2'' is 0.5rem and ''mr-5'' 1.25rem. the minimum is 0 and the max is 20. But not all the numbers in this range are valid (for example: ''mr-9'' doesn''t exist)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('my-<number>', E'define the top and bottom margin for an element, where each unit of the number represents 0.25rem. so for example, ''my-2'' is 0.5rem and ''my-5'' 1.25rem. the minimum is 0 and the max is 20. But not all the numbers in this range are valid (for example: ''my-9'' doesn''t exist)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mx-<number>', E'define the left and right margin for an element, where each unit of the number represents 0.25rem. so for example, ''mx-2'' is 0.5rem and ''mx-5'' 1.25rem. the minimum is 0 and the max is 20. But not all the numbers in this range are valid (for example: ''mx-9'' doesn''t exist)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('py-<number>', E'define the top and bottom padding for an element, where each unit of the number represents 0.25rem. so for example, ''py-2'' is 0.5rem and ''py-5'' 1.25rem. the minimum is 0 and the max is 20. But not all the numbers in this range are valid (for example: ''py-9'' doesn''t exist)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('px-<number>', E'define the left and right padding for an element, where each unit of the number represents 0.25rem. so for example, ''px-2'' is 0.5rem and ''px-5'' 1.25rem. the minimum is 0 and the max is 20. But not all the numbers in this range are valid (for example: ''px-9'' doesn''t exist)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border', E'border-width: 1px;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border-t', E'border-top-width: 1px;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border-l', E'border-left-width: 1px;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border-b', E'border-bottom-width: 1px;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border-right', E'border-right-width: 1px;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border-<number>', E'border-width: <number>px;\nby default only numbers 0, 2, 4, 6 or 8.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border-t-<number>', E'border-top-width: <number>px;\nby default only numbers 0, 2, 4, 6 or 8.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border-l-<number>', E'border-left-width: <number>px;\nby default only numbers 0, 2, 4, 6 or 8.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border-r-<number>', E'border-right-width: <number>px;\nby default only numbers 0, 2, 4, 6 or 8.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('border-b-<number>', E'border-bottom-width: <number>px;\nby default only numbers 0, 2, 4, 6 or 8.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('npx tailwindcss init --full', E'execute this command in the terminal to generate the config file (tailwind.config.js) which includes all the tailwind configuration. You can edit to add or modify its properties, for example, to add or edit tailwind classes. After that, run ''npm run build-css'' in the terminal so your project takes the changes.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('npm run build-css', E'using webpack in your project, run this command so your project can take the changes you did in the tailwind configuration file (tailwind.config.js)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('npx tailwindcss init', E'create an empty config file (tailwind.config.js) that you can use overwrite the tailwind default properties and classes. The advantage is that you don''t mix the default properties with the new properties, so you can easily see what properties you have changed. After that, run ''npm run build-css'' in the terminal so your project takes the changes.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tailwind css intellisense', E'add this package in visual studio code so you can have some intellisense for your tailwind code. For example, it shows you autocomplete with tailwind options while you add your classes in the HTML code.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('add font family', E'After downloading or adding the link of the font family to your project, in tailwind.config.js add in fontFamily-body the name of your new font family, like this:\nfontFamiliy: {\n body: [''<new_font>''...]\n} //After that, run ''npm run build-css'' in the terminal', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hidden', E'add the next style to hide the element:\ndisplay:none;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='tailwind' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('data-controller=''<controller>''', E'connect with the file <controller>_controller.js which should be in the folder app/javascript/controllers', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='stimulus.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('import { Controller } from ''stimulus''', E'To create a stimulus controller, add this at the top of your stimulus controller file, the name of the file should be <name>_controller.js, it should be in app/javascript/controllers folder and you can user it in a rails view with:\ndata-controller=''<name>''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='stimulus.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('create a stimulus controller', E'1) go to app/javascript/controllers and create file <name>_controller.js\n2) In the top of the file add: import { Controller } from ''stimulus'' \n3) the add the next: \nexport default class extends Controller {\n//your code\n}\n4) Add the next in the element where you want to use the controller:\ndata-controller=''<name>''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='stimulus.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('data-action=''click-><controller>#<method>''', E'Add this as an attribute of an element if you want to trigger the method <method> from the stimulus controller <controller> when the element is clicked.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='stimulus.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('how to use data-target', E'1) in the html element add as an attribute the next: data-target=''<name>''\n2) in the stimulus controller, at the begin, add this: \nstatic targets = [''<name>'']; #if you have more target, add it here\n3) for using the target, use the next: this.<name>Target\n\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='stimulus.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('this.<name>Target.value', E'if the target <name> has a value property then you can get it through this syntax.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='stimulus.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('data-target=''<name>''', E'Use this attribute in any element of your HTML to get the properties and modify the element in your controller using: this.''<name>Target''. Don''t forget to add your target to the list targets this way:\nstatic targets = [... , ''<name>''];', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='stimulus.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('static targets =[<name1>, <name2>...];', E'add this in your stimulus controller to declare all the targets.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='stimulus.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<method>(event)', E'if you want to get the event associated with the method <method> then do it this way:\n<method>(event){\n//your code\n}', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='stimulus.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('initialize()', E'Use this method in your controller. It is invoked by stimulus once when the controller is first instantiated\ninitialize(){\n//your code\n}', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='stimulus.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('connect()', E'Use this method in your controller. It is invoked by stimulus anytime the controller is connected to the DOM\nconnect(){\n//your code\n}', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='stimulus.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('disconnect()', E'Use this method in your controller. It is invoked by stimulus anytime the controller is disconnected from the DOM\ndisconnect(){\n//your code\n}', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='stimulus.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Console.WriteLine(''''Hello World!''''); ', E'Print ''Hello World!'' in the console, each new writeLine will add a new line in the console to print the message. This needs the namespace System, otherwise, you will need to type:\nSystem.Console.WriteLine(''''Hello World!''''); ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('single quotes in C#', E'You cannot use single quotes for strings', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('using System', E'using System means that we can use classes from the System namespace', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('namespace', E'is used to organize your code, and it is a container for classes and other namespaces', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Main method', E'Any code inside its curly brackets {} will be executed', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('semicolon ;', E'Every C# statement ends with a semicolon ;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('C# is case-sensitive', E'Therefore, ''''MyClass'''' and ''''myclass'''' has different meaning', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('.cs', E'extension of C# files', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Console.Write(''''Hello World!'''');', E'Print ''Hello World!'' in the console, each new write will use the previous line in the console to print the message. This needs the namespace System, otherwise, you will need to type:\nSystem.Console.Write(''''Hello World!''''); ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('//', E'use the double backslash to add one line comments in the code', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('/* <multi line comment> */', E'starting with /* and finishing with */ you can add a multiline comment in the code this way.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('double in C#', E'you have to add a D at the end of the number, like this:\ndouble x = 2.3D;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('char type', E'it is used to save one character, like this:\nchar myLetter = ''D'';', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bool', E'use to save boolean values, something like this:\nbool myBool = true;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('string', E'use to save text, something like this:\nstring myText = ''''Hello'''';', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('concatenate strings', E'you can do it the next way:\n<string1> + <string2>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('int', E'use this type to save integers, something like this:\nint myNum = 15;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('constants', E'to make constants values use const before declaring the value, for example:\nconst int myNum = 15;\nmyNum = 20; // error\nNote: You cannot declare a constant variable without assigning the value. If you do, an error will occur', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('declare many variables in one line', E'For example, like this:\nint x = 5, y = 6, z = 50;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('long', E'Use to store really big integers. This type values must finished with an L at the end. For example:\nlong myNum = 15000000000L;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('float', E'This type works similarly to double but it has less precision after the decimal point. It must finish with an F. For example:\nfloat myNum = 5.75F;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('implicit casting', E'Implicit casting follows the next:\nchar -> int -> long -> float -> double\nconverting a smaller type to a larger type size. Example:\nint myInt = 9;\ndouble myDouble = myInt; // Automatic casting: int to double', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('explicit casting by placing the type in parentheses', E'double myDouble = 9.78;\nint myInt = (int) myDouble; // Manual casting: double to int\n\nConsole.WriteLine(myDouble); // Outputs 9.78\nConsole.WriteLine(myInt); // Outputs 9', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Convert.ToString(myInt)', E'convert int to string', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Convert.ToDouble(myInt)', E'convert int to double', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Convert.ToInt32(myDouble)', E'convert double to int', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Convert.ToString(myBool)', E'convert bool to string', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Console.ReadLine();', E'With the next line create a string variable and get user input from the keyboard and store it in the variable:\nstring userName = Console.ReadLine();\nThe Console.ReadLine() method returns a string. Therefore, you cannot get information from another data type, such as int. To get an int you will need to cast:\nint age = Convert.ToInt32(Console.ReadLine());', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('a % b', E'get the remainder of a/b, for example:\nConsole.WriteLine(8 % 3); //2 ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('list of all assignment operators', E'x += 3 â x = x + 3\nx -= 3 â x = x - 3\nx *= 3 â x = x * 3\nx /= 3 âx = x / 3\nx %= 3 â x = x % 3\nx &= 3 â x = x & 3\nx |= 3 â x = x | 3\nx ^= 3 âx = x ^ 3\nx >>= 3 â x = x >> 3\nx <<= 3 â x = x << 3', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('difference between && and &', E'&& evalute the second statement just if the first is true\n& always evaluates both sides', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('difference between || and |', E'|| evalute the second statement just if the first is false\n| always evaluates both sides', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('comparison operators', E'==\n!\n>\n<\n>=\n<=', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('logical operators', E'&& \n||\n!', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Math.Max(x,y)', E'The Math.Max(x,y) method can be used to find the highest value of x and y', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Math.Min(x,y)', E'Math.Min(x,y)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Math.Sqrt(x)', E'The Math.Sqrt(x) method returns the square root of x', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Math.Abs(x)', E'he Math.Abs(x) method returns the absolute (positive) value of x', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Math.Round(x)', E'Math.Round(x) rounds a number to the nearest whole number.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<list_variable>.add(<value>)', E'add the value <value> to the list <list_variable>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('connect to the database', E'IQueryable<<model>> <variable>;\nusing (<connection_name> db = new <connection_name>())\n {\n <variable> = db.<model>;\n .\n .\n .\n }', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('connect to database with entity', E'1) right-click on the project\n2) click on Add\n3) click on New Item\n4) Select in Visual C#: ADO.NET Entity Data Model, click next\n5) Select: EF designer from database, click next\n6) create new connection, define there the server, user, password and database.\n7) test connection to confirm it works\n8) define if you want to include sensitive data in connection string\n9) define the name of the connection (in ''save connection settings in web.config as:''), click next.\n10) select tables, views, stored procedures and functions you need. Click finish.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('List<<type>> lista = new List<<type>>();', E'initialize a list of type <type>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<controller>/<action>/<id>', E'In a webApi, route to use the action <action> of the controller <controller> (and id <id> if necessary)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('$''''name: {variable1}, age: {variable2}''''', E'You can use $ before a string to concatenate variables inside, so\nif variable1=''''Oscar'''' and variable2=30, then this code output will be:\n''''name: Oscar, age: 30''''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('add entities to the entity connection', E'Click on the .edmx file, now over the diagram right-click, then: add new -> entity. Then add the entities of the database you want to add.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('entity error: has no parameterless constructor', E'It can happen because the entity models by default don''t include a parameterless constructor. To solve the problem try to add the next in the entity model:\n public <model_name>()\n {\n\n }', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('update entity connection', E'1. click on the .edmx file\n2. over the diagram right-click and select ''Update from database model''\n3. select what you want to add or refresh', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Math.Floor(<number>)', E'return the biggest integer equal or smaller than <number>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES (' Math.Ceiling(<number>)', E'return smallest number equal or bigger than <number>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array_or_list>.Count()', E'Use Count to get how many elements has the list of array', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.Max()', E'Linq method to return max number in the array', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array>.Min()', E'Linq method to return min number in the array', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<array_or_list>.Count(x => <query>);', E'count how many items pass a specific condition, for example:\nint[] Lista = {1,2,3,4,2,1,5,2};\nlista.Count(x => x==2); //return 3', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='C#' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('create database <db_name>;', E'create a new database with the name <db_name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('-- <comment>', E'with the double dash, you can add comments to your code', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('use <db_name>;', E'This way you can select a database', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example of create table', E'CREATE TABLE users (\n id int,\n username varchar(255),\n email varchar(255),\n pass varchar(255)\n);', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('drop table <db_name>;', E'delete table with name <db_name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('PRIMARY KEY (<attr>)', E'During the creation of the table, you can add this command at the end to make the attribute a primary key. Example:\nCREATE TABLE users (\n id int,\n email varchar(255),\n pass varchar(255),\n PRIMARY KEY (id)\n);', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('not null', E'During the creation of a table, add this with the attribute declaration to force the attribute to not be null. Example:\nCREATE TABLE users (\n id int,\n email varchar(255) not null,\n pass varchar(255) not null\n);', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('identity(<seed>, <increment>)', E'Define a autoincrement value for the column, <seed> is the value of the first row added, and <increment> is how much that value increments. Example:\nCREATE TABLE users (\n id int IDENTITY(1,1),\n.\n.\n);', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example insert command', E'INSERT INTO users (username, email, pass) values (''a'',''a@a.com'',''1234'');', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('BIT', E'This type of attribute is like a boolean, it can only have two values, 1 or 0. Example:\nCREATE TABLE technos (\n id int IDENTITY(1,1),\n techno_name varchar(255) not null,\n techno_status BIT not null\n);', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('constraint foreign key', E'you can use this to associate a local attribute with a foreign attribute. For example:\nCREATE TABLE technos (\n id int IDENTITY(1,1),\n techno_name varchar(255) not null,\n users_id int not null,\n CONSTRAINT FK_techno_users FOREIGN KEY (users_id)\n REFERENCES users (id)\n);\n--in this example, the table users and its attribute id must exist', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('select * from <table_name>;', E'select all the columns of all the rows of table <table_name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Enabling SQL Server Authentication', E'1. Open SQL Server Management Studio\n2. Connect with windows authentication\n3. In the Object Explorer, right-click the server, and then click Properties\n4. On the Security page, under Server authentication, select SQL Server and Windows Authentication mode and then click OK.\n5. In the Object Explorer, right-click your server, and then click Restart. If the SQL Server Agent is running, it must also be restarted.\n6. now you can login with a created user', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('restart sql server', E'Inside the SQL Server manager studio, In the Object Explorer, right-click your server, and then click Restart. If the SQL Server Agent is running, it must also be restarted.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('create a new user', E'In the SQL Server management studio, \n1. click in security folder\n2. right-click in Logins\n3. click in new login, \n4. click in general\n5. click in SQL Server authentication\n6. add the Password and Confirm Password\n7. Add Login Name\n8. In ''default database'' select your default database\n9. Use the other tabs (server roles, User mapping, securables) to grant additional permissions.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('distinct', E'Use it to return only different values, example:\nselect distinct name from student;\n/*it will only show unique student''s names*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('count total and count distinct', E'For example, having a country table, to get the difference between total city names and total city names without repetition use this:\nselect count(city)-count(distinct city) from country;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('count', E'to count how many you can do this:\nselect count(*) from <table_name>;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('subqueries', E'you can make different queries at the same time. Check the next example where we union a query where we get the longest city name and the shortest city name. don''t forget to add an alias for your subqueries:\nselect * from (select top 1 city, len(city) as leng from station order by leng desc) as a\nunion\nselect * from (select top 1 city, len(city) as leng from station order by leng) as b;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('order by', E'use order by to sort the rows of your query using some criteria: \nselect name from students order by age;\n/*sort students name by students age, by default order by sort ascending way*/\nyou can use more than one criteria:\nselect name from students order by age desc, name;\n/*sort by age in descending way, if more than one row have the same age then order them by name ascending*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('top <number>', E'select just the first <number> row from a query, for example:\nselect top 10 * from students order by age;\n/*select top 10 students ordered by ascending age*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('max(<column>)', E'this way you can get the max value of a certain column, for example:\nselect max(age) from students; /*get age of oldest student*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('min(<column>)', E'This way you can get the max value of a certain column, for example:\nselect min(age) from students; /*get age of youngest student*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('left(<column>, <number>)', E'get the first <number> character in column <column>. For example:\nselect name from city where left(name,1)=''a'';\n/*return all the names from city table where city name start with ''a''*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('in (<list>)', E'check if the value is in the list, for example:\nselect name from city where left(city,1) in (''a'', ''e'', ''i'', ''o'', ''u'');\n/*select all the city names where name start with a vowel*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('right(<column>, <number>) ', E'get the last <number> characters in column <column>. For example:\nselect name from city where right(name,1)=''a'';\n/*return all the names from city table where city name end with ''a''*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('not', E'use for negation, for example:\nselect name from city where left(name, 1) not in (''a'',''e'',''i'',''o'',''u''); \n/*select city names where they don''t start with a vowel*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('case when', E'Give a value according to the first case accomplished, example:\nselect\n(case \nage>=18\nTHEN ''adult''\nwhen age>=13\nTHEN ''teenager''\nELSE ''Child''\nend)\nfrom people;\n/*return whether a person is an adult, a teenager or a child */', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('OFFSET 0 ROWS', E'By default, you can''t use order by in subqueries unless you add ''OFFSET 0 ROWS''. Example:\nselect * from\n(select occupation\n from occupations order by occupation OFFSET 0 ROWS) as a\nunion\nselect * from (select name from occupations) as b;\n/*in the example you union the occupations and the names in only one column*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('lower(<column>)', E'lowercase the text in <column>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('upper(<column>)', E'uppercase the text of <column>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('concat(<strings_separated_by_comma>)', E'you can use concat to concatenate different strings separated by comma, for example:\nselect concat(''What a '', ''wonderful'', '' world''); /*print ''what a wonderful world''*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('difference between distinct and group by', E'Both can be used to get unique columns, but group by is useful when you need to do aggregate functions over each group.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pivot', E'pivot allow to convert row values in columns, for example:\nselect Doctor, Professor, Singer, Actor from people \npivot(count(name) for occupation in([Doctor], [Professor], [Singer], [Actor])) as pivotTable;\n/*in the example, the table people has a column occupations which has values: Doctor, Professor, Singer and Actor, with this code we convert this four possible values in different rows and for each one we count how many names appear in the database*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ROW_NUMBER', E'use row_number() to assign a number based on a particular order. Example:\nselect name, ROW_NUMBER() OVER(ORDER BY name) as n from PEOPLE;\n/*this query select every name and a number which represents the order of the people when order by name*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('full join', E'join two tables, include result even when there are no matches (replacing the expected values by null). Example:\nselect st.name, su.name, en.id from student as st\nfull join enrollment as en\non st.id=en.student_id\nfull join subject as su\non en.subject_id=su.id;\n/*this query will include also student with no enrollments and subjects with no students*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<column> is null', E'ask if column is null (<column>=null doesn''t work)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('exists(<query>)', E'true if <query> get any data, otherwise false', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('inner join', E'select all the matches between two tables, example:\nselect t.name, c.name\nfrom teachers as t\ninner join c as class\non t.id==c.teacher_id\n/*select every class name and its teacher name*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sum(<column>)', E'sum the value of all the values of the column <column>, for example:\nselect sum(money) from students where gender=''male''; \n/*get the total money from students whose gender is male*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('avg(<column>)', E'get the average from the values of column <column>. Example:\nselect avg(population) from city where district=''California'';\n/*select average of population from the cities from California district*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('round(<column>, <decimal>)', E'round the value to the <decimal> decimals, example:\nselect round(avg(population), 2) from city group by district;\n/*get average population of the cities for district, round to two decimals*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cast(<column> as <type>)', E'cast the value of certain column in a different type, for example:\nselect cast(population as float) from city;\n/*convert the value to float type*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('operations with integers', E'any operation with only integer will be cast as integer, for example:\nselect avg(age) from students;\n/*this will always return an integer number because age is integer type, to solve this problem use cast(<column> as float)*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ceiling(<float>)', E'convert a float number up to the inmediate next integer, example:\nselect ceiling(4.1); /*5*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('floor(<float>);', E'convert a float number down to the inmediate previous integer, example:\nselect floor(4.8); /*4*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('replace(<string>,''<old_text>'', ''<new_text>'')', E'replace any coincidence in <string> of the text <text>. Example:\nselect replace(''hello world'', ''hello'', ''bye bye''); /*bye bye world*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('declare @<variable> <type>;', E'This way you can declare a specific type of variable, you can use a query to save a value there. Example:\ndeclare @age int;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('set @<variable> = (<query>);', E'that way, using a query you can assign a value to the variable, don''t forget to close your query in parenthesis, and don''t forget to declare the variable before assign:\ndeclare @oldest int;\nset @oldest = select max(age) from students;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('decimal(<precision>,<scale>)', E'This type is for numbers where you need a specific scale after the comma, decimal has the next parameters:\n<precision>: refers to the max numbers in the decimal, it counts both the numbers before and after the comma.\n<scale>: the numbers after the comma\nExample: decimal(18,2) /*can store number 123.25*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('numeric(<precision>,<scale>)', E'synonym of decimal type, both are interchangable', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ROUND(<number>, <scale>, 1); ', E'truncate the number till the scale specified, example:\nselect ROUND(150.75, 0, 1); /*150*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('power(<base>, <exponent>)', E'return the result of <base>^<exponent>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('with <alias> as (<query>) select ...', E'When you want to use a subquery in a bigger query then you can declare the subquery before this way.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('right order for: where, group by, having, order by', E'When you need to use any of the previous use it in the next order:\nselect <something>\nwhere <something2>\ngroup by <something3>\nhaving <something4>\norder by <something5>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('multiples WITH', E'if you need multiple subqueries don''t use multiple ''with'' statements, just once this way:\nwith <alias1> as (<query1>),\n<alias2> as (<query2>),\n...\n<aliasn> as (<queryn>)\nselect...', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('partition by', E'equivalent to ''group by'' but it only can be used for ROW_NUMBER() OVER, that way you can assign a number to a row depending on its position in a group. For example, imaging sort countries by continent order by population, then using ROW_NUMBER() OVER with PARTITION BY you assign 1 to USA cause is the country with most population in north ameria, also 1 to nigeria cause the most population in Africa, etc.\nUse PARTITION BY this way:\nROW_NUMBER() OVER(Partition by <criteria1> ORDER BY <criteria2>) as <alias>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('SELECT DATEDIFF(<criteria>,<date1>, <date2>);', E'get the difference between <date1> and <date2> using <criteria>. Some criterias are: day, month year. The operation is <date2>-<date1>, for example:\nSELECT DATEDIFF(month, ''2011/08/25'', ''2017/08/25''); /*return 72*/\nSELECT DATEDIFF(month, ''2017/08/25'', ''2011/08/25''); /*return -72*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('alias in group by', E'you cannot use an alias in a group by', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('values', E'you can work over a list as it was a table using values, check out the next example:\nSELECT MIN(v) FROM (VALUES (12,''yes''),(30, ''no''), (5, ''no'')) as val(v, x);\n/*now val behave like a table and v has two columns, v and x, and three rows:\n12,''yes''\n30, ''no''\n5, ''no''\nthen the query return 5 which is the minimum value of column v\n*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('with inside a with', E'/*You cannot use a with inside another with, instead, use one after another and in the second you can already use the first with. Therefore instead of:*/\nwith t as \n (\n with tt as\n ( \n select * from table \n )\n SELECT * FROM tt\n )\nselect * from t\n/*do it the next way*/\nwith t as \n(\n select * from table\n),\ntt as\n( \n select * from t\n)\nselect * from tt ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('while', E'Check out the example:\ndeclare @number int;\nset @number = 0;\nWHILE @number <10\nBEGIN\n select @number\n SET @cnt = @number + 1;\nEND;\n--print numbers from 0 to 9', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('blank spaces at the end of varchar', E'By default, varchar types always remove black spaces at the end, for example:\ndeclare @ast varchar(250);\nset @ast = ''x ''; --this is equal to ''x''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('DECLARE @<var_tablename> TABLE (<attr1> <type1>,... <attrn> <typen>);', E'create a variable of type table that you can use to save a temp table for your query, for example:\nDECLARE @person TABLE (id INT, name VARCHAR(250));\n//save there the id and names of persons', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('if', E'declare an if the next way:\nif <query>\n begin\n <logic_if_query_equals_true_or_bring_something>\n end', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('add data to variable table', E'For example, you can do it the next way:\nDECLARE @person TABLE (id INT, name varchar(250));\ninsert into @person select id, name from employees where age>40\n/*this way you can save in @persons all the employees with more than 40 years*/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('compare dates', E'you can compare dates using the same way you compare numbers, example:\n ''2016-03-01''<= ''2016-03-02'' --true', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('DATEADD(<interval>, <number>, <variable>)', E'This way you can add, or substract, a total of <number> <intervals> to <variable>, example:\ndeclare @days date\nset @days = ''2016-03-01'';\nDATEADD(day, 1, @days) -- now @days=''2016-03-02''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('stored procedures', E'--create a store procedure the next way\nCREATE PROCEDURE get_zero_mistakes(@user_id AS int)\nAS\nBEGIN\n SELECT * from scores where user_id=@user_id;\nEND;', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='SQL Server' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sudo apt install ruby rails', E'Install ruby on rails', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails -v', E'confirm ruby on rails version\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails s -b 127.0.0.1', E'execute ruby on rails project in local machine', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tutorial begin ruby on rails project', E'If you don''t have on rails framework then installed with:\nsudo apt install ruby rails \nTo confirm installation and version of the framework use:\nrails -v\nGo to the folder where you want to use this framework, then run:\nrails new <project_name>\nThen go to the created folder with:\ncd <project_name>\nAnd finally run the ruby project in your local server with:\nrails s -b 127.0.0.1', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails new <project_name>', E'Create the folder with the basic folders and files to begin a ruby project, the name of the folder will be <project_name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('source /home/oscarrussi/.rvm/scripts/rvm', E'just for my computer, this allows me to use rails', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails g controller <controller_name>', E'generates all the files for a controller (also the folder for the views of the controller) with <controller_name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<html_name>.html.erb', E'name for html files which use Ruby On Rails framework.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails g model <model_name> <atribute1>:<type1> <atribute2>:<type2>...', E'rails g model with name <model_name> and it''s attributes and the type of each attribute (for example name:string for attribute name of type string, or phone:integer for attribute phone of type integer). Model must be in lower-case and singular.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails destroy controller <controller_name>', E'Destroy all the files generated by generate controller <controller_name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails destroy model <model_name>', E'destroy all the files generated by generate model <model_name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails db:migrate', E'After you create a model (with generate model) use this command to update the database (when using rails framework). Each time a table is created, the table always includes the id, create_at (date of creation), update_at (date of last update).', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails db:drop', E'delete the database of the project (in rails)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails db:create', E'create the database of the project (in rails)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails routes', E'This command in the terminal shows the methods and params te make a crud with the routes specified in the folder routes (using the command resource:<table_name> in your routes file)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails db:rollback', E'Undo a single migration step', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('has many <model_name>s', E'use this in rails models to indicate that current class has many of class <model_name> ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('presence: true', E'use this in rails models to indicate that an attribute of the model must be present always', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('length: { maximum: <number> }', E'use this in rails to indicate the maximum length of a string attribute', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('uniqueness: { case_sensitive: false }', E'use this in rails models to indicate that the attribute must be unique and no case sensitive', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<model_name>.all', E'in rails, this brings an array of the instances which exists in the table corresponding to <model_name> ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<model_instance>.save', E'In rails, this save in the database the created instance <model_instance>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('config.webpacker.check_yarn_integrity = false', E'On rails projects, add this line on config/environments/development.rb to disable yarn', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<model_instance>.update', E'On rails, use this command to update an existing row of the table corresponding to <model_instance>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails console', E'or rails c. Use this in rails to work on the console mode', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('form_for', E'On rails, use this in the views to create a form for the model, for example:\n<%= form_for @<mode_name> do |f| %>\n<p>\n <%= f.label :<attribute1_name> %> <br/>\n <%= f.text_field :<attribute1_name> %>\n</p>\n<p>\n <%= f.label :<attribute2_name> %> <br/>\n <%= f.text_field :<attribute2_name> %>\n</p>\n<p><%= f.submit %></p>\n<% end %>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<for_instance>.label', E'On rails views, when creating a form use this command to create a label', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<form_instance>.text_field', E'on rails views and you are creating an instance of a form use this command to create a text field inside the form.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<form_instance>.email_field', E'Use this on rails views, when creating a form, to add an email field inside your form', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<form_instance>.password_field', E'On rails views, when creating a form, use this command to add a password field inside your form.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<form_instance>.submit', E'On rails views, use this command to add a submit button inside a form.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('redirect new_<model_name>_path', E'On rails, inside a controller, use this command to redirect to ''/<model_name>/new.html.erb''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('redirect_to edit_<model_name>_path(<model_instance>)', E'On rails controllers, you can use this command to redirect to the view edit of model instance to edit the model instance <model_instance>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('params.require(:<model_name>).permit(:<attribute1>, :<attribute2>, ...)', E'On rails controller, use this command to get the params that you pass using a form in the view. In that way you can get the attributes <attribute1>, <atribute2>...etc of the model <model_name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('render: edit', E'On rails controller you can use this command to render the edit view using the current parameters. It can be use to stay on the same page when something fails (render:edit when you are on edit and click on save but your form has some problems). ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails g migration <migrations_name>', E'create migration file to make changes in the database', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails db:migrate:reset', E'does db:drop, db:create, db:migrate', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails db:seed', E'runs the db/seed.rb file', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bundle exec <rails_command>', E'this allow to run rails commands using the global ruby version.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('has_many :<model>s', E'On rails, use this to indicate the current modal has many of the model <model>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('has_many :<assigned_name>, class_name: ''<model_name>'', foreign_key: ''<id>''', E'Use in rails to indicate that the current model has many of model <model_name>, which is connected by if <id> and name <assigned name>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('belongs_to :<assigned_name>, class_name: ''<model_name>'', foreign_key: ''<id>''', E'Use this in rails to indicate that current model belongs to model <model_name>, which will be identified by name <assigned_name> and connected with id <id>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('validates :<attribute_name>, presence: true', E'Use this in rails model to indicate that the attribute <attribute_name>, of the current model, has to be present always when you create an instance of the model.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('validates :<attirbute_name>, length: { maximum: <max> }', E'in rails model, use this line to define that attribute name, of current model, has a maximum length of <max>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<model_with_uppercase>.order(<attribute_name>: :desc)', E'In rails, use the name of a model, with uppercase, and add ''.order(<attribute_name>: :desc)'' to order using attribute <attribute_name> in descendent order.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<model_name>.destroy(<id_model_instance>)', E'In rails, search in model <model_name> the instance with id <id_model_instance> and delete it from the database.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<model_instance_name>.valid?', E'In a rails model, user the command to ask if the instance <model_instance_name> is valid or not (using the validations you specified in the model)', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('params[:<param_name>]', E'in rails controller you can pass params in the URL (or using JSON), in the end of the url add ''?<param_name>=<param_value>'' then you can get value <params_value> using params[:<param_name>] as a variable in the controller.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<% link_to ''<link_description>'', ''<link_route>'' , {:style=>''<styles>''} %>', E'Use this on rails to create a link to the route <link_route> and a link description <link_description> and also add the styles <styles>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<%= text_area_tag :<attribute>, ''<default_content>'', rows: <rows>, cols: <cols> %> ', E'in rails, create a textarea field which connects with the attribute <attribute>. The textarea will have <rows> total of rows and <cols> total of columns.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<%= text_field_tag :<attribute> %>', E'In rails, creates a text field elements connected with the attribute <attribute> ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<%= file_field_tag :<attribute> %>', E'On rails, creates a file uploader element, this will be associated with the attribute <attribute>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails new <project-name> --api', E'initialize a new project, added ''-- api'' to just create the necessary files and folders for a web api.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('routes file', E'this is a rails file that you can find in the config folder of your rails project, add there your routes.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('render json: <data>, status: :ok', E'On rails, when working in an API project then send JSON data and status ok to the request.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('gem ''rack-cors'', :require => ''rack/cors''', E'install gem required to make cross-origin calls, so in that way your API can be consumed. After this, go to ''/config/locales/application.rb'' and add the next code inside the class application:\n\nRails.application.config.middleware.insert_before 0, Rack::Cors do\n allow do\n origins ''*''\n resource ''*'', headers: :any, methods: [:get, :post, :patch, :put]\n end\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Rails.application.config.middleware.insert_before', E'After installing gem ''rack-cors'' in your API project, go to ''/config/application.rb'' and add the next code inside the class application (this is necessary for allow other apps to consume your app):\n\nRails.application.config.middleware.insert_before 0, Rack::Cors do\n allow do\n origins ''*''\n resource ''*'', headers: :any, methods: [:get, :post, :patch, :put]\n end\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('test post in rails API', E'first, add something like the next in your controller:\ndef create\n @<model> = <Model>.new(<model>_params)\n @<model>.save\n render json: @<model>, status: :created\n end\nprivate\n\n def <model>_params\n params.require(:<model>).permit(:<param1>, :<param2>...)\n end\n.\n.\n.\nthen in the routes file (which you can find in config folder) add:\npost ''/<model>/new'', to: ''<model>s#create''\n.\n.\n.\nFinally to test user postman app and do the next\n1) in a new link of your postman app add:\nhttp://localhost:<your_port>/<model>/new\n2) aside of the link choose option POST\n3) select the radiobutton ''body''\n4) below select radiobutton ''raw''\n5) on the right side of ''raw'' select ''JSON'' data type\n6) in the textarea add something like the next:\n{\n''''<model>'''': \n {\n ''''<param1>'''': ''''<param1_value>'''',\n ''''<param1>'''': ''''<param2_value>'''',\n .\n .\n .\n }\n}\n.\n.\n.\nFinally click on ''send'' button\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('before_action: <method>, only: %i[<action1> <action2>...]', E'before consuming one of the actions in this list the controller calls the method <method>. Add this to the top of your rails controller.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('render json: <model_instance>, status: :created', E'On API rails, render a json file with the attributes of <model_instance> and with the status of created', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('include <module_name>', E'include the module <module_name> in your current ruby file. Use this, for example, in rails, to use helpers modules in the controllers', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('head(:ok)', E'in API rails, redirect to a blank page with status ok', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('render json: <model_instance>.as_json(only: [:<attr1>, :<attr2>...]), status: :created', E'In API rails, render a page which shows the attributes, of the list ''only'', from <instance_model>. Besides, show status ''created''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<Model>.new(params.require(:<model_name>).permit(:<param1>, :<param2>...))', E'create an instance of model <Model> with the attribute of <model_name>. Use this is rails API, when sending the params of the model instance you want to create (in a post action), in a next way, in postman create the next model:\n{\n''''<model_name>'''':{\n''''<param1>'''': ''''<value1>'''',\n''''<param2>'''': ''''<value2>'''',\n.\n.\n.\n}\n}', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('add_flash_types :info, :error, :warning', E'On rails, add this on the top of your ''ApplicationController'' file to add some additional personalized flash messages. By default, the only flash messages types are alert and notice.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('render flash messages', E'On your rails view add something like the next:\n<% flash.each do |type, msg| %>\n <div>\n <%= msg %>\n </div>\n<% end %>\n\nIn that way, if the flash message is different to null it will appear in the view.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('render :<action>', E'In rails, render the view associate to the action <action> for the same controller', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('validates :<param>, presence: true', E'On rails, add this in your model, on this way, the param <param> must have a value, cannot be null', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('validates :<param>, length: { maximum: <max>, minimum:<min>}', E'On rails, add this in your model to validate that param <param> has a length which is equal or bigger than <min> and less or equal to <max>. If you only need the maximum or the minimum then only add that restriction and omit the other one.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('has_many :<relation_name>, class_name: ''<associated_model>'', foreign_key: ''<foreign_param>''', E'On rails, inside a model <model> add this line to establish an association with the model <associated_model>, using the param <foreign_param> of the associated_model. On this way, you can get a list of associated models <associated_model> for each instance of ''<associated_model> where its param <foreign_param> is equal to the id of the current instance of model <model>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('redirect_to ''/''', E'On rails, redirect to the root of the project', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('has_many :<associated_model>s, foreign_key: ''<foreign_param>''', E'On rails, by default, in associations between two model where model <model> has many <associated_model> then the ''has_many'' command will look for a param with name ''<model>_id'' in the <associated_model>. I f you want to use a different param (in this case, ''foreign_param'') for the association then you will need to specify with: foreign_key: ''<foreign_param>''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<% if <condition>%>', E'use this syntax in the views of your rails project to add a stack of code in your view if condition<condition> is true, like this:\n<% if <condition>%>\n<your_code>\n<% end%>\nCan also be used with else, like this:\n<% if <condition>%>\n<your_code_if_true>\n<% else %>\n<your_code_if_false>\n<% end%>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<%= form_tag ''/<path>'' do %>', E'On rails view, use this syntax to add a form that will execute the action and controller associated with route <path> (following what you have specified in your route file), and sending the list of params you associated with some fields in your form. Example:\n<%= form_tag ''/<path>'' do %>\n <var_name1>: <%= text_field_tag :<param1> %>\n <var_name2>: <%= text_field_tag :<param2> %>\n <var_name3>: <%= date_field_tag :<param3> %>\n <%= submit_tag ''''Submit'''' %>\n<% end %>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('add_index :<model>s, [:<param1>, :<param2>...], :unique => true', E'On rails, add a migration file and inside this file add:\ndef change\n add_index :<model>s, [:<param1>, :<param2>...], :unique => true\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('remove_column :<model>s, :<column>', E'On rails, to delete the column <column> from the table <model> then create migration file and add:\ndef change\n remove_column :<model>s, :<column>\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('change_column :<model>s, :<column>, :<type>', E'On rails, to update the type of a column <column> in an already created table <table> to have a new type <type>, create migration file and add the next:\ndef change\n change_column :<model>s, :<column>, :<type>\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('add_index :<model>s, :<column>, unique: true, name: ''<constraint_name>''', E'On rails, to add a unique constraint for a column <column> in table <model>s, create a migration file and add the next:\ndef change\n add_index :<model>s, :<column>, unique: true, name: ''<constraint_name>''\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('create_table :<model>s do |t|', E'On rails, to create a table associated to the model <model>, then you can create migration file and add the next:\n''def change\n create_table :<model>s do |t|\n t.<type1> :<param1>\n t.<type2> :<param2>\n .\n .\n .\n t.timestamps\n end\n end''\nthe ''t.timestamps'' line is for add ''created_at'' and ''updated_at'' columns', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rename_column :<model>s, :<old_column_name>, :<new_column_name>', E'On rails, to update the column <old_column_name> to have now the name <new_column_name>, in the table <model>s then create a migration file and add the next:\ndef change\n rrename_column :<model>s, :<old_column_name>, :<new_column_name>\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('add_column :<model>s, :<column>, :<type>', E'On rails, to add the column <column> to the table <model> then create migration file and add:\ndef change\n add_column :<model>s, :<column>, :<type>\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('yardoc ''app/controllers/*.rb''', E'On rails, run this command on the terminal to create the documentation for the ruby files in the route ''app/controllers/'' to use this. To make this you need to previously add the next gems to gemfile:\ngem ''rdoc'', ''~> 4.2'', ''>= 4.2.2''\ngem ''yard'', ''~> 0.8.7.6''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('documentation with rdoc and yard', E'Execute the next command:\nyardoc ''app/controllers/*.rb''\nIn a rails project, having rdoc and yard gems, use this command in the terminal to generate the documentation of the files in your controller folder (just the files with extension rb). You will need to comment above each action of your controllers, following the right structure (check yard gem documentation for comments).', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails db:reset RAILS_ENV=test', E'reset database for tests', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails erd', E'On rails, this command generates the entity-relation diagram of the database. Before running the program you need to add in your gemfile:\ngem ''rails-erd''\nAlso, you will need to install:\nsudo aptitude install graphviz\nIf you don''t have aptitude tool in your system then install aptitude with:\nsudo apt-get install aptitude', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('add models in admin active', E'1) create the model with ''rails generate model <model_name> <attr1> <attr2>...''\n2) migrate with ''rails db:migrate''\n3) finally register this models in the framework with ''rails generate active_admin:resource <model_name>''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('use postgresql in rails', E'1) in your gem file change: gem ''sqlite3'', ''~> 1.4''\nfor: gem ''pg'', ''>= 0.18'', ''< 2.0''\n2) in your config/database, change: ''adapter: sqlite3''\nfor: ''adapter: postgresql''\n3) to configure the username, go to config->database.yml and in the default section change username and password with a username and password that you have in postgres. ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('yarn install --check-files', E'In rails, install all the dependencies listed in package.json file. With ''--check-files'' Verifies that already installed files in node_modules did not get removed', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text_field_tag', E'Use:\n<%= text_field_tag :<param>, ''<value>'', class: ''<classes>'' %>\nIn rails views, inside a form, for using a text field you can use this command and specify the associated param with name <param> the value <value> and the classes with <classes>. When you submit the form you can get the value of the text field with <param>.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('button_to', E'Use the next command:\n<%= button_to ''<content>'', ''<route>'', method: ''<method>'', :form => { :id => ''<id>'', :class => ''<classes>'' }, params: {<param1>: <value1>, <param2>: <value2>...} %>\nIn rails forms, inside a view, to create a button with content <content>, route <route>, method <method>, id <id>, classes <classes>, and the list of params {<param1>: <value1>, <param2>: <value2>...}', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('redirect_back', E'Use the next command:\n''redirect_back fallback_location: root_path''\nIn any action of a rails controller to redirect to the current root, if that''s not possible then redirects to the root of the project.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('redirect_to controller: ''<controller>'', action:''<action>'', <param1>:<value1>, <param2>:<value2>...', E'In a rails controller use this command to redirect to the route associated with controller <controller>, action <action>, and with params ''<param1>:<value1>, <param2>:<value2>...''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('find_by_<attribute>(<value>)', E'In rails, use this to find all the instances of the model that have the attribute <attribute> equal to value <value>. Example: \nUser.find_by_name(''Oscar'')\nget all the instances of model ''User'' with attribute name equal to ''oscar''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ActiveRecord::Base.connection.execute(''<sql>'')', E'In rails, you can do a query to the current database with this command. For example.\nActiveRecord::Base.connection.execute(''select * from Users'');\nThe return will be a hash with the data of all the users', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('define/change your postgres username', E'In rails, go to config->database.yml, and in the default section change username and password with a username and password that you have in postgres. ', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<% link_to ''<link_route>'' , {:style=>''<styles>''} do %>', E'In rails, link is a tag ''a''. if you want to add more content inside this tag (for example an image or some other tag), use the next syntax:\n<% link_to ''<link_route>'' , {:style=>''<styles>''} do %>\n <your_content>\n<% end %>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('current_page?(controller:''<controller>'')', E'In rails, ask if the current page use controller <controller>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('current_page?(action:''<action>'')', E'In rails, ask if the current page use action <action>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('params[:controller] == ''<controller>''', E'In rails, get if current controller is <controller>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('params[:action] == ''<action>''', E'In rails, get if current action is <action>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('/rails/info/routes', E'In rails, use this route to watch all the routes available in the project', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails test', E'run rails default tests', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails db:migrate RAILS_ENV=test', E'create the database and migrate for default tests in rails', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<model>.destroy_all', E'On rails, destroy all the rows in the table and it''s associated objects', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<model>.delete_all', E'On rails, delete all the rows in the table without deleting it''s associated objects', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('test ''<test_explanation>'' do', E'For rails defaults tests, inside the folder tests, in any of the test files you have there, you can add something like this:\ntest ''<test_explanation>'' do\nassert <some_logic>\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert <some_logic>', E'For rails default tests, use something like the next to test if some logic is true or not:\ntest ''<test_explanation>'' do\n assert <your_logic>\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert_empty', E'in rails default tests, pass the test if it has any of the next three values: '''', [] or {}. Examples:\nasset_empty '''' #pass the test\nassert_empty nil #fails the test\n\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<model_instance>.errors', E'In rails, returns the errors, if any, associated with the model instance', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<model_instance>.errors[:<attribute>]', E'In rails, returns the errors, if any, associated with the attribute <attribute> of the model instance', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert_not <some_logic>', E'For rails default tests, use something like the next to test if some logic is false:\ntest ''<test_explanation>'' do\n assert_not <your_logic> #pass if <your_logic>==false\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fixtures folder', E'In rails default tests, inside the test folder, there is a fixture folder which can be used to create default instances of the models. For example, if you have a user model with attributes name, password, and age, then in fixtures create a users.yml file where you can add the next:\nuser1:\n name: oscar\n password: 1234\n age: 29\n#Then you can use this instance of the model in your rails default tests.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert_response', E'In rails default tests, use this to test if the current URL returns the expected response, like this:\ntest ''<test_explanation>'' do\n get <route>\n assert_response :<response> \nend\n#returns true if route <route> returns response <response>\n#some possible responses are success, unauthorized, redirect', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('get <route>', E'In rails default tests, use this to go to the route <route> using the HTTP method GET.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert_response :redirect', E'In rails default tests, returns true if the response of the current url is redirect', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert_response :success', E'In rails default tests, returns true if the response of the current url is success', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert_response :unauthorized', E'In rails default tests, returns true if the response of the current url is unauthorized.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sign_in <user_instance>', E'In rails default tests, when using devise, you can use this in the tests to make <user_instance> appear login with no need to go to the page and complete the form and submit. Before use it you need to add the next in test_helper.rb:\ninclude Devise::Test::IntegrationsHelpers', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('include Devise::Test::IntegrationsHelpers', E'In rails default tests, add this in test_helper.rb to use devise methods for testing. Added like this:\nClass ActiveSupport::TestCase\n ...\n include Devise::Test::IntegrationsHelpers\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('setup do', E'In rails default tests, add this at the begin, inside the classes of your tests for running some code before all tests:\nsetup do\n <some_code>\nend', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sign_out <user_instance>', E'In rails default tests, when using devise, you can use this in the tests to sign out <user_instance> with no need to go to the page and click the sign out button. Before using it, you need to add the next in test_helper.rb:\ninclude Devise::Test::IntegrationsHelpers', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('redirect_to <path>(params: {<param1>: <value1>, <param1>: <value1>...})', E'In rails, redirect to path <path> with params <param1>=<value1>, <param2>=<value2>...etc. Example:\nnew_user_registration_path(params: {after_signup: true})', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('follow_redirect!', E'In rails default tests, when testing a page and this page redirects to another one, you can follow the redirect using this command, in that way you will be able to test the behavior of the following page. Example:\nget user_new\nfollow_redirect!\nassert response.body.include?(''hello world'')\n#test if user_new path redirect to a new page whose content include-> ''hello world''', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<your_class> < ActionDispatch::IntegrationTest', E'On default rails tests, when creating integration tests (also known as controller tests) your class must inherit from this class. It must look something like this:\nrequire ''''test_helper'''' #required for default testing\nclass Users::RegistrationsControllerTest < ActionDispatch::IntegrationTest', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert_select ''<selector>'', <number>', E'In rails default tests, check if page has <number> selectors <selector>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert_select ''<selector>'', ''<string_or_regex>''', E'In rails default tests, check if the current page has the selector <selector> and its text is (or match the regex) <string_or_regex>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert_select ''<selector>'', {:count=><number>, :text=>''<content>''}', E'In rails default tests, check if page has selector <select> and this appears <number> times and each one have content <content>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails test <path_till_folder_or_file>', E'In default rails tests, run this in the terminal to execute the test in a specific file or folder. Example:\nrails test test/integration/users_test.rb \n#run tests in file: users_test.rb, in path: test/integration/\nrails test test/integration\n#run tests in folder integration, in path: test/', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('form_with', E'On rails, create form to send its data to the action ''new'' and method ''get'' of the current controller\n <%= form_with action: ''new'', method: ''get'' do |f| %>\n <%= f.text_field :<attribute> %>\n <%= f.text_area :<attribute> %>\n <%= f.submit ''Check Email'' %>\n </div>\n <%end%>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<%= f.hidden_field :<attribute>, {value: <value>} %>', E'In rails, add this to the form in order to have a hidden field with an attribute <attribute> whose value is <value>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert_select ''<selector>'', html: <string_or_regex>', E'In rails default tests, check if the current page has selector <selector> and its html is equal (or match regex) <string_or_regex>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert_select ''<selector>'', minimum: <number>', E'in default rails tests, check if the current page has a minimum of <number> selectors <selector>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert_select ''<selector>'', maximum: <number>', E'in default rails tests, check if the current page has a maximum of <number> selectors <selector>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('redirect_to <path>(<resource>, <param1>: <value1>, <param2>: <value2>...)', E'In rails, when you need to redirect to path <path> and send resource <resource>, and params <param1> with value <value1> and <param2> with value <value2> then use this syntax.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('flash[:<message_name>]=nil', E'In rails, use this to remove a specific flash message.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('render inline: ''<some_html_code>''', E'In rails, you can use this inside a controller action to render only the defined inline code (instead of a view).\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('render plain: ''<some_text>''', E'In rails, use this syntax in a controller action when you only want to render some text.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<%= <string>.html_safe %>', E'In rails, add this in your view to convert your <string> in HTML and use it in some part of your page.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails new <project_name> --webpack', E'create a project which uses webpack. To run webpack for the project execute the next command in the terminal:\nruby ./bin/webpack-dev-server --host 127.0.0.1', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('session[:<name>]', E'In rails, use sessions to store data on users'' computers. can also be used as global variables in your project.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails test <path>/<file>:<line>', E'In default rails tests, run a specific test in file <file>, in path <path>. Example:\nrails test test/models/article_test.rb:6', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert <logic>, ''<message>''', E'In rails default tests, test if logic <logic> is true. If false then shows the message <message>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert_not <logic>, ''<message>''', E'In rails default tests, test if logic <logic> is false. If true then shows the message <message>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails test -b <optional_path>', E'In rails default tests, run all the tests (or the tests in <optional_path>). option ''-b'' is to show all the backtrace or any failure.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert_nil <object>', E'In rails default tests, return true if <object> is nill', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert_not_nil <object>', E'In rails default tests, return true if <object> is not nill', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert_match <regex>, <string>', E'In rails default tests, return true if <string> match <regex>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert_no_match <regex>, <string>', E'In rails default tests, return true if <string> doesn''t match <regex>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rails s -p <port>', E'by default, rails use port 3000, with this command you can specify a different port', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<model>.find(<id>).destroy', E'with active records, delete record with id <id>', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='rails' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('create a chart from data', E'1) select the data\n2) go to insert\n3) go to recommended charts\n4) select a type of chart\n5) you can click on the chart and in design, it will appear other chart options, there you can change for other type of chart', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='Excel' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A histogram ', E'is a graphical display of data using bars of different heights. In a histogram, each bar groups numbers into ranges. Taller bars show that more data falls in that range.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='Excel' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A line chart', E'is a graphical representation of an asset''s historical price action that connects a series of data points with a continuous line. This is the most basic type of chart used in finance and typically only depicts a security''s closing prices over time.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='Excel' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A pie chart (or a circle chart)', E'is a circular statistical graphic, which is divided into slices to illustrate numerical proportion. In a pie chart, the arc length of each slice (and consequently its central angle and area), is proportional to the quantity it represents.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='Excel' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A scatter plot', E'Is a type of plot or mathematical diagram using Cartesian coordinates to display values for typically two variables for a set of data. If the points are coded (color/shape/size), one additional variable can be displayed. The data are displayed as a collection of points, each having the value of one variable determining the position on the horizontal axis and the value of the other variable determining the position on the vertical axis.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='Excel' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('add aditional row or column to the chart', E'1) create the new row/column\n2)select chart\n3) the table will be highlighted, drag the highlighted selection to include the new row/column\n4) if you want, having selected the chart, in design you can change the chart type.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='Excel' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cd', E'Displays the name of or changes the current directory.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='windows' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('CHKDSK', E'Checks a disk and displays a status report.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='windows' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cls', E'clear the screen', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='windows' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('color <background><foreground>', E'Changes the background and foreground color of the cmd, it uses some 1 characters codes, the next ones:\n0 black\n1 blue\n2 green\n3 aqua\n4 red\n5 purple\n6 yellow\n7 white\n8 gray\n9 light blue\na light green\nb light aqua\nc light red\nd light purple\ne light yellow\nf bright white', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='windows' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('color <foreground>', E'when using only one parameter the background color is established by the default color (black) and the foreground is updated according to the param provided.', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='windows' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<disk_name>:', E'This way you can update the disk you are currently using in the cmd window. for example:\nd:\nthis way you move to the disk d', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='windows' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('dir', E'show the folders and files of the current directory', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='windows' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('timeout <seconds> && <other_instructions>', E'this way you can establish to wait <seconds> seconds before executing another command in the cmd window', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='windows' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('shutdown /h', E'hibernate the computer', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='windows' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<command1> && <command2> && ...', E'you can use && to call more than one instruction in only one line', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='windows' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mouse configurations/options', E'1) press [windows key]+r\n2) Type main.cpl and press Enter', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='windows' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rd /s /q <directory>', E'remove a directory, including folders with no content and don''t ask for confirmation', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='windows' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('watch internet password', E'1) Open the cmd with ''manager permissions''\n2) type the next command: netsh wlan show profile\n3) from the previous command check the name of the network from where you want to know the password, then type the next: \nnetsh wlan show profile name=<name_network> key=clear \n4) password is in: security configuration -> content of the password', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='windows' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('npm install -g @vue/cli', E'use npm to install vue in your system', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='vue.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('vue create <my-project>', E'Install basic template for vue project', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='vue.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('vetur', E'recommended extension in visual studio for vue.js development', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='vue.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('npx create-react-app <app_name>', E'create app <app_name> with minimal content for the react app', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='react' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('npm start', E'start your react app', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='react' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('npm build ', E'create a folder with the static version of your project that you can use for deployment', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='react' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('className', E'Equivalent to HTML class when writing HTML in JSX', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='react' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('steps for starting a react project with all the tools', E'1) npx create-react-app <app_name>\n2) npm i nanoid\n3) npm i prop-types\n4) npm i redux\n5) npm i react-redux\n6) npm i redux-thunk\n7) npm i react-router-dom', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='react' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cleanup suscriptions in react components with userEffect', E'Do something like the next:\nuseEffect(async () => {\n const abortController = new AbortController();\n const { signal } = abortController;\n const getPokemonData = async () => {\n const someFunction= await fetch(`some_api_url`, {\n signal\n },\n });\n };\n await someFunction();\n return function cleanup() {\n abortController.abort();\n };\n }, []);\nmore details in the next link: https://medium.com/@selvaganesh93/how-to-clean-up-subscriptions-in-react-components-using-abortcontroller-72335f19b6f7', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='react' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('deploy with netlify', E'1) in your react project run: npm run build\n2) if you are using react-router then inside your build folder create a file names ''_redirects'' and inside it add the next line: /* /index.html 200\n3) if you haven''t, install netlify on your local machine: \nnpm install netlify-cli -g\n4) login to netlify: netlify login\n5) netlify deploy\n6) choose new project\n7) your current dir will be: ./build\n8) if requested also use: netlify deploy --prod', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='react' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('file and code to delete after npx create-react-app <name-project>', E'1) remove yarn.lock\n2) in src, remove logo.svg\n3) in src, remove reportWebVitals.js\n4) in src/index.js remove anything related with reportWebVitals\n5) in src/app.js remove anything related with logo.svg\n', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='react' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('npm i <package1> <package2> <package3>...', E'to install multiple node package in only one command', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='react' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('npm i -g @nestjs/cli', E'install nest cli, necessary to use nest.js from the command line', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='nest.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('nest new <name-app>', E'Create a basic skeleton for a nest project', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='nest.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('nest start --debug --watch', E'start the current project in debug mode, which allow automatic updates over changes in the code', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='nest.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('change port', E'1) go to src->main.ts\n2) there you will see a line like: await app.listen(3000);\n3) by default the port is 3000, you can change that number for port updating', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='nest.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('packages for typeorm and postgresql', E'Install the next three packages:\n1) npm install --save @nestjs/typeorm\n2) npm install --save typeorm\n3) npm install --save pg', NOW(), NOW(), (select id from users where email='oscarporras02@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='nest.js' and u0.email='oscarporras02@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('simple permutation', E'In permutation order matter, for example ''a, b, c'' is not the same as ''a, c, b''. To get all possible permutations of n elements then use !n, so for example: !3 will be 6 because 3*2*1=6', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('permutate k element between a total of n', E'you want to find how many permutations of k elements between a total of n. For example, you want all permutations of 3 elements between the group ''a,b,c,d,e'' then you use the next formula:\n!n/!(n-k)\nSo in this case !5/!(5-3) which equals 5*4*3=60', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('combination', E'different from permutation, where order matters, in combination order doesn''t matter. so ''a,b,c'' is equal to ''a,c,b''. this also means that combinations of n elements in a list of n elements will be 1, since order doesn''t matter there just one possibility to get n between n. What if you want k elements of n? (where k<n, dah!). Then use the next formula:\n!n/(!k*!(n-k))\nfor example, combinations of 3 elements between a group of 5, then:\n!5/(!3*!(5-3)) = 120/(6*2) = 10', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('proof quadratic formula', E'1) ax^2 + bx + c = 0\n2) x^2 + (bx/a) + (c/a) = 0\n3) x^2 + (bx/a) = - (c/a)\n4) x^2 + (bx/a) + (b/(2a))^2 = - (c/a) + (b/(2a))^2\n5) (x+ (b/(2a)))^2 = - (c/a) + (b^2)/(4a^2)\n6) (x+ (b/(2a)))^2 = (b^2 - 4ac)/(4a^2)\n7) x+ (b/(2a)) = (+-(b^2 - 4ac)^(1/2))/(2a)\n8) x= (-b+-(b^2 - 4ac)^(1/2))/(2a)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('polar coordinates circle', E'having a circle xÂ²+yÂ²=A, then the radius and angle are:\nradius = (xÂ²+yÂ²)^(1/2)\nangle = atan(y/x)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('relation diameter and circunference', E'circunference = diameter*3.1416\ntherefore\ndiameter = circunference/3.1416', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Viete''s Formula for Pi', E'this is an approximation of pi value found by an infinite product. Viete''s formula is:\npi = 2*(2/(2^(1/2)))*(2/((2+2^(1/2))^(1/2)))*(2/((2+(2+2^(1/2))^(1/2))^(1/2)))...', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bayes theorem', E'having \nA = probability of A\nB = probability of B\nB_if_A = probability of B if A\nA_if_B = probability of A if B\nthen\nA_if_B = B_if_A*A/B\nEXAMPLE:\nA = 0.25\nB = 0.5\nB_if_A = 0.5\nA_if_B = 0.5*0.25/0.5\nA_if_B = 0.25', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('volume sphere', E'volume sphere = (4/3)*pi*r^3\nwhere r is the radius', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('surface of sphere', E'the surface of sphere = 4*pi*rÂ²\nwhere r is the radius', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cosine law', E'#in a triangle, if you know the value of two sides (a,b) and the angle C (opposite to side c) then you can get side c with the cosine law formula\n\nc = [a^2 + b^2 -(2*a*b*cos(C))]^0.5', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('angle between vectors', E'#On a bidimensional cartesian system, having two lines which connect in the origin and passing the first line in point (x1,y1) and second-line in point (x2,y2) then the angle between these two lines is:\na = (x1,y1)\nb= (x2,y2)\nangle_between_a_b = acos(ab/(|a|*|b|))\nwhere:\nab = (dot product between a and b) = (x1*x2)+(y1*y2)\n|a| = magnitude a\n|b| = magnitude b', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('find determinant by laplace', E'having a matrix of 2x2\n| a1 b1 |\n| a2 b2 |\nthe determinant is = (a1*b2)-(a2*b1)\nhaving a matrix od 3x3 \n| a1 a2 a3 |\n| b1 b2 b3 |\n| c1 c2 c3 |\ndeterminant is = \na1* determinant of |b2 b3| \n | c2 c3|\n-\na2* determinant of |b1 b3| \n | c1 c3|\n+\na3* determinant of |b1 b2| \n | c1 c2|\n\nhaving a matrix of 4x4 \n| a1 a2 a3 a4 |\n| b1 b2 b3 b4 |\n| c1 c2 c3 c4 |\ndeterminant =\na1 * determinant of | b2 b3 b4 |\n | c2 c3 c4 |\n | d2 d3 d4 |\n-\na2 * determinant of | b1 b3 b4 |\n | c1 c3 c4 |\n | d1 d3 d4 |\n+\na3 * determinant of | b1 b2 b4 |\n | c1 c2 c4 |\n | d1 d2 d4 |\n-\na4 * determinant of | b1 b2 b3 |\n | c1 c2 c3 |\n | d1 d2 d3 |\nfor biggest matrices follow the same pattern', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('crammer rule matrices', E'having a matrix of equations with a unique solution (by values z1, z2...zn), this solution can be achieved by:\nz1 = specific_matrix1/general_matrix\nz2 = specific_matrix2/general_matrix\n.\n.\n.\nzn = specific_matrixn/general_matrix\nwhere general_matrix is the normal matrix without solutions column and specific_matrixn is the general matrix but replacing n column with the column of solutions. Example:\nax + by = c\ndx + ey = f\n\nx = | c b |\n | f e |\n _____\n | a b |\n | d e |\nand\ny = | a c |\n | d f |\n _____\n | a b |\n | d e |\nspecific example:\nx - 2y = -3\n3x + y = 5\n\nx = |-3 -2| \n | 5 1 | -3+10 7\n _____ = ______ = __ = 1\n | 1 -2| 1 + 6 7\n | 3 1 |\nand\ny = | 1 -3|\n | 3 5 | 5 + 9 14\n _____ = _____ = ___ = 2\n | 1 -2| 1 + 6 7\n | 3 1 |\nsolution: x=1 and y=2', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('dot product', E'the dot product between points a and b (expressed as ''ab'') where:\na = (x1, y1)\nb = (x2, y2)\nit''s equal to:\nab = (x1*x2)+(y1*y2)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('inverse matrix', E'Having a matrix A which is invertible (also known as non-single), in other words, a matrix which determinant is not zero, then the inverse matrix (expressed as A^(-1)) is such that:\nA*A^(-1) = I\nWhere ''I'' is the identity matrix. To find the inverse matrix of A you can begin to operate the matrix until you get the identity matrix, each operation you do in the A matrix also does it in an identity matrix, the final result of the identity matrix will be the inverse matrix. Example:\n|-3 1 | | 1 0 | \n| 5 0 | | 0 1 |\n| 5 0 | | 0 1 | \n|-3 1 | | 1 0 |\n| 1 0 | | 0 1/5| \n|-3 1 | | 1 0 |\n| 1 0 | | 0 1/5| \n| 0 1 | | 1 3/5|\nTherefore:\ninverse of:\n|-3 1 | \n| 5 0 | \nis:\n| 0 1/5| \n| 1 3/5|\nand:\n|-3 1 | * | 0 1/5| = | 1 0 | \n| 5 0 | | 1 3/5| | 0 1 |', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Matrix multiplication', E'To multiply matrix A and B, the number of columns of matrix A must be equal to the number of rows in matrix B, then, for the number in m column and k row, multiple each n element of m column in matrix A with each n element of K row in matrix B. example:\n| 1 2 | * | 7 2 0 1 | \n| 5 6 | |-1 6 3 4 | \n| 7 9 | \n=\nelement in column 0 row 0 will be = 1*7 + 2*(-1) = 5\nelement in column 0 row 2 will be = 7*7 + 9*(-1) = 40\nelement in column 1 row 2 will be = 7*2 + 9*6 = 68\nThe final solution for the multiplication will be:\n| 5 14 6 9 |\n|29 46 18 29|\n|40 68 27 43|', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('transpose matrix', E'the transpose of a matrix A (expressed as A^(t)) is the matrix in which columns are equivalent to the rows of matrix A and in which rows are equivalent to A columns. As a result, the ij (i row, j column) element in matrix A will be in ji position in the transposed matrix, for each element in matrix A. Example:\n| 1 2 |\n| 3 4 | = A\n| 5 6 |\n | 1 3 5 |\nA^(t) = | 2 4 6 |\n\n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cofactor matrix', E'The cofactors matrix of A (also represented as cof(A)) is the matrix with the cofactors of ach element in the matrix. Example:\nFor the element in position i row and j column, the cofactor will be:\n(-1^(i+j))*subMatrix\nwhere submatrix is the determinant of the matrix when excluding the elements in row I and column j.\nComplete example:\n| 1 2 3 |\n| 0 4 5 |\n| 1 0 6 |\ncofactor in position 0 row and 0 column:\n(-1^(0+0))*((4*6)-(5*0)) = 24\ncofactor in position 0 row and 2 column:\n(-1^(0+2))*((0*0)-(4*1))=-4\ncofactor in position 1 row and 2 column:\n(-1^(1+2))*((1*0)-(2*1))=2\nComplete solution will be:\n|24 5 -4|\n|-12 3 2 |\n|-2 -5 4 | ', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('adjunct matrix', E'also known as the adjugate matrix. The adjunct matrix of A (expressed as adj(A)) is equal to the transpose of its cofactor matrix, since:\nadj(A) = cof(A)^(t)\nOne of the practical uses of the adjunct matrix is to be used for calculating the inverse, this is because of the next rule:\nA^(-1)=(1/det(A))*adj(A)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sum between 1 and n', E'to sum all integers between 1 and n (or between 0 and n, which is the same) user the next formula:\nsum = n*(n+1)/2\nFor example, the sum between 1 and 4 is:\nsum =4*5/2 = 10\n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('area of pallalelogram', E'having A and B, two connected vectors which form a parallelogram then the area of this parallelogram is:\n|A|*|B|*sin(Q)\nwhere:\n|A|=magnitude of A\n|B|=magnitude of B\nQ=angle between A and B\nexample:\nA=(2,0)\nB=(2,2)\nParalelogram area = 2*(8**0.5)*sin(45)=4', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cross product', E'having two vectors, which passes through the origin, in a three-dimensional space, the cross product is the vector C which is perpendicular to A and B, and which has a magnitude equal to the area of the parallelogram made by A and B. To calculate this vector use the next formula:\nHaving A = (Ai, Aj, Ak) and B = (Bi, Bj, Bk)\ni * | Aj Ak |\n | Bj Bk |\n-\nj * | Ai Ak |\n | Bi Bk |\n+\nk * | Ai Aj |\n | Bi Bj |\nExample:\nA = (0,2,0)\nB = (2,0,0)\ni * | 2 0 |\n | 0 0 |\n-\nj * | 0 0 |\n | 2 0 |\n+\nk * | 0 2 |\n | 2 0 |\n= 0i -0j + 4k', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('span', E'In linear algebra, a span of a set of vectors is all the linear combination of that set of vectors. So to say that vector A is a span of vectors B and C means that A can be expressed as, AT LEAST, one linear combination of B and C. Example:\nlet v = {(2,3),(1,2)} find if vector (19,3) is part of span v:\n2x + y = 19\n3x + 2y = 3\n\n2x + y = 19\ny = -51\n\nx = 35\ny = -51\n\nLike there is at least one way to combine the vectors in v to generate (19,3) vector then this vector is part of the span v.\n\nExample 2:\nhaving v ={(1,3,2),(-1,2,-1),(-1,12,1)} find if vector (1,1,1) is part of span v\n\nx-y-z=1\n3x+2y+12z=1\n2x-y+z=1\n\nx-y-z=1\n3x+2y+12z=1\n2x-y+z=1\n\nx-y-z=1\n0+5y+15z=-2\n0+y+3z =-1\n\nx-y-z=1\n0+5y+15z=-2\n0+0+0 =3\n\nSince valid operations generate a contradiction in the last row, then there is not even one solution for the system and therefore the vector (1,1,1) is not in the span v.\nNOTE: if instead of 3, we had got 0 in the last column then the system would have infinite solutions, and in that case we would said that vector is part of the span.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('directional cosines', E'having a vector v in a tridimensional space with components (vx, vy, vz) then the directional cosines are the cosines between the three vectors and the axis x, y and z. To find the directional cosines use the next formula:\ncos(a) = vx/||v||\ncos(b) = vy/||v||\ncos(c) = vz/||v||\nwhere ||v|| = (vx^2 + vy^2 + vz^2)^0.5\nAbout the directional cosines there is an important constant really easy to deduce:\ncos(a)^2 + cos(b)^2 + cos(c)^2 = 1', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('directional angles', E'the directional angles are just simply the acosines of the directiional vectors (therefore the angles between the three axis and the vector). You can get the axis with the next formula:\na = acos(cos(a)) = acos(vx/||v||)\nb = acos(cos(b)) = acos(vy/||v||)\nc = acos(cos(c)) = acos(vz/||v||)\nwhere ||v|| = (vx^2 + vy^2 + vz^2)^0.5', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('parametric equation', E'The line containing the point (x0, y0, z0) and parallel to the vector (A, B, C) has the next parametric equation:\nx = x0 + At\ny = y0 + Bt\nz = z0 + Ct\nexample:\npoint: (2,3,4)\nparallel vector: (2,-1,5)\nx = 2+2t\ny = 3 -t\nz = 4 + 5t', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('symmetric equation', E'The line containing the point (x0, y0, z0) and parallel to the vector (A, B, C) has the next symmetric equation:\n(x - x0)/A = (y - y0)/B = (z - z0)/C\nexample:\npoint: (2,3,4)\nparallel vector: (2,-1,5)\n(x - 2)/2 = -y + 3 = (z - 4)/5', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('vector that connects two points', E'The vector (also known as direction vector) that connects points (x0, y0, z0) and (x1, y1, z1) can be expressed as:\n(x1-x0,y1-y0,z1-z0)\nExample:\npoint1: (2,3,4)\npoint2: (2,5,-3)\nvector = (2-2, 5-3, -3-4) = (0, 2, -7)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('vectorial equation from two points', E'Having a line that passes through point (x0, y0, z0) and (x1, y1, z1) then you get the directional vector which will be equal to (x1-x0, y1-y0, z1-z0) = (A, B, C), and then the vectorial equation is:\n(x0, y0, z0) + t(A, B, C)\nexample: the line that passes through the points (2,1,3) and (-2,1,4)\ndirection vector = (-2-2, 1-1, 4-3) = (-4, 0, 1)\nvectorial equation = (2,1,3) + t(-4,0,1)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('equation of a plane', E'The equation of a plane is in the way:\nAx + By + Zy = D', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('normal vector of a plane', E'A vector is normal to a certain plane if its perpendicular to all the vectors of the plane. Having three-point (x0,y0,z0), (x1,y1,z1), (x2,y2,z2) of the plane (where the three-points are not all part of the same vector) the normal vector can be obtained like this:\nvector1=(x0-x1,y0-y1, z0-z1) = v\nvector2=(x0-x2,y0-y2, z0-z2) = b\n<also works if replace any of the previous with (x1-x2,y1-y2, z1-z2) >\n| i j k |\n| vx vy vz |\n| bx by bz|\n\ni(vy*bz - by*vz) - j(vx*bz - bx*vz) +k(vx*by - bx*vy)\n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('deduce plane having one point and normal vector', E'having a plane which has a normal plane (A,B,C) and contains the point (x0, y0, z0) then the equation of the plane is:\nA(x-x0)+B(y-y0)+C(z-z0)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('all the planes containing a point', E'All the planes containing the point (x0, y0, z0) are:\nA(x-x0) + B(y-y0) + C(z-z0)=0', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('parallel planes', E'two planes are parallel if they have the same normal vector, since we know that the equation of a plane is:\nA(x-x0)+B(y-y0)+C(z-z0)=0\nwhere (A,B,C) is the normal vector of the plane. Therefore, this two vectors will be parallel:\nA(x-x0)+B(y-y0)+C(z-z0)=0\nA(x-x1)+B(y-y1)+C(z-z1)=0', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('plane equation using three points', E'To get a plane equation we need a point in the plane and the normal vector to the plane.\nHaving three-point (x0,y0,z0), (x1,y1,z1), (x2,y2,z2) of the plane (where the three-points are not all part of the same vector) the normal vector can be obtained like this:\nvector1=(x0-x1,y0-y1, z0-z1) = v\nvector2=(x0-x2,y0-y2, z0-z2) = b\n<also works if replace any of the previous with (x1-x2,y1-y2, z1-z2) >\n| i j k |\n| vx vy vz |\n| bx by bz|\ni(vy*bz - by*vz) - j(vx*bz - bx*vz) +k(vx*by - bx*vy) = Ai + Bj + Ck\nThen the plane will be:\nA(x-x0) + B(y-y0) + C(z-z0)=0', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('derivative 0', E'On a function f(x), the derivative equals zero (f(x)''=0) mean that there is a minimum or maximum in the graph of the function, and the tangent to that point of the graphic it equals to zero.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('product property of logarithm', E'ln_x_(a*b) = ln_x_(a) + ln_x_(b)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('proof product property of logarithm', E'x^k = a -> ln_x_(a) = k\nx^m = b -> ln_x_(b) = m\nx^n = a*b -> ln_x_(a*b) = n\nx^n = (x^k)*(x^m)\nn = k+m\nln_x_(a*b) = ln_x_(a) + ln_x_(b)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('quotient property of logarithm', E'ln_x_(a/b) = ln_x_(a) - ln_x_(b)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('proof quotient property of logarithm', E'x^k = a -> ln_x_(a) = k\nx^m = b -> ln_x_(b) = m\nx^n = a/b -> ln_x_(a/b) = n\nx^n = (x^k)/(x^m)\nn = k-m\nln_x_(a/b) = ln_x_(a) - ln_x_(b)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('power property of logarithm', E'ln_x_(a^c) = c*ln_x_(a)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('proof power property of logarithm', E'ln_x_(a) = b\nx^b = a\nc*ln_x_(a) = c*b\n(x^b)^c = a^c\nx^(b*c) = a^c\nln_x_(a^c) = b*c\nln_x_(a^c) = c*ln_x_(a)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('root property of logarithm', E'ln_x_(a^(1/c)) = ln_x_(a)/c', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('proof root property of logarithm', E'ln_x_(a) = b\nx^b = a\nln_x_(a)/c = b/c\n(x^b)^(1/c) = a^(1/c)\nx^(b/c) = a^(1/c)\nln_x_(a^(1/c)) = b/c\nln_x_(a^(1/c)) = ln_x_(a)/c', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('product rule of derivatives', E'(f*g)'' = f''*g + f*g''\nExample:\n[(x^2)*sin(x)]'' = 2x*sin(x) + (x^2)*cos(x)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('quotient rule of derivatives', E'|g(x)|'' g''(x)*h(x) - g(x)*h''(x)\n|-----| = --------------------------------\n|h(x)| h(x)^2\nExample:\n| e^(x) |'' (e^x)*cos(x) + (e^x)*sin(x)\n|---------| = --------------------------------------\n|cos(x) | cos(x)^2', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('exponential rule of derivatives', E'[a^x]'' = ln(a)*(a^x)\nsince ln(e)=1\nthen:\ne^x = ln(e)*(e^x) = e^x', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('logarithm rule of derivatives', E' 1\nln(x)'' = --------\n x', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('derivative of sin(x)', E'sin(x)'' = cos(x)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('derivative of cos(x)', E'cos(x)'' = -sin(x)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('derivative of tan(x)', E'tan(x)'' = sec(x)^2 ', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('derivative of cot(x)', E'cot(x)'' = -csc(x)^2', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('derivative of sec(x)', E'sec(x)'' = tan(x)*sec(x)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('derivative of csc(x)', E'csc(x)'' = -cot(x)*csc(x)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('limit(x->0) of sin(x)/x', E'limit(x->0) of sin(x)/x = 1', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('limit(x->0) of (1-cos(x))/x', E'limit(x->0) of (1-cos(x))/x = 0', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sin(x)^2 + cos(x)^2', E'= 1', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cos(x) complement identity', E'cos(x) = sin((pi/2)-x)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sin(x) complement identity', E'sin(x) = cos((pi/2)-x)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cot(x) complement identity', E'cot(x) = tan((pi/2)-x)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tan(x) complement identity', E'tan(x) = cot((pi/2)-x)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('csc(x) complement identity', E'csc(x) = sec((pi/2) - x)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sec(x) complement identity', E'sec(x) = csc((pi/2) - x)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sin(x) periodicity identity', E'sin(x) = sin(x + 2*pi)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cos(x) periodicity identity', E'cos(x) = cox(x + 2*pi)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tan(x) periodicity identity', E'tan(x) = tan(x + pi)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sin(x) identity for negative angles', E'sin(-x) = -sin(x) ', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cos(x) identity for negative angles', E'cos(-x) = cos(x)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tan(x) identity for negative angles', E'tan(-x) = -tan(x)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ptolemy identity for sin''s sums', E'sin(a+b) = sin(a)*cos(b)+cos(a)*sin(b)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ptolemy identity for cosine''s sums', E'cos(a+b) = cos(a)*cos(b)-sin(a)*sin(b)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ptolemy identity for sine''s difference', E'sin(a-b) = sin(a)*cos(b)-cos(a)*sin(b)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ptolemy identity for cosine''s difference', E'cos(a-b) = cos(a)*cos(b)+sin(a)*sin(b)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('double angle of sine', E'sin(2a) = 2*sin(a)*cos(a)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('double angle of cosine', E'cos(2a) = cos(a)^2 - sin(a)^2\ncos(2a) = 2*[cos(a)^2]-1\ncos(2a) = 1-2*[sin(a)^2]', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pithagorean relation between tangent and secant', E'sec(x)^2 = 1 + tan(x)^2', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pithagorean relation between cotangent and cosecant', E'cot(x)^2 = csc(x)^2 - 1', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sine suplement', E'sin(pi-x) = sin(x)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cosine suplement', E'cos(pi-x)=-cos(x)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tangent suplement', E'tan(pi-x) = -tan(x)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('double angle of tangent', E'tan(2x) = 2*tan(x)\n -----------------\n 1 - [tan(x)^2]', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sum of angles in tangent', E'tan(a+b) = tan(a) + tan(b)\n ------------------------\n 1 - [tan(a)*tan(b)]', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('difference of angles in tangent', E'tan(a-b) = tan(a) - tan(b)\n ------------------------\n 1 + [tan(a)*tan(b)]', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('half angle of sine', E' |1 - cos(x) |^0.5\nsin(x/2) = Â± |-------------|\n | 2 |', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('half angle of cosine', E' |1 + cos(x)|^0.5\ncos(x/2) = Â±|-------------|\n | 2 |', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('half angle of tangent', E' sin(x) 1 - cos(x)\ntan(x/2) = ------------- = ----------------\n 1+cos(x) sin(x)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('a â F', E'this means that a belongs to set F', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('b â F', E'It means that b doesn''t belong to set F', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{3,5} = {5,3}', E'The arrangement of the objects in the set does not matter.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{6,6} = {6}', E' listing a member repeatedly does not change the set, for example, the set {11, 6, 6} is identical to the set {11, 6}', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{1, 2, 3, 4 ...} = N', E'Some sets have infinite cardinality. The set N of natural numbers, for instance, is infinite', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('N', E'This letter represents all the natural numbers, this is all the positive integers', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('{1,3,5}', E'A ser can be finite, for example this set have finite number of elements (only 3).', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Ã or {}', E'two different ways to represent the empty set', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('singleton', E'A singleton, also known as a unit set, is a set with exactly one element. For example, the set {nullâ} is a singleton containing the element null', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('âx â N, x+1 â N', E'For all x that belongs to the natural numbers, x+1 also belongs to the natural numbers.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A â B', E'Subset symbol. The definition of subset is the next:\nâx: x â A â x â B', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A â B', E'Superset symbol. The definition of superset is the next:\nâx: x â A â x â B\n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A â B and B â A', E'only possible if both sets have the same elements, therefore: A = B', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A â B', E'Proper subset symbol. A is a proper subset of B if: A â B and A â B\n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A â B', E'Symbol for proper superset. A is a superset of B if: A â B and A â  B', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('NâZâQâR', E'Natural numbers are a proper subset of the integers. Integer numbers are a proper subset of the rationals. Rational numbers are a proper subset of the real numbers.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('âA : Ã â A', E'For all set A, A is superset of the empty set since for all x, if x is not part of A then is not part of Ã.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Reflexive relation of sets', E'A â A', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Antisymmetric relation of sets', E'A â B and A â B â A = B', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Transitive relation of sets', E'A â B and B â C â A â C', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('subset relations', E'Reflexive: A â A\nAntisymmetric: A â B and A â B â A = B\nTransitive: A â B and B â C â A â C', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('total order', E'A total order is a binary relation where all the elements can be compared, For example, the numbers and the relation â¤. The total order has the next properties.\nantisymmetry: if aâ¤b and b â¤a âa=b\ntransitivity: if aâ¤b and b â¤c âa â¤c\nconnexity: aâ¤b or b â¤a', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('relation â is not total order', E'Total order must be antisymmetric, transitive, and connective. The relation â is antisymmetric and transitive but not connective because its possible that \naâb and bâa\n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('comparable sets', E'two sets a and b are comparable if a â b or b â a, if not then sets are incomparable.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('incomparable sets', E'two sets a and b are incomparable if aâb and bâa', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('if a âb and câb â câa', E'1) âx, x â c and x â b\n2) âx, x â b â x â a\n3) âx, x â c and x â a\n4) câa', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('power set', E'Having a set S, the power set is the set of all the subsets of S. This is expressed the next way: P(S). You can define power set the next way:\n P(S)={A: A â S}', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Power set size', E'If S is a finite set with |S| = n elements, for a power set P(S) it''s the total number of subsets is 2^n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('set size', E'the set is of a set S is expressed the next way: |S|', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('P(A)â Ã', E'The empty set is a set with no elements, on the other hand a power set is a set which size is 2^n where n is bigger or equal to 0, worst case the size of a power set is 2^0 = 1. Since the minimum size of a power set is 1 and the empty set size is 0 then a power set can never be equal to the empty set.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Ã â P(A) and A â P(A)', E'Since for all A, Ã â A and A â A', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A â B â P(A) â P(B)', E'Using double implication:\n1) supposing A â B, for all S â P(A) then s â A, for transitivity then S â B, therefore S â P(B)\n2) supposing P(A) â P(B), the A â P(A), then A â P(B), therefore A â B', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A âª B', E'union set between A and B: {âx: x â A or x â B}', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A â© B', E'the intersection between sets A and B: {âx: x â A and x â B}', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('disjunctive sets', E'This is when the two sets have no common elements, therefore: A â© B = Ã. If two sets A and B are disjunctives then: |A âª B| = |A| + |B|. Besides, aways: A and Ã are disjunctive.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('idempotence of union and intersection', E'A âª A = A\nA â© A = A', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Commutativity of union and intersection', E'A âª B = B âª A\nA â© B = B â© A', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('identity properties of sets', E'A â© U = A\nA âª Ã = A', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('floor and ceiling properties of sets', E'A âª U = U\nA â© Ã = Ã', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('asociativity of sets', E'A âª (B âª C) = (A âª B) âª C\nA â© (B â© C) = (A â© B) â© C', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A â A âª B', E'1) if x â A then it''s true that x â A or x â B\n2) therefore x â A âª B ', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A â© B â A', E'if x â A and x â B then x â B', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('B â A â A âª B = A', E'1) proof: B â A â A âª B = A\nlet''s suppose B â A, now to prove the equality use the double inclusion (â and â).\n- A âª B â A\n* if x â A then x â B, therefore if x â A or x â B then x â A\n- A âª B â A\n* if x â A then x â A or x â B\n2) proof: A âª B = A â B â A\nlet''s suppose A âª B = A\n- by hypothesis, if x â A equals to x â B or x â A\n- therefore if x â B then x â A, therefore B â A', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('distribution of sets', E'(A âª B) â© C = (A â© C) âª (B â© C)\n(A â© B) âª C = (A âª C) â© (B âª C)\n\n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Absorption of sets', E'A â© (A âª B) = A\nA âª (A â© B) = A\n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('B â A â A â© B = B', E'1) proof: B â A â A â© B = B, let''s suppose B â A\n- proof: A â© B â B\n* by the hypothesis, if x â B and x â A then x â B, therefore A â© B â B\n- proof: A â© B â B\n* By the hypothesis, if x â B and x â A, therefore if x â B then xâ A â© B\n2) proof: A â© B = B â B â A, let''s suppose A â© B = B\n- since x â A and x â B is equal to x â B then B must be a subset of A', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('if A âª B = Ã â A = Ã and B = Ã', E'Because if any of the two groups contain elements then the union will contain elements.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A â© B â  Ã â A â  Ã and B â  Ã', E'Because if A â© B â  Ã then exists an element which is part of both A and B group.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A / B', E'Known as set difference, âx, xâA and xâB', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A / B = A', E'Only if A and B are disyuntive', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('universe set', E'Represented with a U, set of all elements', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A^c', E'U / A', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A â© A^c = Ã', E'cause by definition and element cannot be part of A and not be part of A at the same time.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A âª A^c = U', E'The union of the elements from a group with all the elements that are not part of the group give us all the elements of the universe.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A / B = A â© B^c', E'The elements that are part of A and not part of B is equal to the intersection between A and the elements not part of B.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('(A^c) ^c = A', E'Also known as ''double complement''. The elements that are not part of the set of elements that are not part of A, this is equivalent to A. Like double negation.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A â B â B^c â A^c', E'1) assume A â B, if x is not part of B then x is not part of A, therefore B^c â A^c\n2) B^c â A^c, for the double complement, if x is part of A then x is part of B, therefore A â B.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('the morgan laws for sets', E'1) (A âª B)^c = A^c â© B^c\n2) (A â© B)^c = A^c âª B^c', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('(A â© B)^c = A^c âª B^c', E'1) (A â© B)^c â A^c âª B^c\n- having (A â© B)^c\n- âx, x â U and x â (A â© B)\n- x â A or x â B\n- x â A^c or x â B^c\n- x â A^c âª B^c\n2) (A â© B)^c â A^c âª B^c\n- having A^c âª B^c\n- x â A^c âª B^c\n- x â A or x â B\n- if x â A then x â (A â© B) then x â (A â© B)^c\n- if x â B then x â (A â© B) then x â (A â© B)^c\n- both possibilities achieve the same conclusion', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('(A âª B)^c = A^c â© B^c', E'1) (A âª B)^c â A^c â© B^c\n- having (A âª B)^c\n- x â U and x â (A âª B)\n- x â A and x â B\n- x â A^c and x â B^c\n- therefore x â A^c â© B^c\n2) (A âª B)^c â A^c â© B^c\n- having A^c â© B^c\n- x â A^c and x â B^c\n- x â A and x â B\n- x â (A âª B)\n- therefore x â (A âª B)^c', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A = (A â© B) âª (A â© B^c)', E'= A\n= A â© U\n= A â© (B U B^c)\n= (A â© B) âª (A â© B^c)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A=B â A=(A â© B)', E'- assuming A=B \n= A â© U\n= A â© (A âª A^c)\n= A â© (B âª A^c) \n= (A â© B) âª (A â© A^c) \n= (A â© B) âª Ã\n= (A â© B)\n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('âA', E'Also known as arbitrary union, defined like:\nâp:pâ âA â âb â A: p â b\n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('âA', E'Also known as arbitrary intersection, defined like:\nâp:pâ âA â âb â A: p â b\n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A^(â¤a)', E'Being A a set then we defined its subset A^(â¤a) as:\nâx â A: xâ¤a', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A^*', E'Being A a set then we defined its subset A^* as:\nâx â A: xâ 0', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A^+', E'âx, x â A and x > 0', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A^-', E'âx, x â A and x<0', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('monotony theorem of arbitrary union', E'A â B ââA â âB', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('monotony theorem of arbitrary intersection', E'A â B â âB â âA', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('âa, if a â A â a â âA', E'Because the arbitrary union of A contains all the elements of all the A elements.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('âa, if a â A â âA â a', E'Because any set ''a'' always contains all the elements of the intersection between ''a'' and other sets.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('generalized form of de morgan law', E'1) (âA)^c = â(A^c)\n2)(âA)^c = â(A^c)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('arbitrary union and intersection of power sets', E'1) â(P(A)) = A\n2) â(P(A)) = Ã', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('âA, âA â âA', E'because the union of all the sets in A contains all the elements from the intersection of all its elements. Other way to see it, the intersection of two sets is always subset of it''s union.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('explaining âA^c and âA^c', E'Having A set such that:\nâa : if a â A â Ã â a\nA^c = {âa^c : a â A}\nâA^c = intersection of the complements of each A element\nâA^c = union of the complements of each A element', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('(âA)^c = â(A^c)', E'1) x â (âA)^c\n2) x â âA\n3) âa, a â A then x â a\n4) âa, a â A then x â a^c\n5) x â â(A^c)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('(âA)^c = â(A^c)', E'1) x â (âA)^c\n2) x â âA\n3) âa, a â A then x â a\n4) âa, a â A then x â a^c\n5) x â â(A^c)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Russell paradox', E'R = {x | x â x}\nThis is the set of all the sets that don''t belong to themselves, does R belongs to this set??. This is a paradox because:\n1) if R belongs to R then R doesn''t belong to R\n2) if R doesn''t belong to R then R belongs to R', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Ordered pair', E'In mathematics, an ordered pair (a, b) is a pair of objects. The order in which the objects appear in the pair is significant: the ordered pair (a, b) is different from the ordered pair (b, a) unless a = b. Also, ordered pairs are unique, therefore, (a,b) = (a'', b'') if and only if a=a'' and b=b''', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cartesian product', E' the Cartesian product of two sets A and B, denoted AâÃâB, is the set of all ordered pairs (a, b) where a is in A and b is in B. In terms of set-builder notation, that is:\nA x B = {â(a,b) | a â A and b â B}', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cartesian plane', E'This is the cartesian product R^2 where R represents all the real numbers, every figure in the cartesian plane is a subset of points of all the ordered pairs from the cartesian plane. For instance, the circle of radius 3 with origin (0,0) is:\n{(x,y) â R^2 : x^2 + y^2 = 9}\n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cartesian product A^2', E'this is equivalent to A X A, therefore:\n{(x,y) : x,y â A}\nThe same rule applies to A^3, A^4...', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A x Ã = Ã x A = Ã', E'because the size of A X B is:\nsize of A x size of B\nsince the size of Ã is 0 then any cartesian product with Ã has no element', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A, B â  Ã then A X B = B X A â A=B', E'because the order matter in ordered pairs, therefore (a1, b1) is different to (b1, a1)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A, B â  Ã, A X B = A'' X B'' â A = A'' and B = B''', E'For cartesian product between sets that are not empty, each pair of sets provide a unique output, therefore there is only one combination to achieve a particular output.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A x (B âª C) = (A x B) âª (A x C)', E'the cardinal product of A with the union between B and C is equivalent to the union of the cardinal product between A and B, and the cardinal product between A and C.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('A x (B â© C) = (A x B) â© (A x C)', E'the cardinal product of A with the intersection between B and C is equivalent to the intersection of the cardinal product between A and B, and the cardinal product between A and C.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('proof of: A, B â  Ã then A X B = B X A â A=B', E'1) supposed A=B\n- since A = B the A x A = A x B = B x A = B x B\n2) supposed A x B = B x A\n- âx,y where x â A and y â B, then (x,y) â A x B\n- by the supposition (x, y) â B x A\n- therefore every x also is part of B and every y is part of A\n- therefore A and B has the same elements', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('proof of: A x (B âª C) = (A x B) âª (A x C)', E'1) supposed A x (B âª C)\n- (m,n) â A x (B âª C)\n- m â A and n â (B âª C)\n- n â B or n â C\n- therefore (m,n) â A x B or (m,n) â A x C\n- therefore (m,n) â (A x B) âª (A x C)\n2) supposed (A x B) âª (A x C)\n- (m,n) â (A x B) or (m,n) â (A x C)\n- either way n â B âª C\n- therefore (m,n) â A x (B âª C)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ordered pair defined as a set', E'(a,b) = {{a}, {a,b}}\nnotice that the properties of ordered pair remains like:\n{{a}, {a,b}} = {{a''}, {a'',b''}} only if a=a'' and b=b'' \n{{a}, {a,b}} = {{b}, {b,a}} only if a=b (in which case this is a singleton)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tuple', E'a tuple is a finite ordered list (sequence) of elements. Mathematicians usually write tuples by listing the elements within parentheses ''( )'' and separated by commas; for example, (2, 7, 4, 1, 7) denotes a 5-tuple.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tuple as an ordered pair', E'the tuple (a1, a2, a3) can be expressed as the ordered pair ((a1, a2), a3), also the tuple (a1,a2,a3,a4) can be expressed as ordered pair ((a1,a2,a3), a4) and the same pattern with bigger tuples.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('well-order', E'A well-order set is a total order set where every nonempty subset of this set has a least element (a smallest one), in mathematics terms this is:\nS â A : (S â  Ã â âm â S: (âx â S : m â¤ x))', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('proof that ân â N : 0+1+...+n = n*(n+1)/2', E'1) we prove the inductive case with n=0, then:\n0 = (0*1)/2\n2) we prove all the other cases by adding the next case:\n0+...+n+(n+1) = (n*(n+1)/2) + (n+1)\n0+...+n+(n+1) = (n*(n+1) + 2n +2)/2\n0+...+n+(n+1) = (n^2+3n +2)/2\n0+...+n+(n+1) = (n+1)*(n+2)/2', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('inductive set', E'A â N, A is an inductive set, if âx â A, x+1 â A\nFor example, the positive pairs is not an inductive set but the set of all the integers bigger than 300 is an inductive set.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('principle of induction', E'The principle of induction is a way of proving that P(n) is true for\nall integers n â¥ a. It works in two steps:\n(a) [Base case:] Prove that P(a) is true.\n(b) [Inductive step:] Assume that P(k) is true for some integer\nk â¥ a, and use this to prove that P(k + 1) is true.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('proof that ân â N : n(n+1) %2 == 0', E'1) inductive case\n0(1) =0\n0%2=0\n2) (n+1)(n+2) % 2 == 0\n(n^2 + 3n + 2) % 2 == 0\nn(n+1) + 2(n+1) % 2 == 0\nsince n(n+1)%2==0 and 2(n+1)%2==0 \nthen the original statement is true.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fibonacci sequence by arithmetic operation', E'for all n>=1\n 1 | | 1 + 5^0.5 |^n | 1 - 5^0.5 |^n|\nFn = -------- * | |----------------| - |----------------| |\n 5^0.5 | | 2 | | 2 | |', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('inductive proof of fibonacci arithmetic formula', E'proof that for all n>=1 we can get the Fibonacci number this way:\n 1 | | 1 + 5^0.5 |^n | 1 - 5^0.5 |^n|\nFn = -------- * | |----------------| - |----------------| |\n 5^0.5 | | 2 | | 2 | |\n\nwe will use the principle of strong induction, so first we proof the first two cases, then we proof every case is true.\n1) if n=1\n\n 1 | | 1 + 5^0.5 |^1 | 1 - 5^0.5 |^1|\nF(1)= -------- * | |----------------| - |----------------| |\n 5^0.5 | | 2 | | 2 | |\n\n 2 * 5^0.5\n Fn = ------------- = 1\n 2 * 5^0.5\n\n2) if n=2\n\n\n 1 | | 1 + 5^0.5 |^2 | 1 - 5^0.5 |^2|\nF(2)= -------- * | |----------------| - |----------------| |\n 5^0.5 | | 2 | | 2 | |\n\n 4 * 5^0.5\n Fn = ------------- = 1\n 4 * 5^0.5\n\n3) general case\n\nF(n+1) = Fn + F(n-1)\n\n 1 | | 1 + 5^0.5 |^n | 1 - 5^0.5 |^n|\n-------- * | |----------------| - |----------------| | +\n5^0.5 | | 2 | | 2 | |\n\n 1 | | 1 + 5^0.5 |^(n-1) | 1 - 5^0.5 |^(n-1)|\n-------- * | |----------------| - |----------------| | \n5^0.5 | | 2 | | 2 | |\n\n=\n\n 1 | | 1 + 5^0.5 |^n | 1 + 5^0.5 |^(n-1)|\n-------- * | |----------------| + |----------------| | -\n5^0.5 | | 2 | | 2 | |\n\n 1 | | 1 - 5^0.5 |^n | 1 - 5^0.5 |^(n-1)|\n-------- * | |----------------| + |----------------| | \n5^0.5 | | 2 | | 2 | |\n\n<by golden ratio recurrence the previous is equal to>\n\n 1 | | 1 + 5^0.5 |^(n+1) | 1 - 5^0.5 |^(n+1)|\nFn = -------- * | |----------------| - |---------------| |\n 5^0.5 | | 2 | | 2 | |', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('principle of strong induction', E'similar to the principle of induction, but in this case instead of using only the previous F(n) case to prove F(n+1) we need more cases. For example, to prove the Fibonacci arithmetic formula, we should prove that the formula works for the first two cases and then shows that F(n+1) = F(n) + F(n-1)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('well-ordering principle', E' It states that every non-empty set of positive integers contains a least element (smallest). This principle is equivalent to:\n- principle of induction\n- principle of strong induction', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('proof that ân â¥3, n! â¥ 0 + ... + n', E'1) inductive case\nif n=3\n3!=6\n6 â¥ 1+2+3\n2) general case\n(n+1)! â¥ 0 + ... + n + (n + 1)\n(n+1)*n! â¥ 0 + ... + n + (n + 1)\nn*n!+n! â¥ 0 + ... + n + (n + 1)\nNow, proof that n*n!â¥n+1 when nâ¥3\n2.1) inductive case\n3*3! â¥4\n2.2) general case\n(n+1)*(n+1)!â¥n+1+1\n(n+1)*(n+1)!â¥n+1+1\nn*(n+1)! + (n+1)! â¥ n+1+1\nsince n*(n+1)! â¥ 1 for all n â¥ 3, then the initial statement is true', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('isomorphic sets', E'an isomorphism is a structure-preserving mapping between two structures of the same type that can be reversed by an inverse mapping. For example:\n{0,3,6,9...} and {1,3,5,7...} are isomorphic groups because each element of the first group can be paired with one element of the second group and the pair keeps the structure of the order. Another example, any Z^(â¥x) and N sets are isomorphic.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ân,k â N, |N^(â¥k)|â n', E'1) inductive case\nprove that |N^(â¥k)|â 0 and |N^(â¥k+1)|â 0\nsince k â N^(â¥k) then |N^(â¥k)|â 0\nalso since k+1 â N^(â¥k+1) |N^(â¥k+1)|â 0\n\n2) general case:\n|N^(â¥k)| â  n+1\n|N^(â¥k) / {k}| â  n\n|N^(â¥k+1)| â  n\n\nThis theorem can be use to prove that N set is infinite', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('subsets of power set with limited cardinality', E'for example \nP_2_(A) = subsets of A of only two elements\nP_â¥3_(A) = subsets of A of three or more elements', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('if |A| = n and n > 1 then |P_2(A)| = 1+2+...+(n-1)', E'1) inductive case \nIf |A|=2 then |P_2(A)| = 1, cause only one way to make a set of two from 2 elements.\n2) general case\nif |A| = n+1\nhaving B = A {a_n+1} \nThis is B is all elements of A except the last one\n|P_2(B)| = 1+2+...+(n-1)\nP_2(A) / P_2(B) = {{a1, a_n+1}, {{a2, a_n+1},..., {{an, a_n+1}}\ntherefore:\n|P_2(A) / P_2(B)| = n\ntherefore:\n|P_2(A)| = 1+2+...+(n-1)+n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('if |A|=n and n>1 then P_2(A)=n*(n-1)/2', E'This is a consequence of the next two theorems:\n1) If |A|=n and n>1 then P_2(A)=1+2+...+n-1\n2) 1+2+...+n = n*(n+1)/2', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('prove permutation n!', E'The permutation is different ways to organize elements if order matters. The ways to order n elements is n, let prove it:\n1) base case\nn=1 then just one way to sort\n2) inductive case\n|A| =n+1\nB= A/{a_n+1} \n|B| = n\n|P_n(B)| = n\nfor every list in |P_n(B)| join it with the element a_n+1 in different position, first in the position 0, then in the position 1 for a new list, and like that antul the las position (n+1). This should be repeat for every list in P_n(B). Like P_n(B) has a total of n! list and the new element will generate n+1 lists for each list in P_n(B), then:\n|P_n(A)| = n*(n+1)\n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('prove combinations with repetition of k elements in n size group = n^k', E'1) base case\nprove 1 in n combination\nfor groups of only 1 element, having n different elements then the solution is n.\n2) inductive case\nhaving that k in n permutation is n^k\nadding one element to the size of the lists means take every element of the list (which has n elements) and combined with the previous lists. Therefore:\nn^k*n = n^(k+1)\n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('prove permutations of k elements in n size = n!/(n-k)!', E'1) base case\nif k=1\nn!/(n-1)! = n\njust n ways to permute lists of 1 element from a total of n different elements\n2) inductive case\nif we add one element then every list will be reordered with the new element (there are n-k possibilities), then we multiple everything by n-k, then:\n(n-k)! = (n-k-1)!*(n-k)\nn!*(n-k)/(n-k-1)!*(n-k)\nn!/(n-k-1)! = n!/(n-(k+1))!\nwhich is equivalent to the inductive case\n\n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('a|b', E'Having a,b â Z and a|b it means a divide b, therefore there is an s â Z and:\na*s = b', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('equivalents to a|b', E'1) -a|b\n2) a|-b\n3) -a|-b\n4) |a| | |b|', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('1|a', E'since 1*a = a then it always exists the s â Z such that s*1=a', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('if aâ 0 then a|a', E'cause for every number different to 0, a/a = 1, therefore a*1=a, therefore a|a', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('if bâ 0 and a|b then |a| â¤ |b|', E'a*s=b\n|a*s|=|b|\n|a|*|s|=|b|\n1 â¤ |s|\n|a| â¤ |a|*|s| \n|a| â¤ |b|', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('if a|b and b|a then |a| = |b|', E'using the next rule:\nif a|b then |a| â¤ |b|\nthen for this hypethis we have:\n|a| â¤ |b| and |b| â¤ |a|\ntherefore:\n|a| = |b|', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('if a|b and b|c, then a|c', E'We have that:\na*e = b\nand\nb*f = c\nusing substitution:\na*e*f = c\na*(e*f) = c\ntherefore a | c', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('if c|a and c|b then c | (ax + by), where x,y â Z', E'having m,n such that m*c = a and n*c=b, then:\nxa + yb =mcx + ncy\nxa + yb =(mx + ny)*c\ntherefore c | xa + yb\n\n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('partial order', E'a partially ordered set follows the next three principles (explained with the â¤ relations which is partial order):\nreflexivity: a â¤ a\nantisymmetry: a â¤ b and b â¤ a then a = b\ntransitivity: a â¤ b and b â¤ c then a â¤ c ', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('(N*, |) is partial order', E'reflexivity: a | a\nantisimmetry: if a | b and b | a then a=b\ntransitivity: a | b and b | c then a | c', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('(Z, |) is not partial order', E'it has the transitivity property: if 2 | -4 and -4 | 8 then 2 | 8\nbut it doesn''t have antisymmetry: -2 | 2 and 2 | -2 but 2 â  -2\nneither reflexivity: 0 | 0 is false\n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('division algorithm', E'having a,d â Z with d â  0, â! e, r such that:\na = d*e + r\nwhere: 0 â¤ r < |d|', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('â! x', E'This is the uniqueness quantification, it means ''exist one and only one x''', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('0 = d%a', E'The remainder of a/d is 0 if and only if d|a', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Greatest common divisor', E'the greatest common divisor between a and b is:\nmax(D_a â© D_b)\nthis is also represented by: g.c.d(a,b)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('equals to g.c.d(a,b)', E'g.c.d(-a,b)\ng.c.d(a,-b)\ng.c.d(-a,-b)\ng.c.d(b,a)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('if d|a then g.c.d(d,a) = d', E'cause ''d'' is the divisor of ''a'' and the greatest divisor of a number is the number itself.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('golden ratio', E'the golden ratio is the ratio between two numbers a and b such that:\na+b is to a as a is to b. Therefore:\n(a+b)/a = a/b\n(a+b)*b = a^2\n0 = a^2 - ab - b^2\nhaving this in a equation form of one variable with b=1 and a=x, then:\nx^2 - x - 1 = 0\nby quadratic formula this equation has two solutions:\nx1 = 1.618...\nx2 = -0.618...\nboth solution are considered the golden ratio.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('golden ratio recurrence', E'having that the golden ratio has two values:\nx1 = 1.618...\nx2 = -0.618\nfor any of the previous values the next recurrence is true:\nx^(n+2) = x^(n+1) + x^n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('golden ratio as quadratic formula', E'the golden ratio es the two solutions for the equation:\nx^2 - x - 1 = 0\nsolving this as a quadratic we have:\nx = (1 +- (1 - 4(1)(-1))^0.5)/2\nx = (1 +-5^0.5)/2\ntherefore the two quadratic solutions are:\nx1 = (1 + 5^0.5)/2 = 1.618...\nx2 = (1 - 5^0.5)/2 = -0.618...', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sum of odd terms in fibonacci sequence', E'a_1 + a_3 + ... + a_n = a_(n+1)\nexample: 1,1,2,3,5,8,13\n1+2+5=8', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sum of even terms in fibonacci sequence', E'a_0 + a_2 + ... + a_n = a_(n+1)-1\nexample: 1,1,2,3,5,8,13\n1+3+8=13-1', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('if g.c.d(a,b)=d then d is the minimal positive linear combination of a and b', E'a linear combination between a and b has the next form:\nm = ax + by\nhaving x,y â Z\nthen the minimal positive value of m is d.', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('D_a â© D_b = D_g.c.d(a,b)', E'the intersection of divisors of a and b are all the divisors of g.c.d(a,b)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('properties of g.c.d(a,b) = d', E'1) d > 0\n2) d|a and d|b\n3) if e|a and e|b then e|d', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('if dâ 0 and a =de + r then g.c.d(a,d) = g.c.d(d,r)', E'having m0 = g.c.d(a,d) and m1=g.c.d(d,r)\nthen m0|a and m0|d therefore m0|(a-de)\ntherefore m0|r\nthen m0 is common divisor between a and r, then m0â¤m1\nsimilarly m1 = g.c.d(d,r)\nm1|d and m1|r therefore m1|(de+r)\ntherefore m1|a\nthen m1 is common divisor between r and a, then m1â¤m0\nconclusion: m0=m1', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('euclidean algorithm to find the g.c.d', E'to find g.c.d of a and b\nwrite the next equation:\na = bm + c\n<where m is Math.floor(a/b) and c = a-bm>\nif c=0 then b is the solutions\notherwise a=b and b=c and repeat the process\nExample:\nFind g.c.d of 27 and 15\n27 = 15x + d\n27 = 15*1 + 12\n15 = 12x + d\n15 = 12*1 + 3\n12 = 3*x + d\n12 = 3*4 + 0', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sum of odds and square power', E'the sum of the first n odd numbers is equal to the square of n.\nExamples:\nthe sum of the first 4 odd numbers: 1,3,5,7 = 16\nthe sum of the first 3 odd numbers: 1,3,5 = 9', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sum of evens and square power', E'the square of n is equal to the sum of the first n even numbers plus n.\nExamples:\nsquare of 3: (0+2+4)+3=0\nsquare of 5: (0+2+4+6+8)+5=25', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('divide by two binary numbers', E'if the binary number is even then the split will be just the delete of the last number.\nExample 1:\n110 (6)\n11 (3)\nExample 2:\n11010 (26)\n1101 (13)\nif is an odd binary then deleting the last number will not give an exact division by two but it will be like floor operation over the result of dividing by two.\nExample 1:\n111 (7)\n11 (3)\nExample 2:\n1101 (13)\n110 (6)', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('why 1/0 â  â', E'1/0 = â\n1 = â*0\n2*1 = â*0*2\n2 = â*(0*2)\n2 = â*0\n<by the initial assumption we have that>\n2 = 1\nWhich breaks the basic arithmetic rules. Therefore 1/0 â  â', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('remove last character when is 0 in every number system', E'when you remove the last character of a number, and the number is zero, then you are splitting the number in its system base. Example:\ndecimal system: 120 -> 12 -> 120 divided by 10\nbinary system: 1100 -> 110 -> 1100 divided by 2\nhexadecimal system: AB00 - > AB00 divided by 16', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='mathematics' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bubble sort', E'def bubble_sort(x)\n i = 0\n loop do\n if i == x.length\n puts ''['' + x.join('','') + '']''\n break\n end\n j = 1\n loop do\n break if j == (x.length - i)\n if x[j - 1] > x[j]\n temp = x[j - 1]\n x[j - 1] = x[j]\n x[j] = temp\n end\n j += 1\n end\n i += 1\n end\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sieve of erastothenes', E'#algorithm to find prime numbers\ndef sieve_of_eratosthenes(numMax)\n sol = Set.new\n (2..numMax).each {|n| sol.add(n)}\n sol.each do |s|\n i=s*2\n while i<=numMax\n sol.delete i\n i+=s\n end\n end\n sol\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('insertion sort algorithm', E'def sort_itself(array)\n (1..(array.size-1)).each do |i|\n last=i\n while last>0\n if(array[last]<array[last-1])\n temp = array[last]\n array[last] = array[last-1]\n array[last-1] = temp \n else\n break\n end\n last-=1\n end\n end\n array\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('quicksort algorithm', E'#quicksort algorithm\ndef quicksort(array)\n part = partition(array)\n part.inspect\nend\n\ndef partition(array)\n return array if array.length<2\n middle=array[0]\n before=[]\n after=[]\n array.slice!(0) \n array.each do |a| \n if a>middle\n after.push(a)\n else\n before.push(a)\n end\n end\n before=partition(before)\n after=partition(after)\n sol = (before.concat([middle])).concat(after)\n return sol\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('merge sort algorithm', E'#sort the second part, which is strings, sorting the first part, which is numbers\n#example possible item received is [''asd 3'',''df 5'',''oz 2'']\ndef full_merge_sort(array)\n array = merge(array.clone)\n array.map{|a| a.split()[1]}\nend\n\ndef merge(array)\n return array if array.length<2\n array1 =array.clone[0...(array.length/2)]\n array2 =array.clone[(array.length/2)...array.length]\n array1 = merge(array1.clone)\n array2 = merge(array2.clone)\n total = array1.length+array2.length\n sol=[]\n (total).times do\n if array2.length>0 && (array1.length==0 || array2.first.split()[0].to_i<array1.first.split() \n [0].to_i)\n #p array2.first\n sol.push(array2.first)\n array2.delete_at(0)\n else\n #p array1.first\n sol.push(array1.first)\n array1.delete_at(0)\n end\n end\n sol\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('counting sort', E'#sort only numbers with no associated value\ndef simple_counting_sort(array)\n max = array.max\n sol = Array.new(max+1,0)\n array.each{|a| sol[a]+=1}\n sort_sol = []\n sol.each_with_index do |s, i|\n (1..s).each{|j| sort_sol.push(i)}\n end\n sort_sol\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pow algorithm', E'#efficient method to get x^n\ndef my_pow(x, n)\n return my_pow(1/x, -1*n) if n<0\n return 1 if n==0\n return x if n==1\n return x*my_pow(x*x, (n-1)/2) if n.odd?\n return my_pow(x*x, n/2) if n.even?\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sqrt algorithm', E'#efficient method to get a close aproximation to the square of a number in few steps\ndef my_sqrt(x)\n string_x = x.to_s.split('''')\n subs = string_x[0...(string_x.length/2).floor]\n trunc = subs.join('''').to_i+1\n x = x.to_f\n trunc = trunc.to_f\n loop do\n trunc = ((x/trunc)+trunc)/2.0\n return trunc if (trunc+0.0001)**2>x && trunc**2<=x\n end\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('algorithm laplace determinant', E'#get determinant of a matrix by laplace\ndef laplace_determinant(matrix)\n return ''matrix must be nxn'' if matrix.any?{|m| m.length!=matrix.length}\n\n matrix_recursion(matrix.clone)\nend\n\ndef matrix_recursion(matrix)\n return (matrix[0][0]*matrix[1][1])-(matrix[0][1]*matrix[1][0]) if matrix.length==2\n sol=0\n matrix[0].each_with_index do |m, i|\n sub_matrix = matrix.map(&:clone) #to clone each array inside this array\n sub_matrix.slice!(0)\n (0..sub_matrix.length-1).each{|j| sub_matrix[j].slice!(i)}\n sol+=((-1)**(i))*m*matrix_recursion(sub_matrix.clone)\n end\n sol\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('depth first search algorithm', E'#depth first search algorithm for a graph tree\ndef depth_first_search(graph)\n g1 = Graph_list.new(graph)\n g1.get_list\nend\n\nclass Graph_list\n attr_accessor :graph, :word\n \n def initialize graph\n @graph = graph\n end\n \n def get_list\n @word = []\n item_next(0)\n @word\n end\n \n def item_next(item)\n return if @word.include?(item)\n @word.push(item)\n @graph[item].each{|it| item_next(it)}\n end\nend\n\np depth_first_search({\n 0 => [2], \n 1 => [4], \n 2 => [5, 0, 3], \n 3 => [2], \n 4 => [1, 5], \n 5 => [4, 2]\n})\n# => [0, 2, 5, 4, 1, 3]', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('breath-first search algorithm', E'#breath first search algorithm for a graph tree\n@sol = []\n@global_graph = nil\ndef bfs(graph)\n @global_graph = graph\n @sol = [0]\n next_level([0])\n @sol\nend\n\ndef next_level(list)\n newList=[]\n list.each do |item|\n @global_graph[item].each do |child|\n unless @sol.include?(child)\n @sol.push(child) \n newList.push(child)\n end\n end\n end\n return if newList.length==0 \n next_level(newList.clone)\nend\n\np bfs({0=>[1, 2], 1=>[0, 2], 2=>[0, 1, 3, 4, 5], 3=>[2, 4], 4=>[3, 2], 5=>[2]})\n\n\n# => [0, 1, 2, 3, 4, 5]', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pre-order traversal', E'# pre-order: root, left, right\nclass Node\n attr_accessor :data, :left, :right\n def initialize(data)\n @data = data\n end\nend\n\ndef pre_order(node)\n if node == nil\n return ''''''''\n end\n result = ''''#{node.data} ''''\n result += pre_order(node.left)\n result += pre_order(node.right)\n end', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('in-order traversal', E'# in-order: left, root, right\nclass Node\n attr_accessor :data, :left, :right\n def initialize(data)\n @data = data\n end\nend\n\ndef in_order(node)\n if node == nil\n return ''''''''\n end\n result += in_order(node.left)\n result = ''''#{node.data} ''''\n result += in_order(node.right)\n end', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('post-order traversal', E'# post-order: left, right, root\nclass Node\n attr_accessor :data, :left, :right\n def initialize(data)\n @data = data\n end\nend\n\ndef post_order(node)\n if node == nil\n return ''''''''\n end\n result += post_order(node.left)\n result += post_order(node.right)\n result = ''''#{node.data} ''''\n end', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hanoi steps algorithm', E'#show steps to move hanoi discs from 1 to 3 with <number_of_discs> numbers of discs\ndef hanoi_steps(number_of_discs)\n # your code here\n tower(number_of_discs, 1, 2, 3)\nend\n\ndef tower(n , from_rod, aux_rod, to_rod)\n if n == 1\n puts ''''#{from_rod}->#{to_rod}''''\n else\n tower(n-1, from_rod, to_rod, aux_rod) \n puts ''''#{from_rod}->#{to_rod}''''\n tower(n-1, aux_rod, from_rod, to_rod) \n end\nend\n\nhanoi_steps(2)\n# => 1->2 \n# 1->3 \n# 2->3\n\nhanoi_steps(3)\n# => 1->3 \n# 1->2\n# 3->2\n# 1->3\n# 2->1\n# 2->3\n# 1->3\n\nhanoi_steps(4)\n# => 1->2\n# 1->3\n# 2->3\n# 1->2\n# 3->1\n# 3->2\n# 1->2\n# 1->3\n# 2->3\n# 2->1\n# 3->1\n# 2->3\n# 1->2\n# 1->3\n# 2->3', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('non-overlapping intervals', E'#return minimal numbers of elements to avoid overlapping between intervals\nvar eraseOverlapIntervals = function(intervals) {\n let sorted = merge_sort([...intervals]); \n return overlap([...sorted]);\n};\n\nlet overlap = function(sorted){\n let first=0;\n let second =1;\n let sol=0;\n while(second<sorted.length){\n if(sorted[first][1]>sorted[second][0]){\n sol++;\n if(sorted[first][1]>sorted[second][1]){\n first=second;\n }\n }\n else{\n first=second;\n }\n second++;\n }\n return sol;\n}\n\nlet merge_sort = function(intervals){\n let list1 = [...intervals].slice(0,Math.floor(intervals.length/2));\n let list2 = [...intervals].slice(Math.floor(intervals.length/2), intervals.length);\n if(list1.length>1){\n list1 = merge_sort([...list1]);\n }\n if(list2.length>1){\n list2 = merge_sort([...list2]);\n }\n let total = list1.length+list2.length;\n let sol=[];\n for(let i=0; i<total; i++){\n if(list2.length>0 && (list1.length==0 || list2[0][0]<list1[0][0])){\n sol.push(list2[0]);\n list2 = list2.filter((item, index)=>{ if(index!=0) return item;} );\n }\n else{\n sol.push(list1[0]);\n list1 = list1.filter((item, index)=>{ if(index!=0) return item;} );\n }\n }\n return sol;\n}', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('valid parentheses algorithm', E'//check if parentheses order is valid\nvar isValid = function(s) {\n let sList = s.split('''');\n while(sList.length>0){\n currentLength=sList.length;\n for(let i=0; i<sList.length; i++){\n if(properPair(sList[i], sList[i+1])) {\n sList = sList.filter((element, position)=> position!=i && position!=i+1);\n i--;\n }\n }\n if(currentLength==sList.length) return false;\n }\n return true;\n};\n\nfunction properPair(x, y){\n if(x+y==''()'' || x+y==''{}'' || x+y==''[]'') return true;\n return false;\n}', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Hamming weight algorithm', E'#receive a decimal number and count how many 1''s has it''s binary version\ndef hamming_weight(n)\n count = 0\n while n>0\n count+= n%2\n n = n/2\n end\n count\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('convert to binary algorithm', E'#convert number from decimal to binary\ndef to_binary(number)\n return ''0'' if number==0\n binary=''''\n while number>0\n binary = ''''#{number-((number/2)*2)}''''+binary\n number = number/2\n end\n p ''''#{binary}''''\n binary\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('house robber', E'//having an array which represents the money in contiguous houses\n//if you cannot steal two contiguous houses find the max money you can get\nlet best=0;\nvar rob = function(nums) {\n let dynamic_max=[0,0];\n for(let i=0; i<nums.length; i++){\n let current = nums[i];\n let previous = dynamic_max[dynamic_max.length-1];\n let backPrevious = dynamic_max[dynamic_max.length-2];\n dynamic_max.push(Math.max(previous, backPrevious+current));\n }\n return dynamic_max[dynamic_max.length-1];\n};', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('best time to buy and sell stocks with cooldown', E'#receive a list of numbers, each number is the price of the stock in the nth day\n#you buy or you sell a stock. First, you need to buy a stock to sell\n#after buy then sell or nothing, after selling then buy or nothing\n#after selling you have to wait one day to buy again\n#find max revenue following this rules\ndef max_profit(prices)\n return 0 if prices.nil? || prices[1].nil?\n\n buy=[-1*prices[0], ([-1*prices[0], -1*prices[1]]).max]\n sell = [0, ([0, prices[1]-prices[0]]).max]\n \n (2..prices.length-1).each do |i|\n buy.push([buy[i-1], sell[i-2]-prices[i]].max) #max win when last action was buy\n sell.push([sell[i-1], buy[i-1]+prices[i]].max) #mx win when last action was sell\n end\n sell[-1]\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('diameter of binary tree', E'#find max minimal path between two nodes\ndef diameter_of_binary_tree(root)\n @sol=0\n post_order(root, 0)\n @sol\nend\n\ndef post_order(root, n)\n return n-1 if root.nil?\n left_size = post_order(root.left, n+1)\n right_size = post_order(root.right, n+1)\n new_sol = (left_size + right_size - 2*n)\n @sol= new_sol > @sol ? new_sol : @sol\n [left_size, right_size].max\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('linked list cycle', E'//find if there is a cycle in the linked list\nvar hasCycle = function(head) {\n sol = false;\n nodes = new Object();\n next_level(head);\n return sol;\n};\n\nlet next_level = function(head){\n if(head==null) return;\n if(nodes[head.val]==undefined) nodes[head.val]=[head];\n else if(nodes[head.val].includes(head)){\n sol=true;\n return;\n }\n else nodes[head.val].push(head);\n next_level(head.next);\n}', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Linked List Cycle II', E'#if the linked list has a cycle return the node where the cycle begins\n#if not return null\ndef detectCycle(head)\n @nodes = Hash.new\n @sol =nil\n next_node(head)\n @sol\nend\n\ndef next_node(node)\n return if node.nil?\n if(@nodes[node.val].nil?)\n @nodes[node.val]=[node]\n elsif(@nodes[node.val].include?(node))\n @sol=node\n return\n else\n @nodes[node.val].push(node)\n end\n next_node(node.next)\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('counting bits', E'//given a number num return the number of 1''s of the binary version for all the numbers\n//between 0 and n, for example num=1 then sol=[0,1], num=5 then sol=[0,1,1,2,1,2] etc...\nvar countBits = function(num) {\n if(num==0) return [0];\n if(num==1) return [0,1];\n let list=[0,1];\n let sol=[0,1];\n let j=0;\n for(let i=0;i<=num-2;i++){\n if(j==list.length){\n j=0;\n list=[...sol];\n }\n sol.push(parseInt(1+list[j]));\n j++;\n }\n return sol;\n};', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('missing numbers', E'#having an array nums which contains all the numbers between 0 and n except 1\n#find the missing number\ndef missing_number(nums)\n grades = Hash.new\n (0..nums.length).each{|n| grades[n]=0}\n nums.each{|n| grades.delete(n)}\n grades.each_key {|key| return key }\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('remove invalid parentheses', E'# @param {String} s\n# @return {String[]}\ndef remove_invalid_parentheses(s)\n @len=0\n @solutions=Hash.new\n sLists = Hash.new\n sLists[s]=0\n keep_removing(sLists)\n @solutions.keys\nend\n#DFS keep removing until a size provide valid solutions\ndef keep_removing(sLists)\n sLists.each_key{|s| @solutions[s]=0 if is_sol(s)}\n return if @solutions.keys.length>0\n newList=Hash.new\n sLists.keys.each do |s|\n sArray = s.split('''')\n (sArray.length).times do | i|\n newList[sArray.clone.tap{|t| t.delete_at(i)}.join('''')]=0 if (s[i]==''('' || s[i]=='')'')\n end\n end\n #p newList\n keep_removing(newList)\nend\n#check if s is valid\ndef is_sol(s)\n sArray = s.split('''')\n validParentheses=0\n for i in 0...sArray.length do\n if sArray[i]==''(''\n validParentheses+=1\n elsif sArray[i]=='')''\n validParentheses-=1 \n end\n return false if validParentheses<0\n end\n true if validParentheses==0\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Path Sum III', E'#find downwards paths which items sum is equal to a given sum parameter\n#path does not need to begin in the root or finish in a leaf\ndef path_sum(root, sum)\n @sum=sum\n @sol = 0\n dfs(root, [])\n @sol\nend\n\ndef dfs(root, arr)\n return if root.nil?\n arr.push(root.val)\n search_solutions(arr.clone)\n dfs(root.left, arr.clone)\n dfs(root.right, arr.clone)\nend\n\ndef search_solutions(arr)\n arr = arr.reverse\n total=0\n for j in 0...arr.length\n total+=arr[j]\n @sol+=1 if total==@sum\n end\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Group Anagrams', E'#having a list of words, group words with are anagrams each other\n#the output is an array, doesn''t matter the order\ndef group_anagrams(strs)\n sols = Hash.new\n strs.each do |word|\n arr = word.split('''').sort.join('''')\n if sols[arr].nil?\n sols[arr]=[word]\n else\n sols[arr].push(word)\n end\n end\n sols.values\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES (' Queue Reconstruction by Height', E'#Suppose you have a random list of people standing in a queue. Each person is described by a #pair of integers (h, k), where h is the height of the person and k is the number of people in front of #this person who have a height greater than or equal to h. Write an algorithm to reconstruct the queue.\n# @param {Integer[][]} people\n# @return {Integer[][]}\ndef reconstruct_queue(people)\n sol = Array.new(people.length, [Float::INFINITY, 0])\n sort_people = people.sort{|a,b| a[0]<=>b[0]}\n sort_people.each do |peo|\n i=0\n (0...sol.length).each do |j|\n if i==peo[1] && sol[j][0]==Float::INFINITY\n sol[j]=peo\n break\n elsif sol[j][0]>=peo[0]\n i+=1\n end\n end\n end\n sol\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Search a 2D Matrix II', E'# look target in m x n matrix, true if the number is there, false if not\n#numbers keep increasing both through the x axis and through the y axis of the matrix.\ndef search_matrix(matrix, target)\n return false if matrix==[] || matrix==[[]] || matrix[0][0]>target || matrix.last.last<target\n @matrix = matrix\n @target = target\n @sol=false\n go_next(0,0)\n @sol\nend\n\ndef go_next(i,j)\n \n return if @sol==true\n if i==@matrix.length || j == @matrix[i].length || @matrix[i][j]>@target\n return\n elsif @matrix[i][j]==@target\n @sol=true\n end\n @matrix[i][j]=Float::INFINITY\n go_next(i+1,j)\n go_next(i,j+1)\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('coin change', E'#coins is a list of different coin values, amount is a number\n#having an infinite amount of each different coin\n#find the minimum number of coins to achieve amount, -1 if impossible\ndef coin_change(coins, amount)\n solution = Array.new(amount+1, amount+1)\n solution[0]=0\n for i in 1..amount\n for j in 0...coins.length\n if coins[j]<=i\n solution[i]= [solution[i], 1+solution[i-coins[j]]].min\n end\n end\n end\n solution.last>amount ? -1 : solution.last\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Word Break', E'#Given a non-empty string s and a dictionary wordDict containing a list of non-empty #words, determine if s can be segmented into a space-separated sequence of one or #more dictionary words.\n#The same word in the dictionary may be reused multiple times in the segmentation.\n#You may assume the dictionary does not contain duplicate words.\ndef word_break(s, word_dict)\n hash_dict = word_dict.map{|m| [m, 0]}.to_h\n s_length = s.length\n solutions = Array.new(s_length+1, false)\n solutions[0]=true\n for i in 1..s_length\n for j in 0...i\n if solutions[j] && hash_dict[s[j...i]]!=nil\n solutions[i]=true\n break\n end\n end\n end\n solutions.last\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Longest Increasing Subsequence', E'#find the longest increasing subsequence\n#example, input:[10,9,2,5,3,7,101,18], output: 4 (because 2,3,7,101)\ndef length_of_lis(nums)\n return 0 if nums[0].nil?\n solutions = Array.new(nums.length, 1)\n for i in 1...nums.length\n for j in 0...i\n solutions[i] = [solutions[i], 1 + solutions[j]].max if nums[j]<nums[i]\n end\n end\n solutions.max\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Sliding Window Maximum', E'#for every k size window, select the biggest element\n#first window goes to 0 till k-1, second from 1 till k, third from 2 till k+1...\ndef max_sliding_window(nums, k)\n deque = []\n sol = []\n (0...nums.length).each do |i|\n (0...deque.length).each do |j|\n if nums[i]< deque.last[0]\n deque.push([nums[i], i])\n break\n else\n deque.delete_at(deque.length-1)\n end \n end\n deque.push([nums[i], i]) if deque[0].nil?\n deque.delete_at(0) if deque[0][1]<=i-k\n sol.push(deque[0][0]) if i>=k-1\n end\n sol\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('climb_stairs', E'#You are climbing a staircase. It takes n steps to reach the top.\n#Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?\ndef climb_stairs(n)\n sols = [1,1]\n (1..n-1).each do |i|\n sols.push(sols[i]+sols[i-1]) \n end\n sols.last\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('canJump', E'//you are initially positioned at the first index of the array.\n//Each element in the array is the maximum jump length at that position.\n//Determine if you are able to reach the last index.\nvar canJump = function(nums) {\n let sols = Array(nums.length).fill(false);\n sols[0] = true;\n for(let i=1; i<nums.length; i++){\n for(let j=0; j<i; j++){\n if(sols[j]==true && nums[j]>=i-j){\n sols[i]=true;\n break;\n } \n }\n }\n return sols[sols.length-1];\n};', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Longest Consecutive Sequence', E'//Given an unsorted array of integers nums\n//return the length of the longest consecutive elements sequence.\nvar longestConsecutive = function(nums) {\n if(nums[0]==undefined) return 0;\n let max = Math.max(...nums);\n let min = Math.min(...nums);\n let sorted = Array(max-min).fill(0);\n nums.forEach((n)=> sorted[n-min]=1);\n let most=0;\n let temp=0;\n for(let i=0; i<sorted.length; i++){\n if(sorted[i]==1){\n temp++;\n if(temp>most) most=temp;\n }else{\n temp=0;\n }\n }\n return most;\n};', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Median of Two Sorted Arrays', E'//Given two sorted arrays A and B\n//return the median of the two sorted arrays.\nvar findMedianSortedArrays = function(A, B) {\n if(A.length>B.length){\n let temp = [...A];\n A = [...B];\n B = temp;\n }\n let half = Math.ceil((A.length + B.length)/2);\n let iMin= 0;\n let iMax = A.length;\n while(true){\n let i = Math.floor((iMin+iMax)/2);\n let j = half - i;\n if (i < iMax && B[j-1] > A[i]){\n iMin = i + 1; // i is too small\n }\n else if (i > iMin && A[i-1] > B[j]) {\n iMax = i - 1; // i is too big\n }\n else{\n let maxLeft = 0;\n if (i == 0) maxLeft = B[j-1]; \n else if (j == 0) maxLeft = A[i-1]; \n else maxLeft = Math.max(...[A[i-1], B[j-1]]);\n if ( (A.length + B.length) % 2 == 1 ) return maxLeft; \n \n let minRight = 0;\n if (i == A.length) minRight = B[j];\n else if (j == B.length) minRight = A[i];\n else minRight = Math.min(B[j], A[i]);\n\n return (maxLeft + minRight) / 2;\n }\n }\n}', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('subsets', E'//create all the subsets of a specific set\nvar subsets = function(nums) {\n if(nums[0]==undefined) return [];\n let new_items=[];\n let sols = [[],[nums[0]]];\n for(let i=1; i<nums.length; i++){\n for(let j=0; j<sols.length; j++){\n new_items.push([nums[i]].concat(sols[j]));\n }\n sols = sols.concat(new_items);\n new_items=[];\n }\n return sols;\n};', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Design Add and Search Words Data Structure', E'//Design a data structure that supports adding new words and finding if a //string matches any previously added string.\n//WordDictionary() Initializes the object.\nvar WordDictionary = function() {\n this.words= new Object();\n};\n//void addWord(word) Adds word to the data structure\nWordDictionary.prototype.addWord = function(word) {\n let len = word.length;\n if(this.words[len]==undefined) this.words[len]=[word];\n else this.words[len].push(word);\n};\n//bool search(word) Returns true if there is any string in the data structure //that matches word or false otherwise. word may contain dots ''.'' where //dots can be matched with any letter.\nWordDictionary.prototype.search = function(word) {\n let new_word = word.split(''.'').join(''([a-z]){1}'');\n let re = new RegExp(''^(''+new_word+''){1}$'');\n let sol = false;\n if(this.words[word.length]==undefined) return false;\n for(let i = 0; i<this.words[word.length].length;i++){\n if(re.test(this.words[word.length][i])){\n return true;\n }\n }\n return false;\n};', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Container With Most Water', E'//Given n non-negative integers a1, a2 ... an, where each represents a point at coordinate (i, ai). Find two lines, which, together with the x-axis forms a container, such that the container contains the most water.\nvar maxArea = function(height) {\n let max=0;\n for(let i=1; i<height.length; i++){\n for(let j=0; j<i; j++){\n if((i-j)*Math.min(height[i], height[j])>max) \n max =(i-j)*Math.min(height[i], height[j]);\n }\n }\n return max;\n};', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Largest Rectangle in Histogram', E'//Given n non-negative integers representing the histogram''s bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.\nvar largestRectangleArea = function(heights) {\n if(heights[0]==undefined) return 0;\n let uniques = [...new Set(heights)];\n let max=0;\n let sol=0;\n for(let i=0; i<uniques.length; i++){\n let temp=0;\n for(let j=0; j<heights.length; j++){\n if(heights[j]>=uniques[i]) temp+=uniques[i];\n else temp=0;\n if(temp>max) max=temp;\n }\n }\nreturn max;\n};', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Maximum Subarray', E'//Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.\nvar maxSubArray = function(nums) {\n let prev =0;\n let current =0;\n let max=Number.NEGATIVE_INFINITY;\n for(let i=0; i<nums.length; i++){\n prev = current;\n current= nums[i];\n if(prev>0) current+=prev;\n if(current>max) max=current;\n }\n return max;\n};', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Next Permutation', E'//Implement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.\n//If such an arrangement is not possible, it must rearrange it as the lowest possible order.\n//The replacement must be in place and use only constant extra memory.\nvar nextPermutation = function(nums) {\n for(let i=nums.length-2; i>=0; i--){\n let pos2= [Infinity,0];\n for(let j=i+1; j<nums.length; j++){\n if(nums[j]<pos2[0] && nums[j]>nums[i]) pos2 = [nums[j], j];\n }\n if(pos2[0]!=Infinity){\n let temp= nums[pos2[1]];\n nums[pos2[1]] = nums[i];\n nums[i] = temp;\n let update = nums.slice(i+1).sort((a,b)=> a-b);\n for(let k=i+1; k<nums.length; k++) nums[k] = update[k-i-1];\n return nums;\n }\n }\n return nums.reverse();\n};', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Palindromic Substrings', E'//Given a string, your task is to count how many palindromic substrings in this string.\n//The substrings with different start indexes or end indexes are counted as different substrings even they consist of same characters.\nvar countSubstrings = function(s) {\n s = s.split('''');\n let sols=new Object();\n s.forEach((item, index)=>sols[`${index}-${index}`]=true);\n for(let i=1; i<s.length; i++){\n for(let j=0; j<i; j++){\n if(s[j]==s[i] && (j+1==i || sols[`${j+1}-${i-1}`])) {\n sols[`${j}-${i}`]=true;\n }\n }\n }\n return Object.keys(sols).length;\n};', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Partition Equal Subset Sum', E'//Given a non-empty array nums containing only positive integers, find if the array can be partitioned into two subsets such that the sum of elements in both subsets is equal.\nvar canPartition = function(nums) {\n let totalSum = nums.reduce((total, items)=> total+items);\n if (totalSum % 2 != 0) return false;\n let subSetSum = totalSum / 2;\n let n = nums.length;\n let dp = [...Array(n+1).keys()].map((item)=>Array(subSetSum + 1).fill(false));\n dp[0][0] = true;\n for (let i = 1; i <= n; i++) {\n let curr = nums[i - 1];\n for (let j = 0; j <= subSetSum; j++) {\n dp[i][j] = dp[i - 1][j] || Boolean(dp[i - 1][j - curr]);\n }\n if(dp[i][subSetSum]) return true;\n }\n return false;\n}', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('basic arithmetic operations with parentheses', E'# receive a string with arithmetic expressions\n# only the four basic arithmetical operators (+, -, /, *), numbers and parentheses\ndef cal_sol(str)\n par1=0\n par2=0\n array = str.split('''')\n return str if array.none?(%r{[/*/+-/(/)]})\n while array.any?(''('')\n i=1\n while i<array.length\n if array[i]==''('' || array[i]=='')''\n par1=par2\n par2=i\n end\n if array[par1]==''('' && array[par2]=='')''\n array = (par1!=0 ? array[0..par1-1] : []).concat([cal_sol(array[par1+1..par2-1].join(''''))]).concat(array[par2+1..array.length])\n i=par1\n par2=par1-1\n par1=par1-1\n end\n i+=1\n end\n end\n new_string = array.join('''')\n numbers= new_string.split(%r{[/*/+-]})\n signs= new_string.split(%r{[^/*/+-]}).join('''').split('''')\n elements = []\n (numbers.length+signs.length).times do |i|\n if i%2==0\n elements.push(numbers[0])\n numbers.delete_at(0)\n else \n elements.push(signs[0])\n signs.delete_at(0)\n end\n end\n operations = [''/'',''*'',''-'',''+'']\n operations.each do |ops|\n i=1\n while i<elements.length-1\n if elements[i]==ops\n new_value= [elements[i-1].to_f, elements[i+1].to_f].inject(ops.to_sym)\n puts new_value\n elements = (i>=2 ? elements[0..i-2] : []).concat([new_value]).concat(elements[i+2..elements.length])\n i-=1\n end\n i+=1\n end\n end\n elements[0].to_s\nend\nputs cal_sol(''4+(8+(2*16))/5*2'') # =20', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('binary search', E'//find a number in a sorted list of numbers, return the index\n//if number is not there then return -1\nfunction binary_seach(array, goal){\n let left = 0;\n let right = array.length-1;\n while(left<=right){\n middle = Math.floor((left+right)/2);\n if(array[middle]<goal) left = middle+1;\n else if(array[middle]>goal) right=middle-1;\n else return middle;\n }\n return -1;\n}', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Subsets II', E'//Given an integer array nums that may contain duplicates, return all possible subsets (the power set).\nThe solution set must not contain duplicate subsets. Return the solution in any order.\n\n\nfunction subsetsWithDup(nums: number[]): number[][] {\n const nums2:number[] = nums.sort((a,b)=>a-b);\n let sols:{[key:string]:boolean}={};\n sols['''']=true;\n for(let i:number=0; i<nums2.length;i++){\n let temp:{[key:string]:boolean}=sols;\n Object.keys(sols).forEach((k)=>{\n let chain:string = (k.split('','').concat([nums[i]+''''])).join('','');\n temp[chain]=true;\n });\n sols = Object.assign({}, temp);\n temp={}\n }\n return Object.keys(sols).map((k)=> {\n let nList:string[] = k.split('','');\n return nList.map((n)=>parseInt(n)).filter(m=>!isNaN(m));\n });\n};', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('get longest sequence', E'# you received a string and most get the longest sequence, return the character and its sequence length for the longest sequence, if more than one answer has the same length then choose the first one to appear. for example:\n#aasdfdddagg here the longest sequence is\n\ns = gets.chomp \ncurrent=0\nprevious=''''\nmax=0\nletter=s.split('''')[0]\ns.split('''').each do |s0|\n if s0==previous\n current+=1\n if current>max\n max=current\n letter=s0\n end\n else\n current=0\n previous=s0\n end\nend\nputs ''''#{letter} #{max+1}''''', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('get linear equation', E'# x_1 and y_1 are coordinates of first points\n#x_2 and y_2 are coordinates of second points, give linear equation\nx_1, y_1 = gets.split('' '').collect { |x| x.to_i }\nx_2, y_2 = gets.split('' '').collect { |x| x.to_i }\nslope = (y_2-y_1)/(x_2-x_1)\nconnect = y_1-slope*x_1\nputs ''''#{slope}*x#{connect<0 ? '''':''+''}#{connect}''''', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('get sum zero', E'# having a string with a list of positive numbers, find how many ways you can change the value of some of these numbers to get a sum equals zero from them. Example: ''1 2 3'' if we use 1+2-3=0 and this is the only possibility to get 0 with these three numbers, therefore the output should be 0.\n\nx = gets.chomp\nx = x.split('' '')\nsol=[x[0].to_i, -1*x[0].to_i]\nx.each_with_index do |x0, i|\n if i>0\n nSol=[]\n (0...sol.length).each do |i|\n nSol.push(sol[i]-x0.to_i)\n sol[i] += x0.to_i\n end\n sol = sol.concat(nSol)\n end\nend\ntotal=0\nsol.each {|s0| total+=1 if s0==0}\nputs total/2', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('count stars', E'#Given an N by M matrix of dots and stars, count the number of stars in each row and in each column.\nexample input:\n3\n4\n..**\n.**.\n***.\nexample output:\nROWS:\n2\n2\n3\nCOLUMNS:\n1\n2\n3\n1\n##########################################\nn = gets.to_i\nm = gets.to_i\nnList = Array.new(n, 0)\nmList = Array.new(m, 0)\nn.times do |n0|\n s = gets.chomp\n s.split('''').each_with_index do |s0, m0|\n nList[n0]+=1 if s0==''*''\n mList[m0]+=1 if s0==''*''\n end\nend\n\nputs ''''ROWS:''''\nnList.each{|n0| puts n0} \nputs ''''COLUMNS:''''\nmList.each{|m0| puts m0} ', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('product of sums', E'Given a string of space-separated numbers, calculate the product of all the sums of the digits of each number.\ne.g. given ''3 32 12 50'', the answer would be (3)*(3+2)*(1+2)*(5+0)=3*5*3*5=225, so you would output 225\n####################################\nx = gets.chomp\ny=x.split('' '')\nn=[]\ny.each{|y0| n.push(y0.split('''').map{|m| m.to_i}.inject{|t,s| t+=s})}\nputs n.inject{|t,s|t*=s}', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('binary decimal problem', E'# if 000!000!000 then 000\n# if 101!001!011 then 513\nabc = gets.chomp\nnums = abc.split(''!'')\nsol=''''\nnums.each do |n|\nval=0\n n.split('''').reverse.each_with_index{|n0, i| val+=n0.to_i*(2**i)}\n sol+=val.to_s\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('minimum difference of product', E'# every positive integer can be expressed as a product of two positive integers.\n#given an n integer, find the two positive integers ''a'' and ''b'' for a minimum absolute value of a-b. for example, n=12 then solution will be 1 (because 4-3=1)\ninit = get.chomps\nn = init\nd=2\nsol=n\nwhile n>1\n if n%d==0\n n = n/d\n nSol = (n-(init/n)).abs\n d=2\n sol = nSol if nSol<sol\n else\n d+=1\n end\nend\nputs sol', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rebuild message', E'# A drone wants to send a message to a receiver In a high-interference area where data packets might be dropped.\n\n#In order to ensure the message is received properly, the drone sends pieces of a message multiple times.\n\n# Given a list of n received message fragments, piece together the original message.\n\n# Some message fragments might still not be received, even though they were sent multiple times.\n# In this case, the full message cannot be reconstructed and the output should be ''CORRUPT'' instead.\n# Input\n# Line 1: An integer n indicating the number of message fragments received.\n\n# Next n lines: The fragmentOrder and fragmentContents, separated by a space.\n# Output\n# The original message pieced together or ''CORRUPT'' if some fragments are missing.\n# Constraints\n# 1 â¤ n â¤ 100\n# 5\n# 1 cannot\n# 2 land\n# 1 cannot\n# 2 land\n# 2 land\n# 4\n# 1 hello\n# 3 world\n# 1 hello\n# 3 world\n\nn = gets.chomp.to_i\nsol= Hash.new\nn.times do\n f = gets.chomp\n ar=f.split('' '')\n sol[ar[0].to_i]=ar[1]\nend\nm = sol.keys.length\nputs sol.keys.max\nif m!= sol.keys.max\n puts ''CORRUPT''\nelse\n total=[]\n (1..m).each{|m0| total.push(sol[m0])}\n puts total.join('' '')\nend\n', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('split message', E'#example input: HELLO WORLD\n#example output:\n#HEL\n#ELL\n#LLO\n#LO \n#O W\n# WO\n#WOR\n#ORL\n#RLD\nn = gets.to_i\ntext = gets.chomp\nar = text.split('''')\nsol=''''\n(0..text.length-n).each do |x|\n puts ar[x..x+n-1].join('''')+''''\n''''\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('match numbers', E'#Match all the numbers from the first list of letters to all of them in the second. If a character only is in the first list, output ''NONE'' instead of where that numbers is on the second list. You can only match one character once. First output the index of where the first character of the first list is on the second list (index starts from 0). Next, do the same thing except by doing it with the second character. Then the third and all the others. The length of the lists are length\n\n Example:\n If length is 3 and the next inputs are:\n A B C\n B A C\n Then output:\n 1\n 0\n 2\n##############################\na = gets.chomp.split\nb = gets.chomp.split\na.each do |c|\n r = b.index(c)\n if r\n puts r\n b[r] = nil\n else\n puts ''NONE''\n end\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rotate image', E'# You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).\n\nYou have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.\n\nInput: matrix = [[1,2,3],[4,5,6],[7,8,9]]\nOutput: [[7,4,1],[8,5,2],[9,6,3]]\n\n############################################\n\ndef rotate(matrix)\n new_matrix = matrix.map(&:clone)\n i = matrix.length-1\n while i>=0\n for j in 0...matrix.length\n matrix[j][matrix.length-1-i] = new_matrix[i][j]\n end\n i-=1\n end\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Decode Ways', E'A message containing letters from A-Z can be encoded into numbers using the following mapping:\nA->1\nB->2\n...\nZ->26\nfind the different ways to decode a message, if impossible to decode in a valid way then return 0.\nExample 1:\ninput: 12\noutput: 2 \nExample 2:\ninput : 01\noutput: 0\n##############################################\ndef num_decodings(s)\n return 0 if s=~ /[3-9]0/ || s=~ /(0){2,}/ || s=~ /^(0)/ || s==''''\n @sols = [1,1]\n @arr = s.split('''')\n for i in 1...@arr.length\n if @arr[i]==''0''\n @sols.push(@sols[-2])\n elsif @arr[i-1]!=''0'' && (@arr[i-1]+@arr[i]).to_i<=26\n @sols.push(@sols[-2]+@sols[-1])\n else\n @sols.push(@sols[-1])\n end\n end\n @sols[-1]\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('repeat pattern 1', E'#if n=1\n# . .\n# |_ _|\n# |\n#if n=2\n# . . . .\n# |_ _| |_ _|\n# |__ __|\n# |\n#if n=3\n# . . . . . . . .\n# |_ _| |_ _| |_ _| |_ _|\n# |__ __| |__ __| \n# |_____ _____| \n# |\n#if n=4\n# . . . . . . . . . . . . . . . .\n# |_ _| |_ _| |_ _| |_ _| |_ _| |_ _| |_ _| |_ _|\n# |__ __| |__ __| |__ __| |__ __|\n# |_____ _____| |_____ _____|\n# |___________ ___________|\n# |\nn=gets.to_i\nsol=''''\n(0...n).each do |n0|\n m=n0-1\n spaces1 = n0==0 ? 1: (0..m).sum+2*(2**m)\n spaces2 = n0==0 ? 0: (0..m).sum+2*(2**m)\n sol+=Array.new(2**(n-n0-1),''.''+('' ''*3)+''.'').join('' '').rstrip+''''\n'''' if n0==0\n sol+=Array.new(2**(n-n0-1),('' ''*spaces2)+''|''+(''_''*spaces1)+('' '')+(''_''*spaces1)+''|''+('' ''*spaces2)).join('' '').rstrip+''''\n''''\n sol+=('' ''*(spaces1+spaces2+1))+''|'' if n0+1==n\nend\nputs sol', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('smallest positive integer', E'#Write a function that, given an array A of N integers, returns the smallest positive integer (greater than 0) that does not occur in A.\n\nFor example, given A = [1, 3, 6, 4, 1, 2], the function should return 5.\n\nGiven A = [1, 2, 3], the function should return 4.\n\nGiven A = [â1, â3], the function should return 1.\n\nWrite an efficient algorithm for the following assumptions:\n\nN is an integer within the range [1..100,000];\neach element of array A is an integer within the range [â1,000,000..1,000,000].\n\ndef solution(a)\n ma = a.max\n return 1 if ma<=0\n mi = a.min\n sols= Hash.new\n (mi..ma).each do |x|\n sols[x]=true\n end\n a.each{|a0| sols.delete(a0)}\n sol1 = sols.keys.filter{|s| s>0}.min\n return sol1 if sol1!=nil\n ma+1\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('obtuse angle', E'# 6 inputs, x1,y1,x2,y2,x3,y3 coordinates of a triangle\n# return true if the triangle has an obtuse angle (>90Â°), otherwise false\n#####################\narr=[]\n6.times do\n arr.push(gets.to_f)\nend\nd1 = ((((arr[0]-arr[2]).abs)**2)+(((arr[1]-arr[3]).abs)**2))**0.5\nd2 = ((((arr[0]-arr[4]).abs)**2)+(((arr[1]-arr[5]).abs)**2))**0.5\nd3 = ((((arr[2]-arr[4]).abs)**2)+(((arr[3]-arr[5]).abs)**2))**0.5\nar = [d1,d2,d3].sort\nif (ar[0]**2+ar[1]**2)**0.5<ar[2]\n puts true\nelse\n puts false\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Narcissistic Number', E'# A natural number is said to be a Narcissistic Number if the sum of its digits each raised to the power of the total number of digits is equal to that number.\n# eg. 153 = 1^3 + 5^3 + 3^3 = 153\n# Hence , 153 is a Narcissistic Number.\n\nnum = gets.chomp.split('''')\nlen = num.length\nsol = num.inject(0){|t,n| t+=(n.to_i**len)}\nputs sol==num.join('''').to_i', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('text-based loading bar', E'# You have been assigned the trivial task of creating a text-based loading bar. The loading bar for some reason must be completely customizable, accepting arguments for its length L, progress PROG, the ''full'' symbol A, and the ''empty'' symbol B to represent its progress.\n\n# Example\n# If\n# A = ''[]''\n# B = ''<>''\n# L = 10\n# PROG = .5\n\n# Then the output should be\n# [][][][][]<><><><><>\n\n# The loading bar should be rounded upwards if necessary. For example,\n# .25 progress with 10 characters should have 3 A symbols followed by 7 B symbols. E.g. XXXOOOOOOO\n\na = gets.chomp\nb = gets.chomp\nl = gets.to_i\nprog = gets.to_f\nfirst_part = (1.0*prog*l).ceil\nsecond_part= l-first_part\nputs a*first_part+b*second_part', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('if 4 6 8 10 then 5 9', E'# if 5 7 9 then 6 4.5\n# if 1 then 0.5\n# if 8 1 7 9 10 then 4.5 8 5\n\nn = gets.to_i\ninputs = gets.split('' '')\ninputs.push(0) if inputs.length%2==1\nsol=[]\nfor i in 0...inputs.length\n num = (inputs[i].to_i+inputs[i-1].to_i)/2.0\n num = num.to_i if num==num.to_i\n sol.push(num) if i%2==1\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('5 cards game', E'# In the game of cribbage you have 5 cards with rank numbers between 1 and 13. Here you must output the number of pairs of equal ranked cards.\n# Input\n# 5 lines containing the rank numbers of CARDs you hold.\n# Output\n# Line 1: The number of pairs of equal ranked cards.\n# Example input:\n# 1\n# 1\n# 5\n# 5\n# 7\n# example output:\n# 2\n# example input:\n# 1\n# 5\n# 5\n# 5\n# 9\n# example output:\n# 3\n\nsol=Hash.new\n5.times do\n card = gets.to_i\n if sol[card].nil?\n sol[card]=1\n else\n sol[card]+=1\n end\nend\ns=sol.values.inject(0) {|t,x| x>1 ? t+=(1..x-1).inject(:+) : t=t}\nputs s', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('minutes reading books', E'# The Globglogabgalab loves books. He also prefers that all his books be sorted alphabetically by title. Unfortunately, some vandals broke into his basement last night and jumbled all his books! Now he needs to sort them again.\n\n# The Globglogabgalab sorts his books using the bubble sort method: He goes through the books on the bookshelf, from left to right, and compares each book with the book to the right. If the two books are in the wrong order, he swaps them. He repeats this process until all the books are in order.\n\n# But the Globglogabgalab loves books so much, that each time he swaps 2 books, he gets sidetracked and reads both of the books before swapping them.\n# You need to figure out how long it will take the Globglogabgalab to sort a given bookshelf.\n# Input\n# Line 1: An integer N for the number of books on the bookshelf.\n# Next N lines: Each represent a book on the bookshelf, in order from left to right, in the format book title (string),minutes taken to read the book (integer).\n# Output\n# The time (in minutes) that it will take for the Globglogabgalab to sort the bookshelf.\n\nn=gets.to_i\nb=[]\nn.times{b.push(gets.chomp.split('',''))}\ni=0\ns=0\nwhile i<b.length\n j=1\n while j<b.length-i\n if b[j][0]<b[j-1][0]\n t=b[j].clone\n b[j]=b[j-1].clone\n b[j-1]=t.clone\n s+=b[j][1].to_i+b[j-1][1].to_i\n end\n j+=1\n end\n i+=1\nend\np s', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('catch the train', E'# Input\n# Line 0: T string, The time HH:MM:SS the train leaves.\n# Line 1: P string, The time HH:MM:SS period you need to get to the station.\n# Line 2: A string, The time HH:MM:SS to which your alarm clock is set.\n# Line 3: S int, The count of snoozes you''ve performed.\n# Line 4: M int, The snooze minutes of your alarm clock.\n# Output\n# Yes if you''ll catch the train, No otherwise\nt = gets.chomp\np = gets.chomp\na = gets.chomp\ns = gets.to_i\nm = gets.to_i\nmulti = [3600,60,1]\nt_total=0\nt.split('':'').each_with_index{|t0,i| t_total+= t0.to_i*multi[i]}\np_total=0\np.split('':'').each_with_index{|p0,i| p_total+= p0.to_i*multi[i]}\na_total=0\na.split('':'').each_with_index{|a0,i| a_total+= a0.to_i*multi[i]}\nextra=(s-1)*m*60\nsol = t_total>=(a_total+p_total+extra)\nputs sol ? ''Yes'' : ''No''', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('count steps', E'#if 28 the 14\n#if 14 then 7\n#if 7 then 3\n#if 3 then 1\n#using this logic find how many steps to convert a number til 0\n#the input is a string that represents a binary number\n#sometimes the params has some zeros at the beginning, for example: ''011100''\n \ndef solution(s)\n sArr = s.split('''')\n first = sArr.index(''1'')\n subArr = sArr[first...s.length].map{|s|s.to_i}\n subArr.sum+subArr.length-1\nend', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='algorithms' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('check type of triangle', E'The next algorithm checks the type of triangle (or if the three sides are not a triangle):\nselect\n(case \nWHEN A>=(B+C) OR B>=(A+C) OR C>=(B+A)\nTHEN ''Not A Triangle''\nwhen A=B AND B=C\nTHEN ''Equilateral''\nWHEN A=B OR A=C OR B=C\nTHEN ''Isosceles''\nELSE ''Scalene''\nend)\nfrom triangles;', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql queries' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Binary Tree Nodes', E'/*Having a table with two columns: N and P (where N is node value and P is parent value), return a query that returns two columns, the first with N and the second showing whether this node is root, inner, or leaf. Return output sorted by N*/\nselect b.N, \n(case\nwhen P is null\nthen ''Root''\nwhen exists(select * from BST where p=b.N)\nthen ''Inner''\nelse ''Leaf''\nend) as q\nfrom BST as b\norder by b.N', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql queries' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('company hierarchy', E'/* Having the next tables (mutually related) and its columns:\ncompany: int company_code, string founder\nlead_manager: int lead_manager_code, int company_code\nsenior_manager: int senior_manager_code, int lead_manager_code\nmanager: manager_code, int senior_manager_code\nemployee: int employee_code, int manager_code\nshow for each row a company code, its founder and its total of lead managers, total of senior manager, total of managers and total of employees. Order by company code*/\nselect c.company_code, c.founder, count(distinct lm.lead_manager_code), count(distinct sm.senior_manager_code), count(distinct m.manager_code), count(distinct e.employee_code) from company as c\ninner join lead_manager as lm\non c.company_code=lm.company_code\ninner join senior_manager as sm\non lm.lead_manager_code=sm.lead_manager_code\ninner join manager as m\non sm.senior_manager_code=m.senior_manager_code\ninner join employee as e\non m.manager_code=e.manager_code\ngroup by c.company_code, c.founder\norder by company_code;', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql queries' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('manhattan distance', E'/* having a table station with coordinates lat_n and long_w for every city,\nFind manhattan distance between (a,b) and (c,d) points, round solution to 4 decimal places\n- a happens to equal the minimum value in Northern Latitude (LAT_N in STATION).\n- b happens to equal the minimum value in Western Longitude (LONG_W in STATION).\n- c happens to equal the maximum value in Northern Latitude (LAT_N in STATION).\n- d happens to equal the maximum value in Western Longitude (LONG_W in STATION)\n*/\nselect cast(round(abs(max(lat_n)-min(lat_n))+abs(max(long_w)-min(long_w)),4) as decimal(18,4)) from station;', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql queries' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('euclidean distance', E'/* having a table station with coordinates lat_n and long_w for every city,\nFind euclidean distance between (a,b) and (c,d) points, round solution to 4 decimal places\n- a happens to equal the minimum value in Northern Latitude (LAT_N in STATION).\n- b happens to equal the minimum value in Western Longitude (LONG_W in STATION).\n- c happens to equal the maximum value in Northern Latitude (LAT_N in STATION).\n- d happens to equal the maximum value in Western Longitude (LONG_W in STATION)\n*/\nselect cast(round(power(power(max(lat_n)-min(lat_n),2) + power(max(long_w)-min(long_w), 2),0.5),4) as decimal(18,4)) from station;', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql queries' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('find median', E'/*having the table STATION with column LAT_N which is a double, return the median value of LAT_N*/\ndeclare @total int;\nset @total = (select count(*) from station);\nwith sorted_lat as (select lat_n, ROW_NUMBER() OVER(ORDER BY lat_n) as n from station)\nselect top 1\ncase\nwhen @total%2=0\nthen \ncast(round(((select top 1 lat_n*1.0 from sorted_lat where n=@total/2)+(select top 1 lat_n*1.0 from sorted_lat where n-1=@total/2))/2,4) as decimal(18,4))\nelse\ncast(round((select top 1 lat_n from sorted_lat where n-1=@total/2),4) as decimal(18,4))\n end\n from sorted_lat;', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql queries' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Average Population of Each Continent', E'/*Given the CITY and COUNTRY tables, query the names of all the continents (COUNTRY.Continent) and their respective average city populations (CITY.Population) rounded down to the nearest integer.\nNote: CITY.CountryCode and COUNTRY.Code are matching key columns.*/\nselect co.continent, avg(ci.population)\nfrom city as ci\ninner join country as co\non ci.countrycode=co.code\ngroup by co.continent;', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql queries' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('the report', E'/*\nhaving the next tables (with its columns)\nstudents: id, name, marks\ngrades: grade, min_mark, max_mark\nand grades has the next rows:\n1,0,9\n2,10,19\n3,20,29\n4,30,39\n5,40,49\n6,50,59\n7,60,69\n8,70,79\n9,80,89\n10,90,100\nKetty gives Eve a task to generate a report containing three columns: Name, Grade and Mark. Ketty doesn''t want the NAMES of those students who received a grade lower than 8. The report must be in descending order by grade -- i.e. higher grades are entered first. If there is more than one student with the same grade (8-10) assigned to them, order those particular students by their name alphabetically. Finally, if the grade is lower than 8, use ''NULL'' as their name and list them by their grades in descending order. If there is more than one student with the same grade (1-7) assigned to them, order those particular students by their marks in ascending order.\n*/\nselect name, grade, marks from\n(select name, grade, marks, val, n from\n(select\ns.name,\ng.grade,\ns.marks,\n 1 as val,\nROW_NUMBER() OVER(ORDER BY g.grade desc, s.name) as n\nfrom\nstudents as s\ninner join grades as g\non s.marks<=g.max_mark and s.marks>=g.min_mark\n where s.marks>=70) as high\nunion\nselect name, grade, marks, val, n from\n(select\n''NULL'' as name,\ng.grade,\ns.marks,\n 2 as val,\nROW_NUMBER() OVER(ORDER BY g.grade desc, s.marks) as n\nfrom\nstudents as s\ninner join grades as g\non s.marks<=g.max_mark and s.marks>=g.min_mark\n where s.marks<70) as low) as new_query\norder by val, n;', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql queries' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Top Competitors', E'/*having the next tables\nhackers: hacker_id, name\nchallenges: challenge_id, hacker_id, difficulty_level\ndifficulty: difficulty_level, score\nsubmissions: submission_id, hacker_id, challenge_id, score\nA hacker submits challenges, each challenge has a difficulty (and a creator). Return the id and name of hackers who get more than 1 full score. Order your output in descending order by the total number of challenges in which the hacker earned a full score. If more than one hacker received full scores in same number of challenges, then sort them by ascending hacker_id.*/\nselect h.hacker_id, h.name from hackers as h\ninner join submissions as s\non h.hacker_id=s.hacker_id\ninner join challenges as c\non c.challenge_id=s.challenge_id\ninner join difficulty as d\non c.difficulty_level = d.difficulty_level\nwhere d.score=s.score\ngroup by h.hacker_id, h.name\nhaving count(*)>1\norder by count(*) desc, h.hacker_id;', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql queries' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Ollivander''s Inventory', E'/*having the next tables:\nwands: id, code, coins_needed, power\nwands_property: code, age, is_evil\nselect each unique pair of age power and the minimum coins needed for that pair, only non-evil wanders (is_evil=0). Write a query to print the id, age, coins_needed, and power of the wands, sorted in order of descending power. If more than one wand has the same power, sort the result in order of descending age. \n*/\nwith b as \n(select wp.age, w.power, min(coins_needed) as cn\nfrom wands as w\ninner join wands_property as wp\non w.code = wp.code\nwhere wp.is_evil=0\ngroup by wp.age, w.power),\nt as (select w.id, wp.age, w.power, w.coins_needed\nfrom wands as w\ninner join wands_property as wp\non w.code = wp.code)\nselect t.id, t.age, t.coins_needed, t.power\nfrom b\ninner join t\non b.age=t.age and b.power=t.power and b.cn=t.coins_needed\norder by t.power desc, t.age desc;', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql queries' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Contest Leaderboard', E'/*\nhaving the next tables\nhackers: hacker_id, name\nsubmissions: submission_id, hacker_id, challenge_id, score\nprint the hacker_id, name and total score of each hacker. The total score is the sum of the max score obtained by each hacker in each challenge. Exclude when total score equals 0. Order by descending total_score. If more than one hacker achieved the same total score, then sort the result by ascending hacker_id. \n*/\nwith m as (select s.hacker_id, h.name, s.challenge_id, max(s.score) as best\nfrom hackers as h\ninner join submissions as s\non h.hacker_id=s.hacker_id \ngroup by s.hacker_id, h.name, s.challenge_id\nhaving max(s.score)>0)\nselect hacker_id, name, sum(best)\nfrom m\ngroup by hacker_id, name\norder by sum(best) desc, hacker_id;', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql queries' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('SQL Project Planning', E'/*\nYou are given a table, Projects, containing three columns: Task_ID, Start_Date and End_Date. It is guaranteed that the difference between the End_Date and the Start_Date is equal to 1 day for each row in the table.\nIf the End_Date of the tasks are consecutive, then they are part of the same project. Samantha is interested in finding the total number of different projects completed.\nWrite a query to output the start and end dates of projects listed by the number of days it took to complete the project in ascending order. If there is more than one project that have the same number of completion days, then order by the start date of the project.\n*/\nwith sp as (select p0.start_date,\nROW_NUMBER() OVER(ORDER BY start_date) as n\nfrom projects as p0 \nwhere not exists(select * from projects as p1 where p1.end_date=p0.start_date)),\nep as (select p0.end_date,\nROW_NUMBER() OVER(ORDER BY end_date) as n\nfrom projects as p0 \nwhere not exists(select * from projects as p1 where p1.start_date=p0.end_date))\nselect sp.start_date, ep.end_date\nfrom sp\ninner join ep\non sp.n=ep.n\norder by DATEDIFF(day, sp.start_date, ep.end_date), sp.start_date;', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql queries' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Placements', E'/*You are given three tables: Students, Friends and Packages. Students contains two columns: ID and Name. Friends contains two columns: ID and Friend_ID (ID of the ONLY best friend). Packages contains two columns: ID and Salary (offered salary in $ thousands per month).\nWrite a query to output the names of those students whose best friends got offered a higher salary than them. Names must be ordered by the salary amount offered to the best friends. It is guaranteed that no two students got same salary offer.*/\nselect s0.name from\nfriends as f\ninner join students as s0\non f.id=s0.id\ninner join students as s1\non f.friend_id=s1.id\ninner join packages as p0\non s0.id=p0.id\ninner join packages as p1\non s1.id=p1.id\nwhere p0.salary<p1.salary\norder by p1.salary;', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql queries' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Symmetric Pairs', E'/*You are given a table, Functions, containing two columns: X and Y.\nTwo pairs (X1, Y1) and (X2, Y2) are said to be symmetric pairs if X1 = Y2 and X2 = Y1.\nWrite a query to output all such symmetric pairs in ascending order by the value of X. List the rows such that X1 â¤ Y1.*/\nwith point as \n(select x, y, ROW_NUMBER() over(order by x) as id from functions),\nsolution as\n(select (SELECT MIN(v) FROM (VALUES (p1.x),(p1.y)) as val(v)) as x1,\n(SELECT MAX(v) FROM (VALUES (p1.x),(p1.y)) as val(v)) as y1\nfrom point as p1\ninner join point as p2\non p1.x=p2.y and p1.y=p2.x and p1.id<p2.id)\nselect x1, y1 from solution\norder by x1;', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql queries' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Draw The Triangle 1', E'/*\nP(R) represents a pattern drawn by Julia in R rows. The following pattern represents P(5):\n* * * * * \n* * * * \n* * * \n* * \n*\nWrite a query to print the pattern P(20).\n*/\ndeclare @number int;\nset @number = 20;\ndeclare @ast varchar(250);\nset @ast = '''';\nWHILE @number > 0\nBEGIN\n/*minus 1 cause by default any varchar remove blank spaces at the end*/\n while len(@ast)<@number*2-1\n begin\n set @ast= concat(@ast, ''* '');\n end;\n select @ast;\n set @ast = '''';\n SET @number = @number - 1;\nEND;', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql queries' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Draw the triangle 2', E'/*\nP(R) represents a pattern drawn by Julia in R rows. The following pattern represents P(5):\n* \n* * \n* * * \n* * * * \n* * * * *\nWrite a query to print the pattern P(20).\n*/\ndeclare @number int;\nset @number=1;\ndeclare @ast varchar(250);\nset @ast='''';\nwhile @number<=20\nbegin\n set @ast = concat(@ast, ''* '');\n select @ast;\n set @number = @number +1; \nend;', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql queries' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('print prime numbers', E'/*Write a query to print all prime numbers less than or equal to 1000. Print your result on a single line, and use the ampersand () character as your separator (instead of a space).\nFor example, the output for all prime numbers would be:*/\nDECLARE @primes TABLE (num INT);\nDECLARE @noprimes TABLE (num INT);\ndeclare @candidate int;\ndeclare @multi int;\nDeclare @val Varchar(8000);\nset @candidate = 2;\nwhile @candidate<=1000\nbegin\n if not exists(select num from @noprimes where num=@candidate)\n begin\n insert into @primes select @candidate;\n set @multi = @candidate*2;\n while @multi<=1000\n begin\n insert into @noprimes select @multi;\n set @multi = @multi + @candidate;\n end\n end\n set @candidate = @candidate +1;\nend;\nselect @val = coalesce(@val+''&''+cast(num as varchar(3)), concat('''',num)) from @primes;\nselect @val;', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql queries' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Interviews', E'/*Samantha interviews many candidates from different colleges using coding challenges and contests. Write a query to print the contest_id, hacker_id, name, and the sums of total_submissions, total_accepted_submissions, total_views, and total_unique_views for each contest sorted by contest_id. Exclude the contest from the result if all four sums are 0.\ncontests: contest_id, hacker_id, name\ncolleges: college_id, contest_id\nchallenges: challenge_id, college_id\nview_stats: challenge_id, total_views, total_unique_views\nsubmission_stats: challenge_id, total_submissions, total_accepted_submissions\nnote: each challenge has many view_stats, each challenge has many submission_stats\n*/\nwith q1 as (select con.contest_id, con.hacker_id, con.name, sum(vie.total_views) as tv, sum(vie.total_unique_views) as uv\nfrom contests as con\ninner join colleges as col\non con.contest_id = col.contest_id\ninner join challenges as cha\non col.college_id=cha.college_id\ninner join view_stats as vie\non cha.challenge_id = vie.challenge_id\ngroup by con.contest_id, con.hacker_id, con.name),\nq2 as (select con.contest_id, con.hacker_id, con.name, sum(sub.total_submissions) as ts, sum(sub.total_accepted_submissions) as tas\nfrom contests as con\ninner join colleges as col\non con.contest_id = col.contest_id\ninner join challenges as cha\non col.college_id=cha.college_id\ninner join submission_stats as sub\non cha.challenge_id = sub.challenge_id\ngroup by con.contest_id, con.hacker_id, con.name)\nselect q1.contest_id, q1.hacker_id, q1.name, q2.ts, q2.tas, q1.tv, q1.uv\nfrom q1\ninner join q2\non q1.contest_id=q2.contest_id\norder by q1.contest_id;', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql queries' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('15 Days of Learning SQL', E'/*Julia conducted a days of learning SQL contest. The start date of the contest was March 01, 2016 and the end date was March 15, 2016.\nWrite a query to print total number of unique hackers who made at least submission each day (submissions each day until first day of the contest, until second day, etc), and find the hacker_id and name of the hacker who made maximum number of submissions each day. If more than one such hacker has a maximum number of submissions, print the lowest hacker_id. The query should print this information for each day of the contest, sorted by the date.*/\nDECLARE @dates TABLE (day date);\ndeclare @days date\nset @days = ''2016-03-01'';\nwhile @days<=''2016-03-15''\nbegin\n insert into @dates select @days;\n set @days = DATEADD(day, 1, @days);\nend;\nwith q1 as (select d.day, \n(select count(distinct s1.hacker_id)\n from submissions as s1\n where (select count(distinct s2.submission_date) from submissions as s2 where s1.hacker_id=s2.hacker_id and s2.submission_date<=d.day)=datediff(day, ''2016-03-01'', d.day)+1\n) as total\nfrom @dates as d\norder by d.day OFFSET 0 ROWS),\nq2 as (select submission_date, total, hacker_id, name\nfrom (select submission_date, total, hacker_id, name,\n ROW_NUMBER() OVER(partition by q1.submission_date ORDER BY total desc, q1.hacker_id) as sort\nfrom (select s1.submission_date, \n s1.hacker_id,\n count(s1.hacker_id) as total,\n h1.name\n from submissions as s1\n inner join hackers as h1\n on s1.hacker_id=h1.hacker_id\n group by s1.submission_date, s1.hacker_id, h1.name) as q1) as q2\n where sort=1)\nselect q1.day, q1.total, q2.hacker_id, q2.name\nfrom q1\ninner join q2\non q1.day=q2.submission_date', NOW(), NOW(), (select id from users where email='oscarrussi@outlook.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='sql queries' and u0.email='oscarrussi@outlook.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bring out', E'get or achieve the best of someone, example: a friend is someone who brings out the best of you', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('run into', E'it means ''find with''. example: good friends are happy to help when you run into a problem.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cheer <someone> up', E'Make you feel better, encourage you. Example: a friend is someone who cheers you up when you''re feeling bad.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('drift apart', E'It means to get away. For example: true friends don''t drift apart even after many years of separation.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('open up', E'to start to talk more about yourself and your feelings. Example: never be afraid to open up and ask a friend for advice, a true friend will never turn you down.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('stand up for', E'speak or act in support of someone. Example: a real friend will always stand up for you when others are putting you down.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('do without', E'To succeed without the help of someone or something. Example: Good friends are hard to come by, harder to leave, and impossible to do without.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('turn <someone/something> down', E'to refuse an offer or request. Example: a true friend will never turn you down', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hang on', E'Keep a relationship with someone, wait for someone, holds something. Example: Make new friends, but hang on to the old ones.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('come by', E'Get someone or something. Example: good friends are hard to come by, harder to leave, and impossible to do without.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('put <someone> down', E'Make someone feel foolish or unimportant. Example: a true friend will always stand up for your when others are putting you down.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mingle', E'mix, blend, combine, merge', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('admire', E'to respect and approve someone', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('clash', E'to fight or argue', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('empathize', E'to be able to understand how someone feels', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('endure', E'To remain despite the suffering of something unpleasant, difficult, or painful.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('harmonize', E'to be suitable together, or to make different people, plans, situations, etc. suitable for each other.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('admirable', E'Deserve respect or approval', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('clashing', E'to describe to persons or things like incompatible or in conflict with each other', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('empathetic', E'having the ability to imagine how someone else feels', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('enduring', E'describes someone with the ability to remain despite the suffering.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('harmonious', E'describe when different elements look, taste or work well together', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('call <something> off', E'to decide that a planned event, especially a sports event, will not happen, or to end an activity because it is no longer useful or possible', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('count <someone> out', E'not include someone in an activity or arrangement', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cut <someone/something> off', E'1. to stop or interrupt something suddenly, or to stop someone from speaking\n2. to move suddenly in front of another driver or vehicle, leaving too little space', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('get <something> across / get across <something>', E'to communicate an idea or message successfully', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hand over <something>', E'To give something to someone, especially after being asked or told to do this', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pass up <something>', E'to fail to take advantage of an opportunity', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('take <something> back', E'1.to return something you have bought to a store\n2. If you take back something you have said, you admit that it was wrong', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('take back <something>', E'to receive or accept something that you previously sold, offered, or gave away.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('go over', E'To be received (usually in a particular way: go over well, go over ok, etc).', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hang around', E'to move or do things slowly', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hang around <somewhere>', E'to wait or spend time somewhere, usually for no particular reason', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hang around with <someone>', E'to spend time with someone', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('live up to <something>', E'to achieve what is expected, especially with high standards (example: her performance lived up to our expectations)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('look after <something/someone>', E'to take care of or be in charge of something or someone', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pick on (someone)', E'to criticize, annoy, or punish someone repeatedly and unfairly', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('run out of <something>', E'1. to use or sell all of something that was available.\n2. To flee, exit, or depart from someplace while running or driving', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('run <someone/something> out', E'To cause someone or something to leave something or some place', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('touch on <something>', E'to speak briefly about something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('catch on', E'1. to become fashionable or popular\n2. to understand, especially after a long time', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('come along', E'1. to arrive or appear at a place\n2. to go somewhere with someone\n3. to start to exist\n4. develop or improving', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('come over', E'to come to a place, move from one place to another, or move toward someone', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('come over as', E'behave or seem a particular type or person. Example: he came over as very nervous. He doesn''t come over as particularly trustworthy', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fall apart', E'to break into pieces', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('show up', E'1. to arrive somewhere in order to join a group of people, especially late or unexpectedly\n2. to arrive for a gathering or event', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('turn out', E'1. to have an unexpected result or to happen in an unexpected way\n2. to be known or discovered finally and surprisingly', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('back down (from)', E'to admit that you were wrong, stop supporting a position or that you have been defeated', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('catch up (to)', E'1. to reach the same quality or standard as someone or something else\n2. to do something you did not have time to do earlier\n3. to learn or discuss the latest news', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('check out (of)', E'1. to leave a hotel after paying and returning your room key\n2. prove or confirm an information ', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('check out <something>', E'to examine something or visit a place in order to learn about it', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cut back (on)', E'to spend less, do less or use less of something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cut down (on)', E'1. to do or use less of something\n2. to reduce the amount or number of something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('drop in (on)', E'to come for a visit, especially without having received an invitation for a specific time', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('drop out (of)', E'to not do something that you were going to do, or to stop doing something before you have completely finished.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('get along (with)', E'1. If two or more people get along, they like each other and are friendly to each other\n2. to deal with a situation, usually successfully', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('get away with <something>', E'1. to succeed in avoiding punishment for something\n2. to do something successfully although it is not the best way of doing it', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('get away', E'to leave or escape from a person or place when it is difficult to do this or because you need a rest', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('give in', E'usually used as: give in to <someone>\n1. to finally agree to what someone wants, after refusing for a period of time\n2. to accept that you have been defeated and agree to stop competing or fighting\n3. to decide to do what someone else wants', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('give up', E'to stop trying (before you finished, usually because it''s too difficult)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('give up on <someone/something>', E'to expect someone or something to fail', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('look back (on)', E'to think about something that happened in the past', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rebuild', E'1. to build something again that has been damaged or destroyed\n2. to try to return to a better situation than you were in before an unpleasant event happened to you', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('recall', E'1. to bring the memory of a past event into your mind, and often to give a description of what you remember.\n2. to cause you to think of a particular event, situation, or style.\n3. to order the return of a person who belongs to an organization or of products made by a company', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('reconnect', E'1. to join or be joined with something else again after becoming separated\n2. to improve a relationship that has become less good or less close\n3. to make you feel or understand something that you had stopped feeling or understanding', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('redefine', E'to change the meaning of something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rehash', E'1. to make a book, movie, piece of music, etc. that is very similar to previous ones and has no new ideas or improvements.\n2. to write, say, do, etc. something again with no new ideas or improvements.\n3. to present something old in a new way or form without any real change or improvement.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rekindle', E'To make someone have a feeling that he or she had in the past', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('replace', E'1. to take the place of something, or to put something or someone in the place of something or someone else\n2. If you replace something broken, damaged, or lost, you provide a new one', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('resurface', E'1. to rise to the surface of the water again\n2. to appear again after being lost, stolen, or absent\n3. to put a new surface on a road', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('recapture', E'to take something into your possession again, especially by force', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('reconsider', E'to think again about a decision or opinion and decide if you want to change it', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('forget <infinitive>', E'forget to do something. Example: I forget to meet maria', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('forget <gerund>', E'You did it but you forget it. Example: I forget meeting with maria (met with maria but forget it)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mean <infinitive>', E'Intent. Example: I meant to visit Shella but I didn''t have the chance (you intent ut you couldn''t)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mean <gerund>', E'involve or necessitate. Example: inviting Emily to the party means inviting Eva too. She would be insulted if we didn''t', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('regret <infinitive>', E'polite way to introduce bad news, usually in official communications. Example: The corporation regrets to inform you that all job vacancies have been filled.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('regret <gerund>', E'Be sorry for/about. Example: donna really regretted missing her best friend''s wedding.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('be + adjective + <infinitive>', E'be + adjective expressions are often followed by an infinitive. Common be + adjective expressions:\nbe amazed, be ashamed, be determined, be eager, be happy, be hesitant, be lucky, be ready.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('be + adjective + preposition + <gerund>', E'be + adjective + preposition are often followed by a gerund. Common be + adjective + preposition expressions: be bored with, be convinced of, be got at, be used to, be worried about', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('verb + proposition + <gerund >', E'verb + preposition is usually followed by a gerund. Examples of verb + preposition expressions: apologize for, complain about, object to, participate in, think of, take part in', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('appreciate <gerund>', E'Example: I appreciate having time after work', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('consider <gerund>', E'Example: she considers going to the dentist', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('enjoy <gerund>', E'Example: I enjoy watching movies', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('give up <gerund>', E'Example: He has given up trying to find a suitable property in this part of town', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('keep <gerund>', E'Example: she wanted to keep reading that book', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('outgoing', E'extrovert', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('put off <gerund>', E'Example: They put off discussing this question', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('suggest <gerund>', E'Example: Her brother suggests studying harder so she can get into a good university', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ask <infinitive>', E'Example: I ask him to buy more groceries', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('decide <infinitive>', E'Example: I decided to look for a job', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('intend <infinitive>', E'Example: he intends to do his homework tonight', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('need <infinitive>', E'Example: I need to buy a new computer', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('refuse <infinitive>', E'Example: I refuse to admit that she was right', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('seem <infinitive>', E'Example: she seems to be angry', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tend <infinitive>', E'Example: written language tends to be formal', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('begin <gerund>/<infinitive>', E'Example:\n1. Andrew began to tell me how much he hates parties\n2. Andrew began telling me how much he hates parties', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bother <gerund>/<infinitive>', E'Examples:\n1. It hardly seems worth to bother to go all that way just for two nights\n2. It hardly seems worth to bother going all that way just for two nights', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('continue <gerund>/<infinitive>', E'Examples:\n1. she continued to play all night\n2. she continues playing all night', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hate <gerund>/<infinitive>', E'Examples:\n1. I would hate to lose contact with my old school friends\n2. I would hate losing contact with my old school friends', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('prefer <gerund>/<infinitive>', E'Examples:\n1. I''d prefer not to discuss this issue\n2. I''d prefer not discussing this issue', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('start <gerund>/<infinitive>', E'Examples:\n1. They started building the house in January.\n2. They started to build the house in January.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('infinitive and gerunds in passive voice', E'depending on whether a verb should be followed by a gerund or an infinitive then the passive voice follows the next pattern: subject + verb + being / to be + past participle\nexample 1: I kept being invited by my co-workers to a lunchtime yoga class\nexample 2: She asked to be chosen for the job', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('expect <infinitive>', E'Example: I expect to finish tomorrow', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('outlook', E'- the likely future situation. \n- a person''s way of understanding and thinking about something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('upon', E'immediately above. Most of the cases it is similar to ''on'' but more formal', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('laid-back', E'relaxed in manner and character; not usually worried about other people''s behavior or things that need to be done', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('type A', E'a personality to describe workaholic people', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('type b', E'Synonym of laid-back', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('trait', E'a distinguishing quality or characteristic, typically one belonging to a person. Example: may feel a businessperson has traits that are helpful.\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('state (verb)', E'to say or write something, especially clearly and carefully', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mate', E'- friend\n- animal sexual''s partner', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level1' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('verb + object + infinitive', E'the pattern verb + object is often followed by an infinitive. Example: Celebrities sometimes inspired me to change the way I look.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('verb + object + preposition + gerund', E'The pattern verb + object + preposition is often followed by a verb in the gerund form. Example: high prices rarely prevent me from buying quality clothing.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('advice', E'an opinion that someone offers you about what you should do or how you should act in a particular situation', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('discourage', E'to make someone feel less confident, enthusiastic, and positive about something, or less willing to do something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('encourage', E'to make someone more likely to do something, or to make something more likely to happen', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('require', E'- to need something or make something necessary:\n- to order or demand something, or to order someone to do something, esp. because of a rule or law', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tend', E'to be likely to behave in a particular way or have a particular characteristic', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('allow', E'to give permission for someone to do something, or to not prevent something from happening', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('don''t mind', E'To not have objections against something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('permit', E'to allow something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('seem', E'to appear to be', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('try', E'to attempt to do something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grunge', E'a type of rock music and a fashion for messy clothes, popular in the early 1990s', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bohemian', E'- a person who is interested in artistic and unusual things, for example art, music, or literature, and lives in an informal way that ignores the usually accepted ways of behaving.\n- a person who lives in a very informal style that is different from the way most people live', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('urban', E'of or in a city or town. relating to towns and cities.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sporty', E'- A sporty person enjoys sports and is good at them\n- Sporty clothes are bright and informal, and look like the type of clothes that you could wear for sports.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('goth', E'* a type of rock music that often has words expressing ideas about death or the end of the world.\n* Someone who likes goth music and wears black clothes and white makeup.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('preppy', E'a young person from a rich family who goes to an expensive school and who wears neat, expensive clothes', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('conventional', E'- traditional and ordinary\n- following the usual practices of the past\n- relating to accepted or traditional ways of doing something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('chic', E'- stylish and fashionable\n- the quality of being stylish and fashionable', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('conservative', E'- not usually liking or trusting change, especially sudden change\n- If you are conservative in your appearance, you usually do not like fashionable or modern clothes or hairstyles.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('formal', E'- public or official\n- Formal language, clothes, and behavior are suitable for serious or official occasions', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('functional', E'- designed to be practical and useful rather than attractive\n- (of a machine, system, etc.) working in the usual way', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('quirky', E'unusual in an attractive and interesting way', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sloppy', E'1. Sloppy clothes are large, loose, and do not look neat\n2. careless and unsystematic; excessively casual', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('stylish', E'1. of high quality in appearance, design, or behavior\n2. having a special quality that makes a person or thing seem different and attractive', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('classic', E'1. having a high quality or standard against which other things are judged\n2. having all the characteristics or qualities that you expect\n3. having a simple, traditional style that is always fashionable', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('flashy', E'looking too bright, big, and expensive in a way that is intended to get attention and admiration', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('frumpy', E'(of a person or their clothes) old-fashioned and not attractive', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('elegant', E'graceful and attractive in appearance or behavior', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('funky', E'1. used to describe a style of music, usually for dancing to, with a strong rhythm based on jazz and a tune that repeats\n2. fashionable in an unusual and noticeable way\n3. having a bad smell or appearance', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('retro', E'1. similar to styles, fashions, etc. from the recent past\n2. having the appearance of something that existed in the past', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('stuffy', E'1. old-fashioned, formal, and boring\n2. A stuffy room or building is unpleasant because it has no fresh air\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('trendy', E'1. modern and influenced by the most recent fashions or ideas', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('comfortable', E'1. relaxed and free from pain\n2. If you are comfortable with a situation, you are not worried about it\n3.producing a relaxing feeling of physical comfort esp. because of shape or materials', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fashionable', E'- popular at a particular time\n- wearing clothes, doing things, and going to places that are considered stylish or acceptable', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('afford <infinitive>', E'Example: I can''t afford to leave my job', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fail <infinitive>', E'Example: your project fails to pass all the requirements', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hasten <infinitive>', E'Example: Realizing his error, he hastened to apologize.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('learn <infinitive>', E'Example: I''m learning to speak English', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('proceed <infinitive>', E'Example: he did not proceed to complete the task even though commanded to do so.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('prepare <infinitive>', E'Example: I''m prepared to take the job', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('seek <infinitive>', E'We will, therefore, seek to obtain this information from other data collections', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('strive', E'I really strive to wear the latest styles and trends.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('advise <object> <infinitive>', E'Example: he advises me to continue with my project', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('allow <object> <infinitive>', E'Example: I can''t allow my children to visit her mother', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('authorize <object> <infinitive>', E'Example: the president authorized the soccer teams to keep playing during the quarantine.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cause <object> <infinitive>', E'Example: this sickness cause people to go blind', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('convince <object> <infinitive>', E'Example: I convinced my sister to wear a longer dress', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('encourage <object> <infinitive>', E'Example: I encourage my friends to stop smoking', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('instruct <object> <infinitive>', E'Example: I instructed Andrew to call me in an hour.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('permit <object> <infinitive>', E'Example: I permitted Andrew to take a week off', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('persuade <object> <infinitive>', E'Example: I persuaded my sister to leave her last boyfriend', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('urge <object> <infinitive>', E'Example: my mother urged me to stop wearing jeans.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('can''t help <gerund>', E'Example: I can''t help biting my nails when I am nervous', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('I can''t see <gerund>', E'Example: I can''t see paying high prices for clothes that will be out of style in a year', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('can''t stand <gerund>', E'Example: I can''t stand reading people badmouth my favorite singer', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('enjoy <gerund>', E'Example: I really enjoy dressing fashionably', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('get through <gerund>', E'Example: I got through watching all the episodes in only one week.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('keep on <gerund>', E'Example: she keeps on looking for a better job opportunity', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('don''t mind <gerund>', E'Example: I don''t mind reading bad reviews about my job', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('miss <gerund>', E'Example: I miss talking with my friends', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('postpone <gerund>', E'Example: I postponed traveling to New York', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('risk <gerund>', E'Example: We donât want to risk losing our money on such a speculative business', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('blame <object> for <gerund/object>', E'Example: I blame myself for wasting time with video games', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('dissuade <object> from <gerund/object>', E'Example: My mother tried to dissuade me from leaving the house in my old, torn jeans.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('forgive <object> for <gerund/object>', E'Example: forgive me for looking inside your room', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('interest <object> in <gerund/object>', E'Example: this book interest my mother reading the news.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('keep <object> from <gerund/object>', E'Example: How do I prevent my hamster from escaping from its cage?', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('suspect <object> of <gerund/object>', E'Example: I suspect my boyfriend of cheating to me', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('thank <object> for <gerund/object>', E'Example: I thank you for helping me out', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cleft with be', E'change: <words> <be> <more_words>\nfor: what <be> <more words> <be> <words>\nEXAMPLE\nChange: A person''s smile is really important to me\nfor: What''s really important to me is a person''s smile', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cleft without be', E'change: <words> <non_be_verb> <more_words>\nfor: what <words> <non_be_verb> <be> <more_words>\nEXAMPLE\nChange:I always notice a person''s hands\nfor: What''s I always notice is a person''s hands', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('jeans', E'hard-wearing casual trousers made of denim or other cotton fabric.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('jacket', E'an outer garment extending either to the waist or the hips, typically having sleeves and a fastening down the front.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('t-shirt', E'a short-sleeved casual top, generally made of cotton, having the shape of a T when spread out flat.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('necktie', E'or tie. Is a long, thin piece of material worn that fits under a shirt collar', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('collar', E'In clothing, a collar is the part of a shirt, dress, coat or blouse that fastens around or frames the neck.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ripped jeans', E'jeans which are ripped, frayed, bleached or excessively worn', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('vintage jacket', E'old style jacket', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('uniform', E'the distinctive clothing worn by members of the same organization or body or by children attending certain schools.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('suit', E'a set of outer clothes made of the same fabric and designed to be worn together, typically consisting of a jacket and trousers or a jacket and skirt.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('natural fabrics', E'Natural fabricsâsuch as cotton, silk, wool, leather and linenâare made of animal or plant-based fibers', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('synthetic fabrics', E' are man-made and produced entirely from chemicals to create fabrics like polyester, rayon, acrylic', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('knit cap', E'Sometimes wool cap (because of the common fabric) is designed to provide warmth in cold weather', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tunic', E'is a garment for the body, usually simple in style, reaching from the shoulders to a length somewhere between the hips and the knees', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('jogging suit', E'an outfit consisting of sweat pants and a sweatshirt, used while exercising or as sportswear.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sweatpants', E'loose, warm trousers with an elasticated or drawstring waist, worn when exercising or as leisurewear', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sweatshirt', E'a loose, warm sweater, typically made of cotton, worn when exercising or as leisurewear.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sweater', E'also called a jumper in British English,[1] is a piece of clothing, typically with long sleeves, made of knitted or crocheted material that covers the upper part of the body', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('knit', E'make with knitting needles or on a machine.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('polo shirt', E'A polo shirt is a form of shirt with a collar, a placket neckline with three buttons, and an optional pocket. Polo shirts are usually short-sleeved; they were originally used by polo players during the 1920s', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('make-up', E'cosmetics such as lipstick or powder applied to the face, used to enhance or alter the appearance', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('long dress', E'Or a gown. Woman''s formal dress, usually having a floor-length skirt.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('baseball cap', E'the cap usually used for baseball players', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('baggy jeans', E'Also known as wide-leg jeans or baggy pants, are a style of clothing that were popular from the late 1990s to the mid 2000s, common between hip-hop singers.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('groveling', E'acting obsequiously in order to obtain forgiveness or favor.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('obsequious', E'obedient or attentive to an excessive or servile degree', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sneaking', E'1. persistent in one''s mind but reluctantly held or not fully recognized; nagging.\n2. furtive and contemptible', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('scarf', E'a length or square of fabric worn around the neck or head.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cleft with what and do', E'Useful to emphasize all the phrase, for example, replace: \n<pronoun_or_noun> <phrase> \nwith\nWhat <pronoun_or_noun> do/does is <phrase> \nExample, change: I try to project a positive attitude\nwith: what I do is try to project a positive attitude', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cleft with what and did', E'The same than do but for past phrases, replace: \n<pronoun_or_noun> <past_verb><remaining_phrase> \nwith\nWhat <pronoun_or_noun> did/does was/were <present_verb><remaining_phrase>\nExample, change: she complained to the waiter about the quality of the food\nwith: what she did was complain to the waiter about the quality of the food', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cleft sentence with the reason why', E'Example, change: I''m wearing sunglasses to protect my eyes\nfor: the reason why I''m wearing sunglasses is to protect my eyes', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cleft sentence with the place where', E'Example, change: I lost my watch in the park\nfor: the place where I lost my watch in was the park', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cleft sentence with the day when', E'Example change: The office dress code changed last Friday\nfor: the day when the office dress code changed was last Friday\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cleft sentence with the thing that', E'Example, change: I remember the intense expression on his face\nfor: the thing that I remember is the intense expression on his face', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cleft sentence with the person who', E'Example, change: your father bought this dress\nfor: the person who bought this dress was your father', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('give away', E'1. to tell information or facts that you should keep secret\n2. to show emotion or quality that you are trying to hide\n3. to provide someone with something that you no longer want or need\n4. if a company gives something away, they let you have it without paying for it', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('wear clothes', E'is ''wear clothes'' and not ''use clothes''', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('contemptible', E'deserving blame', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('help (somebody) out', E'If you help out, you do a part of someone''s work or give someone money. Example: Her parents helped (her) out with a $500 loan.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('garment', E'a piece of clothing', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('decorous', E'behaving politely and in a controlled way. Example: His manner, as ever, was decorous.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('dress up', E'- to put on formal clothes for a special occasion\n- to wear more formal clothes than you usually wear', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('look up to', E'to admire and respect someone', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('over-the-top', E'too extreme and not suitable, or demanding too much attention or effort, especially in an uncontrolled way', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('self-expression', E'expression of your personality, emotions, or ideas, especially through art, music, or acting', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('powdered', E'- in the form of a powder or covered with a powder\n- being in the form of a powder', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('powder', E'a loose, dry substance that consists of extremely small pieces, usually made by breaking something up and crushing it', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('wig', E'a covering of artificial hair worn on the head to hide a loss of hair or to cover your own hair', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level2' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('indefinite articles (a or an)', E'For singular countable nouns when mentioned by the first time or when you are not talking about a specific item/being.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('definite article (the)', E'- For plural or when you refer to an item/being not by first time or when you refer to an specific item/being.\n- also use it with superlatives or sequence makers such as: first, last, next, etc (except when sequence makers are part of an expression like last night, next month... in that case don''t use article).', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('audacious', E'- showing a willingness to take surprisingly bold risks\n- showing an impudent lack of respect.\n- having a willingness to take risks', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('confidential', E'- intended to be kept secret, indicating that what one says is private or secret (because it was entrusted with private or restricted information)\n- private or secret', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('frivolous', E'- not having any serious purpose or value.\n- (of a person) carefree and superficial.\n- silly and wasteful, carelessly self-indulgent', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hazardous', E'- risky, dangerous', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('problematic', E'- constituting or presenting a problem\n- full of difficulties that are hard to solve', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('prudent', E'- acting with or showing care and thought for the future.\n- avoiding unnecessary risks', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('unethical', E'- not morally correct\n- against accepted beliefs about good behavior', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('voicing', E'expressing in word. Example: people are voicing concerns about cloning.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('valves', E'Devices for controlling the passage of fluid or air through a pipe, duct, etc., especially an automatic device allowing movement in one direction only.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('gaur', E'also called indian bison', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('banteng', E'is a species of cattle found in Southeast Asia.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mules', E'A mule is the offspring of a male donkey and a female horse', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('offspring', E'- a person''s child or children\n- the product or result of something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('no article', E'- when you make a general statement of plural countable or uncountable nouns', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('uncountable in a more specific context', E'If you use an uncountable in a more specific context then add the definite article, examples:\n- the ethics of cloning should be addressed by experts in the field\n- the image she projected did not serve her well in court', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('articles in countries', E'do not use any article before a country name except for the next cases: the Philippines, the United Arab Emirates, the United Kingdom, the United States ', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('articles for streets and cities', E'Generally, never use articles before streets and cities (an exception is: the Hague)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('list of some situations for zero article', E'For a specific lake, bay, island, continent, mountain peaks (exception: the Materhorn)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('list of some situations for definite article', E'rivers, oceans, seas, gulfs, mountain ranges, peninsulas, deserts, forests', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('track down someone/something', E'to search for someone or something, often when it is difficult to find that person or thing', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('drill', E'- a tool or machine that makes holes\n- to make a deep hole in the ground with a special machine in order to look for oil, gas, etc', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('aircraft', E'any vehicle, with or without an engine, that can fly, such as a plane or helicopter', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fuel', E'a substance that is used to provide heat or power, usually by being burned. Wood, coal, oil, and gas are all different kinds of fuel', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('shut off (something)', E'to stop the operation of a machine or system', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('unplug', E'to take the plug of a piece of electrical equipment out of the place where it is connected to the electricity supply', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('disruption', E'disturbance or problems which interrupt an event, activity, or process.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('get through <something>', E'to finish something. To succeed in completing a task. Example:\nI can get through a lot more work when I''m on my own.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ing clauses for simultaneous actions', E'Use it to join two phrases when both phrases explain events that happened at the same time. example, change: my laptop crashes while I was opening the file\nfor: the next day in class my laptop crashes opening the file\nchange: she is at her desk, and she is typing paper\nfor: she is at her desk typing a paper', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('having + part participle for an action after another', E'If an action happened after another then you can use having + past participle. For example, change: my parents got several calls from me, and then they became really worried.\nfor: having gotten several calls from me, my parent became really worried.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ing clause to explain a reason of a past action', E'you can use the ing clause to explain the reason for past action. For example, change: because I was too embarrassed to call him at home, I had to go to work.\nfor: being too embarrassed to call him at home, I had to go to work after all to access the network.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('trip', E'1. a journey or excursion, especially for pleasure\n2. catch one''s foot on something and stumble or fall.\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('freeze up', E'If something freezes up, it becomes so cold that it does not work or cannot move', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('I''m a bit leery of', E'I''m a bit cautious or wary about something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('leery', E'cautious or wary due to realistic suspicions', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('you should think twice about', E'think carefully before doing something (because maybe is not a good idea)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('I''m all for', E'Completely in favor of something or someone', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('I have every confidence that', E'I''m completely sure that', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('aware of', E'well informed/alert ', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('curious about', E'interested', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sick of', E'tired of', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fed up with', E'annoyed/upset', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('familiar with', E'informed / aquainted', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('suspicious of', E'dubious, unsure, wary, skeptical about', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('intimidated by', E'frighten, terrify, scare by', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('knowledgeable about', E'well informed about', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('crazy about', E'to be very interested in something or love someone very much', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('reliant on', E'- dependent on someone or something.\n- needing a particular thing or person in order to continue, to work correctly, or to succeed', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grateful for', E'thankful/appreciative/filled with gratitude for', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('leery of', E'cautious or wary about something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('agent and subject in ing clause', E'when the ing clause begins a sentence, the agent of the ing clause must be the subject of the main clause. example:\nincorrect: trying hard to fix my computer, the dog keep staring at me\ncorrect: trying hard to fix my computer, I noticed the dog staring at me', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('common expressions followed by ing clauses', E'have a good time, have a hard time, have an easy time, have difficulty, have fun, have problems, spend time, waste time.\nExample: I had a good time playing video games all-day Saturday', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('invest', E'expend money with the expectation of achieving a profit or some positive result', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('overeager', E'too eager', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('compactness', E'the quality of using very little space', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('somewhat', E'to some degree', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level3' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('broom', E'A broom is a cleaning tool consisting of usually stiff fibers attached to, and roughly parallel to, a cylindrical handle, the broomstick.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('broomstick', E'Is the stick of a broom.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('often verbs in reporting clause', E'more formal: argue, assert, claim, report\nmore conversational: admit, agree, assume, believe, doubt, explain, feel, say\nExample: In turkey, many people agree (that) when someone goes on a journey, you should pour water on the ground behind him or her to bring the person back safely.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('reporting clauses', E'It has the next structure: <many people / some people> + <reporting clause verb> (that) + <phrase>. Example: in Venezuela, some people say (that) if someone passes a broom over your feet, you will never get married.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Household goods', E'Or household objects, are goods and products used within households. Examples of household goods include air conditioners, baby items, baking dishes, beds/bedframes, blankets, bedding, linens, towels, blenders, mixers, bookcases, books, etc. ', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('wood', E'1. the hard fibrous material that forms the main substance of the trunk or branches of a tree or shrub, used for fuel or timber.\n2. an area of land, smaller than a forest, that is covered with growing trees.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('trunk', E'1. the main part of a tree\n2. Torso, a term for the human body without the head and limbs', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('that was begginer''s luck', E'Example:\na: he won the first chess game he ever played\nb: that was beginner''s luck', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('no such luck', E'example:\na: are you going to Europe this summer?\nb: no such luck. I''m staying home', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('I''m afraid you''re out of luck', E'Example: \na: I''m out of cash. Is there an ATM nearby?\nb: No, I''m afraid, you are out of luck', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('wow, he has got bad luck', E'Example:\na: he lost his job and house, and now he''s sick\nb: wow, he''s got bad luck', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('well, best of luck', E'Example:\na: I''ve got to go. I have a big test tomorrow\nb: well, best of luck', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('don''t push your luck', E'Example:\na: thanks for the $20. Can I have $40 more?\nb: don''t push your luck', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('It was the luck of the draw', E'Example:\na: how did you win those soccer tickets?\nb: It was the luck of the draw', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ATM', E'a machine that dispenses cash or performs other banking services when an account holder inserts a bank card.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sold out', E' it has sold all of a certain product. Example:\na: I really want tickets to the Jay Z concert\nb: I''m afraid you''re out of luck, they sold out in 10 minutes.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('restate', E'explain (something) again or differently, especially more clearly or convincingly', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('level-headed', E'calm and sensible', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('horseshoe', E'a shoe for a horse formed of a narrow band of iron in the form of an extended circular arc and secured to the hoof with nails.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('statement', E'1. a definite or clear expression of something in speech or writing', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('knock on wood', E'- I hope my good luck will continue\n- it is said that if you knock on something made of wood your luck will continue', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hand down', E'to give something to a younger member of your family when you no longer need it, or to arrange for someone younger to get it after you have died', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('reporting clause with indirect object', E'the next verbs in a reporting clause are frequently followed by the indirect object: admit, agree, announce, comment, complain, confess, disclose, explain, inform, reveal. Examples: \n- Several people agree with me that logic, no superstitions, is the best way to make decisions.\n- Max explained to the teacher that a black cat never means bad luck in his country.\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('reporting clauses where ''that'' is necessary', E'The next verbs in reporting class are frequently followed by that: accusation, assertion, comment, explanation, response, argument, claim, decision, remark, suggestion. Examples:\n- Bill made the assertion that he has no luck at all if it weren''t for bad luck\n- Liliana repeated her argument that only foolish people believe in magic\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('chase away', E'force to go away or to get rid of something unpleasant', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('loiter', E'- stand or wait around without apparent purpose\n- walk slowly and with no apparent purpose; dawdle\nexample: she saw Mary loitering near the classroom', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('vase', E'a decorative container without handles, typically made of glass or china and used as an ornament or for displaying cut flowers.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('auction', E'a public sale in which goods or property are sold to the highest bidder.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('crack', E'- a line on the surface of something along which it has split without breaking apart\n- a sudden sharp or explosive noise', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cricket', E'an insect. The male produces a characteristic musical chirping sound.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cheddar', E'a kind of firm smooth yellow cheese, originally made in Cheddar in south-western England', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ripen', E'- to (cause to) become ripe\n- to develop a suitable condition for something to happen\nexample: The summer sunshine ripened the melons', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hoax', E'a humorous or malicious deception.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('coconut', E'- the large oval brown seed of a tropical palm, consisting of a hard woody husk surrounded by fiber, lined with edible white flesh and containing a clear liquid.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('coffee pot', E'a container with a handle and shaped opening, for making and serving coffee in', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('believable', E'- able to be believed; credible.\n- convincing or realistic.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('conceivable', E'capable of being imagined or grasped mentally', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('convincing', E'- capable of causing someone to believe that something is true or real.\n- (of a victory or a winner) leaving no margin of doubt; clear.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('credible', E'able to be believed; convincing.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('dubious', E'hesitating or doubting.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('far-fetched', E'unlikely and unconvincing; implausible', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fishy', E'arousing feelings of doubt or suspicion', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('iffy', E'- full of uncertainty; doubtful.\n- of doubtful quality or legality.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('misleading', E'giving the wrong idea or impression', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('phony', E'- not real or genuine; fake\n -false or deceiving; not truthful\n- insincere or deceitful', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('plausible', E'- seeming reasonable or probable\n- (of a person) skilled at producing persuasive arguments, especially ones intended to deceive.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('well-founded', E'based on good evidence or reasons (when talking about suspicion or belief)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('get this', E'used to draw attention to something surprising or interesting that you are about to mention.\nExample: And the whole thing only cost â get this â $12.95.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('believe it or not', E'used to concede that a statement is surprising\nexample: believe it or not, I was considered quite bright in those days', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('did you hear what happened?', E'to ask if the other person has knowledge about a recent event or information.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('passive voices in reporting clauses', E'When using passive voice in reporting clause you can replace the agent (some people / many people) with ''it''. Examples:\n- It was explained (that) the device emits a sound that irritates young people\n- it is said (that) the video ran for over nine months.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('suntan', E'a golden-brown coloring of the skin caused by exposure to the sun.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hurdler', E'an athlete, dog, or horse that runs in hurdle races.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hurdle', E'1. one of a series of upright frames over which athletes in a race must jump\n2. a problem or difficulty that must be overcome\n3. take part in a hurdle race', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('backpack', E'a large bag used to carry things on your back, used especially by people who go camping or walking', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('gear', E'a device, often consisting of connecting sets of wheels with teeth (= points) around the edge, that controls how much power from an engine goes to the moving parts of a machine', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bouncing', E'- happy and healthy\n- (with reference to an object, especially a ball) move quickly up, back, or away from a surface after hitting it.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('boost', E'to improve or increase something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('avid', E'extremely eager or interested', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('upside-down', E'having the part that is usually at the top turned to be at the bottom. Overturned', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('jellyfish', E'a sea creature with a soft, oval, almost transparent body', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('firefly', E'an insect that is active during the night and whose tail produces light', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('stunt', E'- an exciting action, usually in a movie, that is dangerous or appears dangerous and usually needs to be done by someone skilled\n- something that is done to get attention for the person or people responsible for it', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('crop', E'(the total amount collected of) a plant such as grain, fruit, or vegetable grown in large amounts', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tide', E'the rise and fall of the ocean that happens twice every day', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('verbs to use for passive voice in reporting clause', E'announce, deny, maintain, reveal, suggest, confirm, estimate, observe, rumor, understand', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('simple present of reporting clause in passive voice', E'Example: it is suggested that passengers report anything suspicious to the driver', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('simple past of reporting clause in passive voice ', E'example: it was fatly denied that a submarine had been lost in arctic ocean.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('present perfect of reporting clause in passive voice ', E'it has been estimated that the construction of Stonehenge took over 20 million hours.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('past perfect of reporting clause in passive voice ', E'example: it had been rumored that a monster was living in the lake.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('use of modals for reporting clause in passive voice', E'example: it couldn''t be denied that many mysteries elude scientific understanding', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('use of past modals for reporting clause in passive voice', E'example: it should have been confirmed that the flight would be delayed.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('flatly', E'in a firm and unequivocal manner; absolutely', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('elude', E'escape from or avoid (a danger, enemy, or pursuer), typically in a skillful or cunning way.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('era', E'a long and distinct period of history.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('psycho', E'psychopath', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('give off', E'to produce something such as heat, light, or a smell', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('clover', E'a small plant with three round leaves on each stem, often fed to cows', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('omen', E'something that is considered to be a sign of how a future event will take place', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('jinx', E'bring bad luck to; cast an evil spell on.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('disclose', E'- make (secret or new information) known.\n- allow (something hidden) to be seen.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ladder', E'a piece of equipment used for climbing up and down, that consists of two vertical bars or pieces of rope joined to each other by a set of horizontal steps', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('chopstick', E'one of a pair of narrow sticks that are used for eating East Asian food', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bowl', E'a round container that is open at the top and is deep enough to hold fruit, sugar, etc.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('utensil', E'a device or tool having a particular use, esp. in a kitchen. Example: We packed plates, cups, napkins, and eating utensils for the picnic.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level4' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('crowdsourcing', E'the act of giving tasks to a large group of people or to the general public, for example, by asking for help on the internet, rather than having tasks done within a company by employees', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('certainty adverbs', E'clearly, definitely, obviously, unquestionably', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('les certainty adverbs', E'apparently, seemingly, supposedly', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('possibility and probabilty adverbs', E'possibly, potentially, probably', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('directly adverbs', E'frankly, honestly, seriously', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('summarizing adverbs', E'basically, essentially, fundamentally, mainly, overall', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('more adverbs', E'amazingly, surprisingly, not surprisingly, predictably, fortunately, unfortunately', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('certainty adverb example', E'unquestionably, studios are interested in producing a lot more movies about superheroes', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('less certainty adverb example', E'seemingly, there have been more women cast in leading roles in successful movies', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('possibility and probability adverb example', E'box office profit will possibly continue to fall in the United States.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('directly adverb example', E'honestly, I hope that having more courageous heroines will be a trend that lasts and not just a passing fad', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fad', E'a style, activity, or interest that is very popular for a short period of time.\nExample: There was a fad for wearing ripped jeans a few years ago', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('summarizing adverb example', E'Overall, the animated movies I take my children to see this days are visually spectacular.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('other adverbs example', E'not surprisingly, the other adults I see at the theater also enjoy these movies as much as the kids do.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('convey', E'to express a thought, feeling, or idea so that it is understood by other people', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('engrossing', E'very interesting and needing all your attention', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('chart', E'a drawing that shows information in a simple way, often using lines and curves to show amounts', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('gender', E'the physical and/or social condition of being male or female', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('genre', E'a particular subject or style of literature, art, or music', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('clichÃ©d', E'showing a lack of originality; based on frequently repeated phrases or opinions.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('formulaic', E'- produced in accordance with a mechanically followed rule or style\n- incorporate plots that have been reused so often as to be easily recognizable', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('inspiring', E'indirectly causing you to feel confident about yourself or eager to learn or do something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mediocre', E'not very good', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('moving', E'That causes someone to feel strong emotions', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('predictable', E'happens in a way or at a time that you know about before it happens', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('riveting', E'extremely interesting', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('touching', E'Provoking sadness and pity.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('offbeat', E'unusual and strange and therefore surprising or noticeable', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Head out', E'meaning to leave or depart. Is often used in reference to a planned departure or as a way to announce one''s exit.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cast', E'the actors in a movie, play, or show', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('look up', E'to become better.\nExample: I hope things will start to look up in the new year', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('time off', E'a period of time when you do not work because of illness or holidays, or because your employer has given you permission to do something else.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('suspense', E'a feeling of excitement or anxiety while waiting for something uncertain to happen', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('thriller', E'a book, play, or movie that has a story with a lot of life-or-death situations. Usually about solving a crime, espionage, or serial killers. ', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('drama', E'In film and television, is a category of narrative fiction (or semi-fiction) intended to be more serious than humorous in tone.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('star', E'(of a performer) have a principal role in a film, play, or other show.\nExample: Di Caprio has starred in many different movie genres.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('performance', E'how well a person, machine, etc. does a piece of work or an activity', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('shot (movies)', E'a photograph, or a short piece in a movie in which there is a single action or a short series of actions', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('it might be better if you', E'Example: in the future, it might be better if you let me contact you.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('I think what it needs is', E'Example: I think what it needs is careful management to ensure that inherent rivalries are minimized.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('you might want to', E'Example: If you have a history of cancer in your family, you might want to find out if you carry any genes that are associated with a higher risk', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('It would be even better', E'Example: It would be even better if there was diversity between them, avoiding many from a single country', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('conjunctive adverbs', E'link a sentence with a preceding idea. Use the next structure: <idea>; <adverb>, <idea2>', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('conjunctive adverbs example', E'the coming attractions ended and the movie began; accordingly, the audience fell silent.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sentence adverbs', E'Are located at the beginning of the phrase, to express the speaker''s attitude about the entire sentence. Use the next structure: <adverb>, <phrase>. Example:\npredictably, the hero of the movie won the heart of the girl.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sentence adverbs in place of longer clauses', E'example:\nreplace: people were amazed that the movie sold 26 million tickets on its opening weekend. \nwith: amazingly, the movie sold 26 million tickets on its opening weekend. ', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('moviegoers', E'a person who goes to the cinema, especially on a regular basis.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('boldfaced', E'- printed in boldface type\n- flagrant or audacious.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('storyline', E'the plot of a novel, play, film, or another narrative form', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('stream (internet, tv show)', E'- a continuous flow of data or instructions, typically one having a constant or predictable rate\n- transmit or receive', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('such...that', E'Such is followed by a noun. Example: it''s such a great show that I bought all eight seasons.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('so...that', E'so is followed by an adjective or an adverb. Example: dr. house is so foul-tempered that I hated him when I first started watching the show.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('foul-tempered', E'easily angered; having a bad temper.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('so many...that', E'''so many'' is followed by countable nouns. Example:\nthe dialogue is packed with so many jokes that it''s nonstop laughs from beginning to end.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('so few...that', E'''so few'' is followed by a countable noun. Examples:\nThere are so few cars that I can count them on the fingers of one hand', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('so much...that', E'''so much'' is followed by an uncountable noun. Example: so much rain that I was only able to train for 40 minutes today.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('so little... that', E'so little is followed by an uncountable noun. Example: My busy schedule leaves me so little TV time that I don''t want to waste it watching mediocre sitcoms.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('underscore', E'- a line is drawn under a word or phrase for emphasis\n- emphasize', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grounded', E'- well balanced and sensible\n- (of a pilot or an aircraft) prohibited or prevented from flying', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grassroot', E'- the most basic level of an activity or organization.\n- ordinary people regarded as the main body of an organization''s membership', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('painstakingly', E'with great care and thoroughness. Example: the property has been painstakingly restored by its current owners', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('thoroughness', E'great care and attention to detail', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('outward', E'- of, on, or from the outside.\n- going out or away from a place', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('indulge', E'- allow oneself (or someone else) to enjoy the pleasure of. Example: we indulged in a cream tea', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sketch comedy', E'sketch comedy comprises a series of short scenes or vignettes, called ''sketches'', commonly between one and ten minutes long. Example: sesame street', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('host', E'a person who receives or entertains other people as guests', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('so+<adjective/adverb>', E'Example1: the host of that game show is so funny\nExample2: that actress plays her role so convincingly', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('such+<noun/adjective>', E'example1: the writers of that new sitcom show such originality\nexample2: that was such a great documentary', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('so many + <countable/nothing>', E'example1: there are so many reality tv shows these days\nexample2: I don''t watch soap operas anymore, I''ve seen so many (soap operas) that I''m tired of them.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('so much + <uncountable/nothing>', E'example1: that game show gives away so much money.\nexample 2: TV can be bad for your health. I sometimes watch so much (TV) my eyes hurt.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('so little + <uncountable/nothing>', E'example1: he has so little free time he can''t keep up with the latest tv shows.\nexample2: He needs more free time, he has so little (free time) he can'' keep up with the latest tv shows.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('so few + <countable/nothing>', E'example 1: there are so few reporters that many stories aren''t covered\nexample 2: TV news requires reporters, but there are so few (reporters) that many stories aren''t covered.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('much as frequently', E'example: why do you watch TV so much? (much=frequently)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('little as infrequently', E'example: that actor is featured so little that I sometimes forget that he is on the show. (little=infrequently)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('come up', E'- come unexpectedly\n- When the sun or moon comes up, it rises\n- If information comes up (on a computer screen) it appears there\n- to be mentioned or talked about in conversation\n- to move toward someone', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('shoot (movies)', E'to use a camera to record a video or take a photograph', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('crowdfunding', E'the practice of getting a large number of people to each give small amounts of money in order to provide the finance for a business project, typically using the internet.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('scout', E'to go to look in various places for something you want', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('draft', E'a piece of text, a formal suggestion, or a drawing in its original state, often containing the main ideas and intentions but not the developed form', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('clip (movie)', E'a short part of a movie or television program', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cabin', E'a small, simple house made of wood', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level5' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('catchy', E'(of a tune or phrase) instantly appealing and memorable.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('overhear', E'hear (someone or something) without meaning to or without the knowledge of the speaker.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('overplay', E'- exaggerate the performance of (a dramatic role).\n- overemphasize', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('layer', E'- a level of something (organization, material) which is something of the other levels.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('feature', E'- a typical quality or an important part of something\n- to include/show someone or something as an important part', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sampling', E'- a small amount, number, or part of something that is tried or tested\n- the activity of getting the opinions of a number of people chosen from a group, in order to find out about the whole group.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tune', E'a series of musical notes, especially one that is pleasant and easy to remember.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('twist', E'- to turn something, especially repeatedly, or to turn or wrap one thing around another.\n- a change in the way in which something happens.\n- to change/turn something with a dishonest purpose.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('double comparative', E'It has the next structure: the <comparative1> <phrase1>, the <comparative2> <phrase2>. Comparative1 and comparative2 can be the same.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('double comparative with the more... the more', E'the more you like to dance, the more you appreciate the music with Latin beat.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('double comparative: the more... the less', E'example: the more I hear a pop song on the radio, the less I feel like buying it.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('double comparative: the more... the better', E'the more exciting the soundtrack, the better the movie seems.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('double comparative: the louder... the sooner', E'Example: the louder the music gets, the sooner I feel like leaving', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('double comparative: the less... the better', E'example: the less 80''s music I hear, the better.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('list of comparatives', E'the more, the less, the better, the louder, the sooner, the fewer, the greater, the farther/further', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('further', E'- more far, farther\n- before a noun, it can mean extra/additional/higher-level', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('farther', E'more far', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rhythm', E'a strong pattern of sounds, words, or musical notes that is used in music, poetry, and dancing', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tempo', E'- the speed at which a piece of music is played\n- the speed at which an event happens', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pace', E'the speed at which someone or something moves, or with which something happens or changes', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('melody', E'- the main tune in a piece of music that is often played or sung more than once.\n- a tune, often forming part of a larger piece of music', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('howling', E'(of the wind) blowing hard and making a lot of noise', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rhyme', E'- Words that rhyme have the same last sound\n- a word that has the same last sound as another word\n- a short poem, especially for young children', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('nursery', E'- a place where young children and babies are taken care of while their parents are at work\n- relating to the teaching of children who are between the ages of two or three to five years old\n- a room in a house where small children sleep and play', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('although', E'despite the fact that. Example: He decided to go, although I begged him not to.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('break up', E'The relationship ends.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('perform (music)', E'to entertain people by dancing, singing, acting, or playing music', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('release (movie or music)', E'If a company releases a movie or musical recording, it allows the movie to be shown in cinemas, or makes the musical recording available for the public to buy', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cutting-edge', E'very modern and with all the newest features', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('clean-cut', E'Tidy in appearance and behaves well', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('record (information)', E'- to put sounds or pictures onto magnetic tape or a computer using electronic equipment so that they can be heard or seen later.\n- to keep information for the future by writing it down or storing it on a computer.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('soothing', E'making you feel calm', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('monotonous', E'not changing and therefore boring', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('exhilarating', E'making you feel very excited and happy', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('evocative', E'making you remember or imagine something pleasant', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('frenetic', E'involving a lot of excited movement or activity', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('haunting', E'beautiful, but in a sad way and often in a way that cannot be forgotten', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mellow', E'smooth and soft, or not too sharp, bright, new, or rough', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('thoughtful', E'- showing consideration for the needs of other people\n- absorbed in or involving thought. Showing careful consideration or attention.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('listen to music', E'is ''listen to music'', never ''listen music''', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('convince', E'- cause (someone) to believe firmly in the truth of something.\n- persuade (someone) to do something.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('passer-by', E'someone who is going past a particular place, especially when something unusual happens. Example: The gunmen opened fire, killing a policeman and a passer-by', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('passersby', E'plural of passer-by', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('drawback', E'a disadvantage or the negative part of a situation', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grow up', E'to gradually become an adult', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('stage (theater)', E'the area in a theater, often raised above ground level, on which actors or entertainers perform', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('stall', E'a large table or a small shop with an open front from which goods are sold in a public place', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('startling', E'surprising and sometimes worrying. Example: He made some startling admissions about his past', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('plug', E'- a small plastic or rubber object with two or three metal pins, attached to the end of a wire on a piece of electrical equipment and pushed into a special opening in a wall to connect the equipment to a supply of electricity\n- to attach electrical equipment to a supply of electricity with a plug.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('deaf', E'unable to hear, either completely or partly', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('songwriter', E'a person who writes the music and words of songs', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('follow-up', E'a farther action connected with something that happened before. Example: This meeting is a follow-up to the one we had last month.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('go up', E'- to move higher, rise, or increase (especially very fast)\n- to suddenly explode', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('the <more/less> <clause1>, the <more/less> <clause2>', E'Example: THe more I listen to classical music, the more I appreciate it.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('the <comparative> <none> <clause>...', E'Example: the more dancing you do, the more natural you''ll feel on the dance floor.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('the <comparative> <clause>... ', E'Example1: the more romantic a song is, the less my brother wants to listen to it.\nExample2: The louder Mario plays his stereo, the more his neighbors complain', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('use ''will'' to express facts', E'Example: the true talent will always be noticed', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('will for present habits or characteristic behaviors', E'Example: today, superstar Rihanna will often reinvent her look with startling new hairstyles and clothes.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('use ''would'' to express past habits', E'Example: From a very young age, Adele would perform for her mother.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('common short double comparatives', E'- the more, the merrier\n- the bigger, the better\n- the sooner, the better', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('are you into...', E'Here you are asking a question about an interest they might have or something they might enjoy doing.\nExample: Are you into soccer?', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('how do you feel about..?', E'to ask about someone''s opinion in a particular matter.\nexample: How do you feel about this new leadership challenge in your career?', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('what do you think <of/about>..?', E'example1: What do you think of the current state of Cuba?\nexample2: What do you think about big public institutions? ', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('soother', E'comparative form of sooth', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('however', E'- in whatever way; regardless of how.\n- used to introduce a statement that contrasts with or seems to contradict something that has been said previously.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('be a has-been', E'a person who in the past was famous, important, admired, or good at something, but is no longer any of these.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('get your foot in the door', E'to enter a business or organization at a low level, but with a chance of being more successful in the future', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('be discovered', E'example: His first experience with the camera was at the tender age of four, when he was discovered for an advertising spot for washing machines.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('be washed-up', E'If you are washed up, you are no longer successful and you have no chance of success in the future', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pay your dues', E'to do something that you do not enjoy in order to have something that you want, or because you feel it is your duty', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('make it big', E'to become famous or successful', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('get your big break', E'Get a fortuitous moment, opportunity, or turn of events of great consequence, especially as relates to one''s career.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('make a comeback', E'Also, stage a comeback. Achieve success after retirement or failure', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('be a one-hit wonder', E'be a performer of popular music who makes one successful recording but then no others', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('make a name for yourself', E'to become famous or respected by a lot of people', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('break into a business', E'to begin working in a new business or a new area', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('break into <something>', E'to suddenly begin to do something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('start out', E'to begin your life, or the part of your life when you work, in a particular way. Example: My dad started out as a salesperson in a store.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('trail', E'- a path through a rural, mountain, or forest area, often made or used for a particular purpose\n- the smell or series of marks left by a person, animal, or thing as it moves along\n- to (allow something to) move slowly along the ground or through the air or water, after someone or something\n- various pieces of information that together show where someone you are searching for has gone', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bootleg', E'illegally made, copied, or sold. Example: bootleg CDs/liquor', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('wound up', E'very worried, nervous, or angry. Example: She gets pretty wound up before a game', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('label', E'- (verb) to attach a piece of paper or other material that has information about an object to that object.\n- (noun) a piece of paper or other material that gives you information about the object it is attached to.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('stumble', E'- to step awkwardly while walking or running and fall or begin to fall\n- to make a mistake, such as repeating something or pausing for too long, while speaking or playing a piece of music.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('charts (music)', E'the lists produced each week of the records with the highest sales', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('audition', E'a short performance that an actor, musician, dancer, etc. gives in order to show they are suitable for a particular play, movie, show, etc.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('''would'' and ''use to'' as synonyms', E'wud can be use to replace ''use to'' when is not followed by stative verbs\noption1: Before he became a big star, Mark used to play music on the street for money.\noption2: Before he became a big star, Mark would play music on the street for money.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('would can''t go before stative verbs', E'would cannot replace ''used to'' before stative verbs such as be, have, like, live, love, mean, and own.\ncorrect: when I was young I used to have a clarinet\nincorrect: when I was young, I would have a clarinet', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('footage', E'(a piece of) film or videotape that shows a single event or place. Example: Detectives were studying security video footage taken from several locations around the van.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('set out', E'to start an activity with a particular aim. Example: Research around the world set out to discover a vaccine for coronavirus.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('find out', E'to learn by study, observation, or search.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('difference ''the fewer'' and ''the less''', E'- ''the fewer'' is for countables\n- ''the less'' is for uncountables', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('venue', E'the place where something happens, especially an organized event such as a concert, conference, or sports competition.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('agent (music)', E'someone who represents an actor, musician, etc. in order to find work for them', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('indie', E'Indie music or movies are made by small companies that are not owned by larger companies', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cold-call', E'- make an unsolicited visit or telephone call to (someone), in an attempt to sell goods or services.\n- an unsolicited visit or telephone call made by someone trying to sell goods or services.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mainstream', E'considered normal, and having or using ideas, beliefs, etc. that are accepted by most people', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('upright', E'- straight up or vertical:\n- used to refer to something that is taller than it is wide\n- honest, responsible, and moral', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('gig', E'a single performance by a musician or group of musicians, especially playing modern or pop music', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('texture', E'(of a piece of music) is a feature of the way it sounds, based on how the different instruments mix their parts and the speed at which they play.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cover (music)', E'A recording or performance of a song that was previously recorded or made popular by another. Also called cover song.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('contrast', E'- the state of being strikingly different from something else in juxtaposition or close association\n- differ strikingly\n- to compare two people or things in order to show the differences between them\n- an obvious difference between two or more things', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('strikingly', E'in a way that attracts attention by reason of being unusual, extreme, or prominent.\nExample: the stories strikingly illustrate the creative power of the imagination.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('varied', E'containing or changing between several different things or types. Example:\na varied group of people', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('high-profile', E'attracting a lot of attention and interest from the public and newspapers, television, etc. Example: He has many high-profile clients.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level6' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('illogical', E'not reasonable, wise, or practical', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('immature', E'not completely developed physically, mentally, or emotionally, or lacking the expected type of responsible behavior for your age', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('improper', E'not suitable or correct for a particular use or situation', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('inconsiderate', E'not caring about other people or their feelings; selfish', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('inconsistent', E'changing in character; not staying the same', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('indecisive', E'unable to make a decision or take action', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('intolerant', E'disapproving of or refusing to accept people, behavior, or ideas that are different from your own', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('irresponsible', E'not thinking carefully enough or not caring about what might result from actions taken', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('concerned', E'worried, troubled, or anxious', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('resort', E'- a place that is frequented for holidays or recreation or for a particular purpose.\n- turn to and adopt a course of action (especially an extreme or undesirable one) so as to resolve a difficult situation.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pesticide', E'a substance used for destroying insects or other organisms harmful to cultivated plants or to animals.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('workout', E'a session of vigorous physical exercise or training.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('afford', E'- have enough money to pay for\n- provide or supply (an opportunity or facility).', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('shrink', E'become or make smaller in size or amount.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('trend', E'- a general direction in which something is developing or changing.\n- a fashion', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ecotourism', E'tourism directed towards exotic, often threatened, natural environments, intended to support conservation efforts and observe wildlife.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('underline', E'- draw a line under (a word or phrase) to give emphasis or indicate special type.\n- emphasize', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('throw away', E'to get rid of something by treating it as garbage', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('affordable', E'- not expensive\n- able to be bought or rented by people who do not earn a lot of money:', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('paragraph', E'a short part of a text, consisting of at least one sentence and beginning on a new line. It usually deals with a single event, description, idea, etc.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('require relative pronounce', E'A relative pronoun is required when it isn''t followed by a subject or if it shows possession (with whose).', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('optional relative pronounce', E'relative pronounce is optional if it is followed by a subject (exception for whose).', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('require relative pronoune examples', E'Example 1: people <who/that> are concerned with the effects of pesticides on the environment are buying organic produce.\nExample 2: social exercise programs <that/which> ofter fun group workouts are on the rise.\nExample 3: more professionals whose managers allow it are opting to telecommute or work from work.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('optional relative pronounce examples', E'example 1: hybrid cars are an option (that/which) more people are choosing.\nexample 2: some elementary schools now offer classes for children (who/whom/that) they once considered too young.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('clause', E'- a group of words, consisting of a subject and a finite form of a verb\n- a particular part of a written legal document, for example a law passed by Congress or a contract (= an agreement)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<object/subject> in required relative pronouns', E'relative pronoun is required when it refers to the subject or shows possession.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<object/subject> in optional relative pronouns', E'relative pronoun is optional if refers to the object of the clause.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('thesis statement', E'A thesis statement is one sentence that expresses the main idea of a research paper or essay, such as an expository essay or argumentative essay. It makes a claim, directly answering a question.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('telecommute', E'work from home, making use of the Internet, email, and the telephone.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('subject and object of the phrase', E' The subject is the person or thing doing something, and the object is having something done to it. Example: I love you.\n''I'' is the subject, and ''you'' are the object', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('indigenous', E'- naturally existing in a place or country rather than arriving from another place\n- native', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('detached', E'- separated. Not connected to another part or structure\n- not emotionally involved in a situation', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('yard', E'- a unit of measurement equal to three feet or approximately 91.4 centimeters\n- an area of land next to a building that usually has a hard surface and that is used for a special purpose. Example: The children played on the school yard.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('dweller', E'a person who lives in a particular type of place. Example: a city dweller', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('frantic', E'- almost out of control because of extreme emotion, such as worry\n- done or arranged in a hurry and a state of excitement or confusion', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('beetles', E'a group of insects that have wings that are hard and shell-like.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('turn over', E'- If an engine turns over, its parts move in order to make the engine start running\n- to sell and replace goods at a particular rate. Example: the store''s inventory turned over three times.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('turn off', E'- leave one road in order to join another\n- switch off', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('turn on', E'- turn on something means to suddenly attack physically or verbally\n- have as the main topic or point of interest\nswitch on', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('indistinguishable', E'impossible to judge as being different when compared to another similar thing:', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('take a pay cut', E'Accept a reduced salary', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('go away', E'- disappear\n- to leave your home in order to spend time somewhere else, usually for a vacation\n- to leave a place', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('stood', E'past simple and past participle of stand', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bake', E'to cook inside an oven, without using added liquid or fat', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('stove', E'a large box-shaped device that is used to cook and heat food, either by putting the food inside or by putting it on the top', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('oven', E'the part of a stove with a door, used to bake or roast food:', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('airfare', E'the price of a trip by plane', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('culture shock', E'a feeling of confusion felt by someone visiting a country or place that they do not know', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('asking ofr more specific information', E'- what makes you say that?\n- why do you think that?\n- In what way(s)?', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('whom instead of who', E'use whom instead of who when the previous word is a preposition', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example of: preposition + whom', E'No one can live on that land now except indigenous people to whom special permits have been given. ', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('which instead of that', E'use which instead of that when the previous word is a preposition.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example: preposition + which', E'My parent''s generation stood for certain principles against which my generation has rebelled', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('whose for things and concepts', E'you use whose not only for people possessions but also for part of a thing or parts of a concept.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example: whose for things or concepts', E'There are some new fitness classes whose purpose is to provide safe exercise for the elderly', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('''as if'' and ''as though''', E'use these to introduce a comparison with a hypothetical scenario', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('''as if'' and ''as though'' example', E'Still, I feel (as if / as though) something is missing', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('''as'' and ''the way''', E'Use these to introduce a comparison with a real scenario', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('''as'' and ''the way'' example', E'I''m thinking of joining a volunteer program to help build houses for the needy (as / the way) the few of my friends have.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('like instead of ''as'', ''the way'', ''as if'' and ''as though''', E'In informal English, you can use ''like'' instead of these options.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example: like instead of ''as'', ''the way'', ''as if'' and ''as though''', E'- It seems as though the job was made for me\n- It seems like the job was made for me', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('anticipate a change', E'to be aware that a change is likely to happen', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('avoid a change', E'to take steps to prevent a change from happening', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bring about a change', E'to make a change happen', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cope with a change', E'to handle a new situation or circumstance', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('go through a change', E'to experience a new situation or circumstance', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('resist a change', E'to struggle against a change', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('welcome a change', E'to be happy about a change that is happening', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('collocation', E'a word or phrase that is often used with another word or phrase, in a way that sounds correct to people who have spoken the language all their lives, but might not be expected from the meaning.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cope', E'to deal successfully with a difficult situation', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bring <something> about', E'to cause something to happen. Example: He brought about his company''s collapse by his reckless spending.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('go through', E'to be officially accepted or approved. Example: A city council member said that the proposals for the new shopping centre were unlikely to go through.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('thrill', E'a feeling of extreme excitement, usually caused by something pleasant. Example: the thrill of winning a competition', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('income', E'money that is earned from doing work or received from investments', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('paralegal', E'someone who works in a law company, or a company''s legal department, and has some legal training, but does not have all the qualifications to be a lawyer.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('trial lawyer', E'a lawyer who practises in a trial court, especially one who represents plaintiffs in tort suits.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('plaintiff', E'someone who makes a legal complaint against someone else in court.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tort suit', E' a suit where the purpose of a legal action is to obtain a private civil remedy such as damages, may be compared to criminal law, which deals with criminal wrongs that are punishable by the state.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tort', E'an action that is wrong but can be dealt with in a civil court rather than a criminal court', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bed and breakfast', E' is a small lodging establishment that offers overnight accommodation and breakfast. ', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('lodging', E'a temporary place to stay', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('dish (something) out', E'- to give or say things to people without thinking about them carefully. Example: He''s very keen to dish out criticism.\n- to give or serve food to people. Example: Jon, could you dish the carrots out for me, please?', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('chip', E'a long, thin piece of potato that is fried and usually eaten hot', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mesa', E'a mountain with a large flat top', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('freeway', E'a wide road for fast-moving traffic, especially in the US, with a limited number of places at which drivers can enter and leave it.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('widespread', E'existing or happening in many places and/or among many people', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fairly', E'more than average, but less than very', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('figure out', E'to understand or solve something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('weeknight', E'the evening or night of any day of the week except Sunday and Saturday', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('housing', E'buildings for people to live in', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('share house', E'are known as rental places with spaces separate from a private room where the residents can gather together to ''share'' and ''exchange'' in a new and exciting way of living.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('commute', E'to make the same journey regularly between work and home', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('frazzled', E'extremely tired in a nervous or slightly worried way after a lot of mental or physical effort', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('nanny', E'a person whose job is to take care of a particular family''s children', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('candlelit', E'with light produced by burning candles', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('potluck', E'anything that is available or is found by chance, rather than something chosen, planned, or prepared', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fancy', E'- expensive\n- to want to have or do something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('budget', E'the amount of money you have available to spend', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('on-the-job', E'while working; at work.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('knowledgeable', E'intelligent and well informed', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rely', E'depend on with full trust or confidence.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('list of modal verbs', E'can, may, must, shall, will, ought to, need, be to, have to, would, should, use to, could, might', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example of comparison with ''as do''', E'Marissa has a lot of trouble accepting change, as does Trina', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example of comparison with: as <auxiliar>', E'Mitt has coped well with changes at work, as have his coworkers', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example of comparison with: as <modal>', E'Grandma would tell us stories of the old days, as would grandpa', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example of comparison with: as <be> ', E'Marcel is wary of technology, as is his whole family', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('omit subject in comparison', E'In comparison, if both clauses have the same subject then you can omit the subject is optional in the second clause. Examples:\n- Bill is talking about quitting his job, as though (he were) single and carefree.\n- Marvin sat motionless in front of his new media center, as if (he were glued) to the chair.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('past after ''as if'' and ''as though''', E'When talking about an unrealistic scenario we have to use past. Examples:\n- Bill is talking about quitting his job as though he were carefree\n- Some young people replace their gadgets every year as if they had all the money in the world', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('wary', E'feeling or showing caution about possible dangers or problems.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('shorten', E'make or become shorter.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('motionless', E'not moving; stationary.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('gadget', E'a small mechanical or electronic device or tool, especially an ingenious or novel one.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('lengthen', E'make or become longer', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('warmly', E'- in a way that shows friendliness towards a person or enthusiasm for an idea or project.\n- in a way that gives out warmth; with comfortable heat.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('retirement', E'- the withdrawal of a jury from the courtroom to decide their verdict.\n- the action or fact of leaving one''s job and ceasing to work', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('co-worker', E'a person with whom one works, typically someone in a similar role or at a similar level within an organization', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('homemaker', E'a person, especially a woman, who manages a home.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hairstylist', E'a person who cuts and styles people''s hair professionally.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Police officer', E' policeman, or a policewoman. Also known as officer', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fill in', E'act as a substitute for someone when they are unable to do their job.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('infer', E'deduce or conclude (something) from evidence and reasoning rather than from explicit statements.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sought', E'past simple and past participle of seek', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('seek', E'to try to find or get something, especially something that is not a physical object:\n''Are you actively seeking jobs?'' she asked.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level7' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bargain', E'a thing bought or offered for sale much more cheaply than is usual or expected.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('shopper', E'a person who is shopping.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bidding', E'the offering of particular prices for something, especially at an auction', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('deal', E'(noun) an agreement entered into by two or more parties for their mutual benefit, especially in a business or political context.\n(verb) take part in commercial trading of a particular commodity.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('commodity', E'a useful or valuable thing.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('secondhand', E'owned or used in the past by someone else', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('wholesale', E'the activity of selling goods, usually in large amounts, to businesses which then sell them to the public', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('thrift', E'the careful use of money, especially by avoiding waste. Example: The idea of the price increases is to encourage thrift.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('thrift shop', E'a shop selling second-hand clothes and household goods, typically to raise funds for a Church or charity.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('wholesale club', E'Or warehouse club, is a retail store, usually selling a wide variety of merchandise, in which customers may buy large, wholesale quantities of the store''s products, which makes these clubs attractive to both bargain hunters and small business owners.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('retail', E'the activity of selling goods to the public, usually in shops. Example: The job is open to applicants with over two years'' experience in retail.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('membership fee', E'Regular fees or charges often paid to an organization at regular intervals.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fee', E'an amount of money paid for a particular piece of work or for a particular right or service', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('membership', E'The state of belonging to an organization, or an agreement by which someone joins an organization', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('salesperson', E'- a person whose job is selling things in a shop or directly to customers\n- singular of salespeople', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('baker', E'a person whose job is to make bread and cakes for sale, or to sell bread and cakes', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('purchase', E'- something that you buy\n- to buy something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('unwise', E'stupid or likely to cause problems', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('low-price', E'used to describe things that do not cost much. Similar to bargain.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mannequin', E'a large model of a human being, used to show clothes in the window of a shop.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bargain hunter', E'always looking for bargains', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('subsequent', E'Happening after something else. Example: The book discusses his illness and subsequent resignation from politics.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bankrupt', E'unable to pay what you owe, and having had control of your financial matters given, by a law court, to a person who sells your property to pay your debts. Example: The recession has led to many small businesses going bankrupt.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bankruptcy', E'a situation in which a business or a person becomes bankrupt. Example: The company was forced into bankruptcy.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('run up', E'rise or increase beyond the limit. Example: The business has run up massive debts.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('debt', E'something, especially money, that is owed to someone else, or the state of owing something.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('shoplifter', E'a person who takes goods illegally from a shop without paying for them', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('community service', E'voluntary work intended to help people in a particular area.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('be a bargain hunter', E'to search for the lowest price when shopping', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('be a compulsive shopper', E'to buy things uncontrollably', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bid on an item', E'to name an amount that you are willing to pay for an item in an auction', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('go on a shopping spree', E'to spend a large amount of money buying many things at one time', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('go over your credit limit', E'to spend more than the amount allowed on a credit card', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('go window-shopping', E'to look at the displays in store windows and not buy anything', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('have buyer''s remorse', E'to regret buying something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('make an impulse buy', E'to buy something without thinking about whether you want, need, or can afford it', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('verbs for direct and indirect object pattern', E'Most verbs (like get, give, lend, offer, sell, send, show, teach and tell). Can follow both direct and indirect patterns:\ndirect pattern: <direct object> + <for/to> + <indirect object>\nindirect pattern: <indirect object> + <direct object>', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('verbs for direct pattern', E'Some verbs (like announce explain, describe, mention, provide, recommend, return and say) can only use direct pattern:\ndirect pattern: <direct object> + <for/to> + <indirect object>', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('verbs for indirect pattern', E'Some verbs (like allow,ask, cause and cost) can only use indirect pattern:\nindirect pattern: <indirect object> + <direct object>', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example verbs for both direct and indirect pattern', E'- direct: you can send information to other shoppers\n- indirect: you can send other shopper''s information', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example verb which only use direct pattern', E'direct: it provides it to them free of charge', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example verb which only use indirect pattern', E'indirect: it only cost him two dollars', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cash', E'- money in coins or notes, as distinct from cheques, money orders, or credit.\n- give or obtain notes or coins for (a cheque or money order).', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('refund', E'pay back (money), typically to a customer who is not satisfied with goods or services bought.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('spree', E'sustained period of unrestrained activity of a particular kind. Example: he went on a six-month crime spree.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('verbs commonly used with both indirect and direct object', E'bring hand, order, pay, serve, promise, give, make, owe, throw', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pronoun as direct object', E'When the direct object is a pronoun, it goes before the indirect object. Example: The boss owes it to Sid.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pronoun as indirect object', E'when the indirect object is a pronoun, it can go before or after the direct object. Example:\n- the boss owes him a month salary (him = indirect object)\n- the boss owes a month salary to him (him = indirect object)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('when pronouns in both direct and indirect object', E'When both objects are pronoun, only one pattern is possible: <direct object> + <to/for> + <indirect object>. Examples:\n- the boss owes it to him\n- the boss ordered it for him', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('comb', E'- (noun) a flat piece of plastic, wood, or metal with a thin row of long, narrow parts along one side, used to tidy and arrange your hair.\n- to make your hair neat using a comb.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('price-conscious', E'- knowing how much things cost and avoiding buying expensive things. Example: Customers grow more price-conscious every year.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('clerk', E'a person who works in an office, dealing with records or performing general office duties.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hand (verb)', E'to put something into someone''s hand from your own hand. Example: the waiter smiled politely as he handed me my bill.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('potter', E'- (noun) a person who makes dishes, plates, and other objects from clay, usually by hand on a special wheel.\n- (verb) to move around without hurrying, and in a relaxed and pleasant way.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('vendor', E'someone who is selling something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('meal', E'(noun) an occasion when food is eaten, or the food that is eaten on such an occasion', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('peanut', E'an oval-shaped nut that grows underground in pairs inside a thin brown shell', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('nut', E'the dry fruit of particular trees that grows in a hard shell and can often be eaten', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('blouse', E'a shirt for a woman or girl:', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('real estate', E'property consisting of land or buildings', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('real state agent', E'a person who sells and rents out buildings and land for clients; an estate agent.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('vacuum', E'- a space entirely devoid of matter\n- to use a vacuum cleaner to collect dust, dirt, etc.:', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('devoid', E'entirely lacking or free from.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('vacuum cleaner', E'a machine that cleans floors and other surfaces by sucking up dust and dirt.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('leaky', E'has a hole or crack in it that allows liquid or gas to get through', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('antique', E'something made in an earlier period that is collected and considered to have value because it is beautiful, rare, old, or of high quality', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('concierge', E'someone who is employed in a hotel to help guests arrange things, such as theater tickets and visits to restaurants', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('concierge service', E'service provided by a concierge', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('billboard', E'a very large board on which advertisements are shown, especially at the side of a road', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('poster', E'a large printed picture, photograph, or notice that you stick or pin to a wall or board, usually for decoration or to advertise something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('unappetizing', E'food that does not look or smell attractive and does not make you want to eat it', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('remorse', E'a feeling of sadness and being sorry for something you have done', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('go in', E'to enter a place', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('go out of business', E'if a company goes out of business, it stops doing business permanently, especially because it has failed. Example: If we sold food at those prices weâd soon go out of business.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('expressions for asking advice', E'- what do you think I should do?\n- what would you do if you were me?\n- what would you do if you were in my position?', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('diet pill', E'a pill and especially one containing amphetamine prescribed especially formerly to promote weight loss by increasing metabolism or depressing appetite.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('verbs in subjunctive', E'certain verbs like demand, insist, propose, recommend, request, and suggest, are followed by the subjunctive. In this case, the subjunctive uses the base form of the verb. It generally used in formal language to express a wish or necessity.\n\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('examples of verb in subjunctive', E'- I think the consumers need to insist (that) advertisements be truthful in every respect.\n- some ads seem to demand (that) the customers buy the product.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('verbs frequently followed by subjunctive', E'It is crucial. It is imperative. It is important. It is essential. It is vital. It is critical.\nExample: I believe it is essential that an ad be clever and witty in order to be effective.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pin', E'- to fasten something with a pin\n- a small thin piece of metal with a point at one end, especially used for temporarily holding pieces of cloth together', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('coupon code', E'a code that is used instead of paper coupons when shopping online; a type of online coupon', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('free sample', E'a small amount of a product given away for people to try', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('loyalty program', E'a program retail stores offer to provide discounts to regular customers, usually in exchange for their personal information', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('product placement', E'a way to advertise a product by showing it or naming it in a TV show or a movie', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('search-engine marketing', E'online marketing that places advertisements related to search results on search-engine results pages', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('word-of-mouth marketing', E'when people recommend products and services they''ve used to other people', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('celebrity endorsement', E'when a company pays a celebrity to promote a product by using it or being in advertisements', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('comparative marketing', E'to promote a product by showing how it is better than similar products', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('endorsement', E'the act of saying that you approve of or support something or someone', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sample', E'a small amount of something that shows you what the rest is or should be like', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('retailer', E'a person, shop, or business that sells goods to the public', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('brainstorm', E'(of a group of people) to suggest a lot of ideas for a future activity very quickly before considering some of them more carefully:', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('undercover', E'working secretly to obtain information, esp. for the police', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('marketer', E'- a company that sells a particular product or service\n- someone who works in marketing', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('stealth', E'- movement that is quiet and careful in order not to be seen or heard. Example: These thieves operate with terrifying stealth.\n- the quality of carrying an action out secretly, so that people do not know it is happening. Example: The weapons had been acquired by stealth.\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hold up', E'to remain strong or successful. Example: Will his alibi hold up in court?', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('back pages', E'the back part of a newspaper, which usually has news relating to sports', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('well-established', E'having a recognized position, or being generally known about.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('creep', E'- (verb) to move slowly, quietly, and carefully, usually in order to avoid being noticed\n- an unpleasant person, especially a man', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('silhouetted', E'forming a silhouette', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('truck', E'a large road vehicle that is used for transporting large amounts of goods', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('driveway', E'a short private road that leads from a public road to a house or garage', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('curb', E'to control or limit something that is not wanted', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('upper-middle-class', E' is the social group constituted by higher status members of the middle class. ', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cardboard', E'material like very thick, stiff paper, usually pale brown in color, used especially for making boxes', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('peddle', E'to sell things, especially by taking them to different places', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ware', E'used, often in shops, to refer to objects of the same material or type, especially things used in cooking and serving food. Example. tableware', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tuck (something) away', E'to put something in a private, safe place', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('shelf', E'a long, flat board fixed horizontally, usually against a wall or inside a cupboard so that objects can be stored on it.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('shelves', E'plural of shelf', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cupboard', E'a piece of furniture or a small part of a room with a door or doors behind which there is space for storing things, usually on shelves', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('lurking', E'-a feeling which exists although it may not be very strong, and will not go away\n- when a person or animal is waiting where he, she, or it cannot be seen, usually waiting to attack or do something bad', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('peer', E'- to look carefully or with difficulty\n- a person who is the same age or has the same social position or the same abilities as other people in a group', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pervasive', E'present or noticeable in every part of a thing or place', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('advocate', E'to publicly support or suggest an idea, development, or way of doing something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('affluent', E'having a lot of money or owning a lot of things', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('covert', E'hidden or secret', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('amplify', E'- to make something louder\n- to increase the size or effect of something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hyperconnected', E'Characterized by the widespread or habitual use of devices that have internet connectivity. Example: In our hyperconnected world, employees expect to work from anywhere', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('floral', E'made of flowers, or decorated with pictures of flowers. Example: a floral perfume.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pop up', E'to appear or happen, especially suddenly or unexpectedly', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('verbs which can be followed by that when using subjunctive', E'stipulate, advise, beg, require, ask, prefer, specify, vote. \nExample1: He advised that his students be on time.\nExample2: our store policy clearly stipulates that all sales associates report to work by 8:30 am.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('negative subjuntive', E'the negative in the subjunctive use the ''not'':\nExample. the advertising executive''s contract required that he not receive a bonus that year.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('passive form of subjunctive', E'use: be + <past participle of the subjunctive verb>\n- the sponsors asked that their product be featured prominently in the movie.\n- the manufacturers preferred that their shaving cream not be endorsed by misbehaving stars.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('stipulate', E'to say exactly how something must be or must be done', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('prominently', E'in a way that can easily be seen or noticed', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('misbehave', E'to behave badly', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('engage', E'- to employ someone\n- to interest someone in something and keep them thinking about it\n- to become involved, or have contact, with someone or something\n- to make one part of a machine fit into and move together with another part of a machine', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('end up', E'to finally be in a particular place or situation', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('compulsive', E'doing something a lot and unable to stop doing it', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('upto', E'at most', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('I''m a software developer', E'never ''''I''m software developer''''', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('direct and indirect object', E'Examples:\n- Oscar lend money to her \n- Oscar lend her money\nindirect object: her, direct object: money', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('medium', E'- a method or way of expressing something\n- being in the middle between an upper and lower amount, size, degree, or value', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('postcard', E'a card, often with a photograph or picture on one side, that can be sent without an envelope', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('infomercial', E'a long television advertisement, that contains a lot of information and seems like a normal program', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('advertiser', E'a person or company that advertises a product, service, or event.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('provide', E'to give someone something that they need.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level8' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('whatever', E'- anything that\n- everything that\n- doesn''t matter what', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('wherever', E'every or any place\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('whenever', E'every or any time', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('whichever', E'anyone or everyone (from a limited group). Example: Either Thursday or Friday - choose whichever day is best for you.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('whoever', E'- any person who\n- every person who\n- the person who\n- doesn''t matter who', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cub', E'the young of particular wild animals, such as bears and lions', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('kodiak bear', E'a very large brown bear of Kodiak and adjacent islands off the southern coast of Alaska that feeds largely on salmon, plants, and berries', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('adverbial clause', E'An adverbial clause is a dependent clause that functions as an adverb. That is, the entire clause modifies a verb, an adjective, or another adverb, usually follow the next structure <clause1> <conjunction> <clause2> where <clause2> modifies the meaning of a verb, an adjective or an adverb in the <clause1>', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example adverbial clause', E'example1: I used to read a lot, though I don''t have much time for books now.\nthe clause after <though> contrast with the adverb ''a lot''\nexample2: He said he was happy where he was\nthe clause after ''where'' act as an adverb for the adjective ''happy''', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('examples whenever', E'- whenever experts talk about language used by animals, Alex''s name is usually mentioned\n- Alex''s name is usually mentioned whenever experts tlak about language used by animals', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('examples wherever', E'- wherever there are elephants painting, people are fascinated\n- People arefascinated, wherever there are elephants painting', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<wherever/whenever> structure', E'option1: <wherever/whenever> <advervial_clause>, <other_clause>\noption2: <other_clause> <advervial_clause> <wherever/whenever>', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<when/where> instead of <whenver/wherever>', E'<when/where> can replace <whenver/wherever>. Examples:\n- <when/whenever> actors worked with bart the bear, they were always impressed\n- <where/wherever> there are elephants painting, people are fascinated', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('when', E'- that time\n- every or any time', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('where', E'- that place\n- every or any place', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('when ''whenever'' cannot replace ''when''', E'if when means ''that time'' then it cannot be replaced by ''whenever''. Example:\n- <when/whenever> actors work with him, they were always impressed (every time)\n- when Brad Pitt worked with Bart in Legends of the hall, he was very impressed (that time)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('when ''wherever'' cannot replace ''where''', E'if where means ''that place'' then it cannot be replaced by ''wherever''. Examples:\n- <wherever/where> there are elephants painting, people are fascinated (any place)\n- There were a lot of people where the elephants were painting today (that place)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('interchangeably', E'In a way that can be exchanged. Example: in this book, the word ''flavor'' is used interchangeably with ''aroma''', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('flatten', E'make or become flat or flatter.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tenant', E'a person who occupies land or property rented from a landlord.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pigeon', E'a large, usually gray bird that is often seen in towns sitting on buildings in large groups, and is sometimes eaten as food', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('startled', E'surprised and slightly frightened', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('parrot', E'a tropical bird with a curved beak, often kept as a pet and trained to copy the human voice', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('beak', E'the hard, pointed part of a bird''s mouth', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fetch', E'to go to another place to get something or someone and bring it, him, or her back', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('spark', E'- a very small piece of fire that flies out from something that is burning, or one that is made by rubbing two hard things together, or a flash of light made by electricity.\n- to cause the start of something, especially an argument or fighting.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('scratch', E'to cut or damage a surface or your skin slightly with or on something sharp or rough', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('itchy', E'having or causing an itch', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('itch', E'to have or cause an uncomfortable feeling on the skin that makes you want to rub it with your nails', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('look forward to <something>', E'to feel pleased and excited about something that is going to happen', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('claw', E'one of the sharp, curved nails at the end of each of the toes of some animals and birds', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fang', E'a long, sharp tooth that animals such as snakes and dogs have\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('feather', E'one of the long, light objects that cover a birdâs body, having soft fibers along each side of a thin, stiff, central stem', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fin', E'a thin, wing-shaped part of a fish that helps it to swim, or a wing-shaped part of a ship, aircraft, or car', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fur', E'the soft, thick hair that covers the bodies of some animals, or the hair-covered skin of animals, removed from their bodies\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('gills', E'the organ through which fish and other water creatures breathe\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hoof', E'the hard parts of the foot of an animal such a horse. Plural is hooves.\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('horn', E'a hard, pointed part, usually one of a pair, on the head of cows, goats, and other animals', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('paw', E'the foot of an animal, such as a cat, dog, or bear, that has claws or nails\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('scales', E'small, thin, and often rounded pieces that cover the bodies of fish\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tail', E'a part of the body of an animal attached to the base of the back, or something similar in shape or position', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tusk', E'either of the two, long, curved teeth that stick out from the mouth of some animals, esp. elephants and walruses', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('wing', E'either of two usually feathered body parts that birds use to fly\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('reptile', E'an animal that produces eggs and uses the heat of the sun to keep its blood warm', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mammal', E'any animal of which the female feeds her young on milk from her own body. Most mammals give birth to live young, not eggs', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('stuffed', E'A stuffed animal or bird is filled with special material so that it keeps the shape it had when it was alive', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('goose', E'a large water bird similar to a duck but larger, or the meat from this bird', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('overall', E'in general rather than in particular, or including all the people or things in a particular group or situation', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('companionship', E'the enjoyment of spending time with other people. Example:\n- I lived on my own for a while but I missed the companionship of others.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('impaired', E'damaged in a way that makes something less effective', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('harness', E'a piece of equipment with straps and belts, used to control or hold in place a person, animal, or object', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('shelter', E'(a building designed to give) protection from bad weather, danger, or attack', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('vest', E'a type of underwear, often with no sleeves, that covers the upper part of the body, worn for extra warmth', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('retriever', E'a large dog with thick black or light brown fur', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('undergo', E'to experience something that is unpleasant or something that involves a change', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('breed', E'- to keep animals for the purpose of producing young animals in a controlled way\n- (of animals) to have sex and produce young animals\n- a particular type of animal or plant', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bond', E'a close connection joining two or more people', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('adequately', E'in a way that is enough or satisfactory for a particular purpose', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fight <something> off', E'to free yourself from an illness or a desire to do something you should not do. Example: Her body couldnât fight the infection off.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hike', E'a long walk, especially in the countryside', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('run across', E'to meet someone you know when you are not expecting to. Example: I ran across several old friends when I went back to my hometown.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('climber', E'someone who climbs mountains for sport', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('welfare', E'- physical and mental health and happiness\n- the general state of health or degree of success of a person, business, country, etc\n- a help given, especially by the state or an organization, to people who need it, especially because they do not have enough money', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('leash', E'- a piece of rope, chain, etc. tied to an animal, especially to a dog at its collar when taking it for a walk.\n- put a leash on (a dog).', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('exotic', E'unusual and exciting because of coming (or seeming to come) from far away, especially a tropical country', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('run out', E'to finish, use, or sell all of something, so that there is none left. Example: The milk has run out.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('growl', E'to make a low, rough sound, usually in anger. Example: the dog growled at her.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('landlord', E'a person or organization that owns a building or an area of land and is paid by other people for the use of it', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ivory', E'the hard yellowish-white substance that forms the tusks of some animals such as elephants, used especially in the past to make decorative objects', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('wildflower', E'any flower that grows without having been planted by people', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('scuba diving', E'the sport of swimming underwater with special breathing equipment', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('orphan', E'a child whose parents are dead', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('beekeper', E'someone who keeps bees in order to produce honey', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('forest ranger', E'someone whose job involves protecting forests and areas of open country, for example by dealing with forest fires, and by making sure people obey laws relating to fishing, hunting, and camping.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('take off', E'- If an aircraft, bird, or insect takes off, it leaves the ground and begins to fly\n- to suddenly leave somewhere, usually without telling anyone that you are going.\n- to suddenly start to be successful or popular', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fine (money)', E'- to charge someone an amount of money as a punishment for not obeying a rule or law\n- an amount of money that has to be paid as a punishment for not obeying a rule or law', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('excursion', E'a short trip usually made for pleasure, often by a group of people', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('shorten phrases with <when/whenever/where/wherever>', E'If the two clauses connected by the conjunctive talk about the same subject and it has the next structure, <when/whenever/where/wherever> + <part1> + <be> + <part2>, the it can be replaced by: <when/whenever/where/wherever> + <part2>\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<whenever/wherever> = no matter <when/where>', E'Sometimes <whenever/wherever> means ''no matter <when/where>''\nExample: my dog doesn''t like it whenever I give him a bath', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<whenever/wherever> = although I don''t know <when/where>', E'<whenever/wherever> sometimes means ''although I don''t know <when/where>''. Example:\n- we''ll have to get together on his birthday, whenever that is\n- their dog was found in the park outside of Hicksville, wherever that is\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('<focus_adverbs> + <when/where>', E'<focus_adverbs> (like even, just, right and only) are usually never followed by <whenever/wherever>, instead they are followed by <when/where>. Examples:\n- My cats show me affection even when I''m in a bad mood.\n- elephants will survive in the will only where they are protected from illegal hunting.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('whoever and whatever use', E'Both are used in noun clauses and can function as either the subject or the object of the clauses.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('noun clause', E'A noun clause is a dependent clause that acts as a noun. Example:\n- Be sure to send a thank-you note to whoever interviewed you.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('whoever examples', E'- whoever applies should have at least five years of experience.\n- Extra consideration will be given to whoever can start immediately.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('whatever examples', E'- be ready to do whatever is required to return injured animals to the wild.\n- you''ll find whatever you need to start a career in nature right here. ', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pastime', E'n activity that someone does regularly for enjoyment rather than work; a hobby.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('zip line', E'a cable or rope stretched between two points of different heights, down which a person slides for amusement by means of a suspended harness, pulley or handle.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('try on', E'to put on clothes to see how they look or if they fit. Example: Try on those shoes.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('examples shorten with <when/whenever/where/wherever>', E'- pet owners must take the pets to the vet, <when/whenever> (taking them is) advisable\n- laws concerning the welfare of helper animals should be enforced <where/wherever> (enforce the law is) applicable.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('a breath of fresh air', E'someone or something that makes a situation feel new, different, and exciting', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('a drop in the ocean', E'a very small amount compared to the amount needed', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('as clear as mud', E'very difficult to understand', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('a walk in the park', E'something that is very easy to do, and usually pleasant\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('set in stone', E'to be fixed and unable to be changed', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('the tip of the iceberg', E'a small, noticeable part of a much bigger problem', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('under the weather', E'not completely well', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('up in the air', E'uncertain and with an unknown result', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('outdated', E'out of date; obsolete.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mud', E'soft, sticky matter resulting from the mixing of earth and water', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('run-down', E'buildings or areas are in very bad condition', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('horseback', E'sitting on a horse. Example: She taught him how to ride horseback.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('free-range', E'relating to or produced by farm animals that are allowed to move around outside and are not kept in cages', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('poultry', E'birds, such as chickens, that are bred for their eggs and meat', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bred', E'past of breed', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hind', E'at the back of an animal''s body. Example: hind legs (the one''s some animals use to walk in two legs, for example, a bear)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('amiable', E'pleasant and friendly', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('brim', E'- the bottom part of a hat that sticks out all around (not over) the head\n- to become full of something, especially a liquid\n- the very top edge of a container', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('khaki', E'dark yellowish-green cloth, often worn by soldiers', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('corp', E'abbreviation of corporation', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('smokey bear', E'Is an American campaign and advertising icon of the U.S. Forest Service.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('nightstick', E'a thick heavy stick used as a weapon by police officers', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('summons', E'- an official demand to appear in a court of law. Example: He was issued a summons for improper display of license plates.\n- to order someone to come to a person or place', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('issue (verb)', E'to give, supply, or produce something official', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('craft', E'skill and experience, especially in relation to making objects; a job or activity that needs skill and experience, or something produced using skill and experience', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('grill', E'the surface in a stove that can be heated to very high temperatures and under which you put food to be cooked', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('nugget', E'a small piece of chicken or fish that has been covered in breadcrumbs and fried', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('breadcrumbs', E'very small pieces of dried bread, especially used in cooking', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pose', E'- to cause something, especially a problem or difficulty\n- to ask a question, especially in a formal situation such as a meeting\n- to move into and stay in a particular position, in order to be photographed, painted, etc\n- to pretend to be something that you are not or to have qualities that you do not have, in order to be admired or attract interest', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('unnerve', E'to make someone feel less confident and slightly frightened', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('vexed', E'difficult to deal with and causing a lot of disagreement and argument', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('jogging', E'the activity of running at a slow, regular speed, especially as a form of exercise', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('yield', E'to supply or produce something positive such as a profit, an amount of food or information. Example: an attempt to yield increased profits', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('citywide', E'- existing or happening in all parts of the city\n- including all of a city and everyone who lives there', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ranger', E'a person whose job is to protect a forest or natural park', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('dump', E'to put down or drop something in a careless way', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('stunned', E'very shocked or surprised', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('year-round', E'happening or continuing throughout the year.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('put off', E'to decide or arrange to delay an event or activity until a later time or date. Example: The meeting has been put off for a week.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('timetable', E'- a detailed plan showing when events or activities will happen\n- a list of the times when classes in school happen', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('coral reef', E'an area of coral, the top of which can sometimes be seen just above the ocean', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('coral', E'a substance like rock, formed in the ocean by groups of particular types of small animal, often used in jewelry', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('reef', E'a line of rocks or sand just above or just below the surface of the sea, often dangerous to ships', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rock-climb', E'engage in the sport or activity of rock climbing', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('kayaking', E'the activity of traveling in a kayak', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('kayak', E'a light narrow canoe with a covering over the top', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('skydiving', E'a sport in which a person jumps from an aircraft and falls for as long as possible before opening a parachute', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('parachute', E'a piece of equipment made of a large piece of special cloth that is fastened to a person or thing that is dropped from an aircraft, in order to make him, her, or it fall slowly and safely to the ground', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('enroll', E'to put yourself or someone else onto the official list of members of a course, college, or group', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('camper', E'a person who stays in a tent or in a camp on vacation', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tent', E'a shelter made of canvas or a similar material and supported by poles and ropes, that you can fold up and carry with you', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('canvas', E'strong, rough cloth used for making tents, sails, bags, strong clothes, etc', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pole', E'a long, thin stick of wood or metal, often used standing straight up in the ground to support things', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tropical fish', E'Tropical fish are generally those fish found in aquatic tropical environments around the world', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tropical', E'from or relating to the area between the two tropics', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('boa constrictor', E'a large, strong snake, found in South and Central America, that kills animals and birds by wrapping itself around them and crushing them to death', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('staff', E'the group of people who work for an organization', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('chimpanzee', E'a small, very intelligent African ape with black or brown fur', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('snorkeling', E'the activity of swimming while using a snorkel', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('snorkel', E'a tube that you hold in your mouth to help you breathe if you are swimming with your face underwater', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('whomever', E'In formal language whoever is used as a subject and whomever is used as an object. Examples:\n- whoever wants a unique experience should try scuba diving in a coral reef.\n- I''ll take whomever the instruction chooses for my rockclimbing partner.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('equivalent to whichever', E'- whatever one\n- whatever ones', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('whichever examples', E'- For your birthday I''ll pay for kayaking or skydiving lessons. You can choose whichever you want.\n- I''ve packed three kinds of sandwiches for the picnic. Your friends can have whichever they want.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('out of touch', E'not informed or not having the same ideas as most of a certain group of people about something, so that you make mistakes. Example: A few of the older teachers are completely out of touch with their students.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('field (verb)', E'- to deal with a question, often by not answering it directly\n- to catch or pick up the ball after it has been hit in a game such as baseball, and to try to prevent the other team from scoring', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('depict', E'- represent by a drawing, painting, or another art form\n- portray in words; describe.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('peacock', E'- a large bird, the male of which has very long tail feathers that it can spread out to show bright colors and patterns shaped like eyes.\n- a man is who is very proud of his appearance and gives a lot of attention to his clothes and the way he dresses.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sly', E'deceiving people in a smart way in order to get what you want', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hairy', E'having a lot of hair, especially on parts of the body other than the head', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('playful', E'- funny and not serious\n- done as a form of play rather than intended seriously, or wanting to have a good time and not feeling serious', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('snail', E'a small creature with a soft, wet body and a round shell, that moves very slowly and often eats garden plants', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sloth', E'- a mammal that moves slowly and lives in trees\n- unwillingness to work or make any effort', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('vain', E'- unsuccessful; of no value\n- too proud of yourself, esp. in your appearance or achievements', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level9' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('first', E'coming before all others in order, time, amount, quality, or importance.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('first of all', E'before anything else', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('next', E'immediately following in time', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('second', E'(a person or thing) coming immediately after the first', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('third', E'(a person or thing) coming immediately after the second and before all others', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('furthermore', E'(used to add information) also and more importantly.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('in addition', E'signals that more information will be added to what has already been stated', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('in conclusion', E'signals the end of a presentation or essay', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('likewise', E'in the same way or manner; similarly', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('nevertheless', E'despite what has just been said or referred to', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('similarly', E'likewise, in the same way', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('yet', E'despite that', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('engaging', E'pleasant, attractive, and charming', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('speech', E'- the ability to talk\n- the activity of talking\n- a piece of spoken language', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('scholarship', E'- an amount of money given by a school, college, university, or other organization to pay for the studies of a person with great ability but little money\n- serious, detailed study', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('recipient', E'a person or organization that receives something, such as money, a prize, etc.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('designate', E'- to choose someone officially to do a particular job\n- to say officially that a place or thing has a particular character or purpose', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('impromptu', E'done or said without earlier planning or preparation. Example: an impromptu speech', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('homeowner', E'a person who owns their house or apartment', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('viewpoint', E'- a place from where a person can look at something, especially at an area of natural beauty\n- a point of view', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('do away with', E'- to put an end to. Destroy. Abolish. Discontinue.\n- murder', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('disservice', E'- an action that harms something or someone, or an unfair or harmful action. Example: Calling him a liar does him a great disservice.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('oneself', E'the reflexive form of the pronoun ''one'' when it refers to people in general or to the person speaking. Example: One has to learn to control oneself.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('short-sighted', E'- can only clearly see objects that are close to them\n- not thinking enough about how an action will affect the future', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('broaden', E'- to become wider, or to cause something to become wider\n- to make someone understand more and know more about different subjects, ideas, places, etc.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('passive voice', E'Focus on the receiver of the action making it the subject of the phrase.sentence. The agent that performs the action is omitted or followed by the ''by'' preposition and then the agent.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('passive voice common structure', E'<receiver> + <form_of_be> + <past_participle> + (by + <agent>)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example passive voice, simple present', E'steve jobs is remembered for his contributions to communications technologies.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example passive voice, present continuous', E'Many of his design innovations are still being imitated (by competitors)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example, passive voice, present perfect', E'business presentations have been forever transformed by his simple but engaging style', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example passive voice, simple past', E'Nelson Mandela was awarded the Nobel peace prize in 1993.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example passive voice, past continuous', E'Mandela''s fight was being kept alive (by activists) around the world.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example passive voice with ''going to''', E'Mandela is always going to be remembered for his great speeches.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Example passive voice with modals', E'Jobs will also be remembered as an inspiring public speaker', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example passive voice with past modals', E'no one should have been surprised.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('prize', E'something valuable, such as an amount of money, that is given to someone who succeeds in a competition or game or that is given to someone as a reward for doing very good work.\n- something important and valuable that is difficult to achieve or get.\n- to think that someone or something is very valuable or important.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('compliment', E'- a remark that expresses approval, admiration, or respect, or an action that expresses approval or respect.\n- to praise or express admiration for someone', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('overtake', E'to go beyond something by being a greater amount or degree, or to come from behind and move in front of (surpass)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('self-assurance', E'confidence that you have in your own abilities', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('acquainted', E'knowing or being familiar with a person', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bathtub', E'a long plastic, metal, or ceramic container that is filled with water so that you can sit or lie in it to wash your whole body', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('outline', E'- the main shape or edge of something, without any details\n- a description of the main facts about something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('slang', E'very informal language that is usually spoken rather than written, used especially by particular groups of people', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('variety', E'- the characteristic of often changing and being different\n- a different type of something\n- many different types of things or people', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('posture', E'- a particular position of a person''s shoulders, neck, and back, or a particular position in which someone stands, sits, etc\n- a way in which a government or other organization thinks about and/or deals with a particular matter.\n- to act falsely in order to attract attention or achieve an effect', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('quarter', E'one of four equal or almost equal parts of something; Â¼', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('four-fifth', E'four parts from a total of five, equivalent to 80%', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('anchor', E'- a heavy metal object, usually shaped like a cross with curved arms, on a strong rope or chain, that is dropped from a boat into the water to prevent the boat from moving away.\n- someone or something that gives support when needed.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('crib', E'- a small bed for a baby or young child with high bars around the sides so that the child cannot fall out.\n- a model of the people and animals present at the birth of Jesus Christ, used as a decoration at Christmas.\n- Someone''s crib is their home or the place where they are living at present.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bling', E'jewelry or decoration that attracts attention because it is very noticeable and looks expensive', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example of short answers with passive voice and modals', E'A: why wasn''t the author awarded the Nobel prize for literature?\nB: I don''t know, but he should have been (awarded the Nobel prize for literature)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('difference between get and be in passive voice', E'''Get'' can be used as an auxiliar verb in the passive voice, it represents a state of change, it''s meaning its similar to ''become''. On the other hand, ''be'' is used to talk about an unchanging state or a dynamic one.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example: difference between get and be in passive voice', E'- Natalie and Larry got married in 2006 (their wedding occurred in 2006)\n- Natalie and Larry were married in 2006 went they went to Greece (Their wedding may have occurred before 2006)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Expressions with get', E'these expressions represent a change of state, in this get has a similar meaning of ''become'': get acquainted, get arrested, get dressed, get excited, get married, and get scared.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('spell-check', E'a computer program that checks that the words in a document have the correct spellings', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('quantifier', E'a word or phrase that is used before a noun to show the amount of it that is being considered. Example: some, many, a lot of, a few, etc.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('quantifiers which are followed by singular verb', E'everyone, someone, anyone, no one, each+<noun>, every+<noun> are always followed by a singular verb ', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example: quantifiers which are followed by singular verb', E'- every variety is correct\n- no one expects email to be correct', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('singular verb', E'This is the form of the verb which follows a singular noun. In the verb to be is am/it/is, with other verbs is the <infinitive>+s', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('plural verbs', E'This is the form of the verb which follows a plural noun. In the verb to be is ''are'', with other verbs is just the <infinitive>', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('quantifiers for both singular and plural nouns', E'the next quantifiers can follow both plural and singular nouns: all (of), a lot of, lot of, plenty of, some (of), most (of), and also fractions.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('examples: quantifiers for both singular and plural nouns', E'- a lot of advanced grammar is complicated\n- most people don''t need to write well\n- three-quartes of email messages contain grammar errors', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('quantifiers usually used for plural nouns', E'The next quantifiers are mostly used for plural nouns, but sometimes in informal speech, they are also used for singular nouns: each of, every one of, none of, majority (of), minority (of).', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('examples: quantifiers usually used for plural nouns', E'- none of us has/have the right to correct other people''s grammar\n- the majority of teenagers use/uses too much slang\n- a minority of my friends care/cares about speaking correctly', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('knock', E'- strike a surface noisily to attract attention, especially when waiting to be let in through a door.\n- collide with (someone or something), giving them a hard blow.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('structure to shorten phrases in passive voice answers with modals', E'<noun> + <modal> + <have+be_form>/<be_form>', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('vintage', E'Of high quality and lasting value, or showing the best and most typical characteristics of a particular type of thing, especially from the past.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('jot down', E'Or jot <something> down, to write something quickly on a piece of paper so that you remember it', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('role-play', E'pretending to be someone else, especially as part of learning a new skill', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ornament', E'an object that is beautiful rather than useful', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('have a sharp tongue', E'to talk in a bitter, critical way', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('have a way with words', E'to have a talent for speaking well\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('love to hear oneself talk', E'to enjoy talking even if nobody is listening\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('stick to the point', E'to continue talking about a main idea\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('talk around a point', E'to talk about something without addressing it directly\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('talk behind someone''s back', E'to talk about a person, usually unkindly, without him or her knowing\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('talk someone into something', E'to convince a person to do something\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('talk someone''s ear off', E'to talk until the other person is tired of listening. example:\nA: Did you tell Lisa about our plans for her birthday?\nB: I tried to, but she just kept talking my ear off about her problems with her car.\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('to begin', E'to start, to open a presentation or essay\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('to sum up', E'to review, recap, or to close a presentation or essay\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('stick (verb)', E'- to cause something to become fixed, for example with glue or another similar substance\n- to put something somewhere, especially in a not very careful way', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('address', E'- to speak or write to someone\n- to give attention to or deal with a matter or problem\n- to write a name or address on an envelope or package', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rubbish', E'- waste material or things that are no longer wanted or needed. This is a British word (American alternative is trash)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('trash', E'Waste material or things that are no longer wanted or needed. This is an American word (the British version is rubbish)\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bin', E'a container for waste. It is a british word (the American version is can)', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('can (for trash)', E'or trash can, is a container for waste. It is an American word, the British alternative is bin.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('muster', E'to produce or encourage something such as an emotion or support. Example: The team will need all the strength they can muster to win this game', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('converse', E'- opposite\n- to have a conversation with someone', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('belongings', E'the things that a person owns, especially those that can be carried', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('mere', E'used to emphasize that something is not large or important', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('idiom', E'- a group of words in a fixed order that have a particular meaning that is different from the meanings of each word on its own\n- the style of expression in writing, speech, or music that is typical of a particular period, person, or group.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sharp', E'having a thin edge or point that can cut something or make a hole in something. Example: The point of this pencil isn''t sharp enough', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('harsh', E'- unpleasant, unkind, cruel, or more severe than is necessary\n- too strong, bright, loud, etc.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('thorny', E'A thorny problem or subject is difficult to deal with', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('speller', E'- a person who spells\n- a book for teaching spelling', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('in-law', E'a parent of your husband or wife or a member of his or her family', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('register', E'- to put information, especially your name, into an official list or record\n- a book or record containing a list of names', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('idiomatic', E'containing expressions that are natural and correct. She was born in Italy but her English is fluent and idiomatic.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('go back', E'to return to a place after you have been somewhere else, get back', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('get back', E'to return to a place after you have been somewhere else. Go back.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('one-sided', E'- If a competition is one-sided, one team or player is much better than the other:\n- only considering one opinion in an argument in a way that is unfair', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('quantifiers always used for plural nouns', E'a large, a small, a great', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example: quantifiers always used for plural nouns', E'A large number of students in my English class were absent on Friday', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('majority and minority as a unit', E'when majority and minority act as a unit then they use a singular verb.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('examples: majority and minority as a unit', E'- all students can express their opinion, but the majority rules\n- In the United States, Spanish speakers constitute a linguistic minority ', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('majority and minority as independent elements', E'When we talk about the majority or minority to talk about the independent behavior of each element, then we use a plural verb', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example: majority and minority as independent elements', E'- If you talk to my father about young people today, he''ll tell you that the majority are slackers\n- of people who are concerned with using language correctly, only a small minority are linguistics', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('constitute', E'- to be or be considered as something. Example: This latest defeat constitutes a major setback for the Democrats.\n- to form or make something. Example: Women constitute about ten percent of Congress.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('setback', E'something that happens that delays or prevents a process from developing', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('slacker', E'a person who avoids work or effort. Lazy.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assert', E'state a fact or belief confidently and forcefully.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('convenience store', E'a shop that sells food, drinks, etc. and is usually open until late', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('convenience', E'the state of being convenient. Example: I like the convenience of living close to work.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('counter', E'a long, flat, narrow surface or table in a store, bank, restaurant, etc. at which people are served. Example: There was nobody behind/at the counter when I went into the bank, and I had to wait to be served.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('slide', E'- to (cause to) move easily and without interruption over a surface\n- to go into a worse state, often through lack of control or care\n- a small piece of photographic film in a frame that, when light is passed through it, shows a larger image on a screen or plain surface', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('slide presentation', E'A slide show is a presentation of a series of still images on a projection screen or electronic display device, typically in a prearranged sequence. In this context, a slide is one of the screens in a presentation (= a talk that uses images and texts to give information) created on a computer', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('divert', E'- to cause something or someone to change direction\n- to take someone''s attention away from something\n- amuse', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hand (something) out', E'to give something to each person in a group or place. Example: The teacher asked her to hand out the worksheets.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('storytelling', E'- the activity of writing, telling, or reading stories\n- the art of telling stories', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bullet', E'a small, metal object that is shot from a gun', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bullet point', E'a symbol, often a small, black circle, used in text to show separate things in a list', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('handout', E'a document given to students or reporters that contains information about a particular subject', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('oil drill', E'- Also known as oil well. It is a hole that is made in the ground so that oil can be taken out of it\n- make an oil drill', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Having a way with words', E' have a talent for using language in a charming, eloquent, effective or persuasive manner.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level10' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('easygoing', E'able to stay calm about things that anger or worry most people', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('absent-minded', E'forgetful and distracted', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cold-blooded', E'very cruel and heartless\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('cold-hearted', E'uncaring or unkind\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('coolheaded', E'calm and unexcitable\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('empty-headed', E'silly and brainless; forgetful\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hardheaded', E'stubborn and unyielding\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hard-hearted', E'insensitive and uncaring\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hot-blooded', E'overly excitable and impulsive, easily upset by things\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hotheaded', E'quick to anger or act without thinking\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('narrow-minded', E'intolerant and disapproving\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('openhearted', E'kind, loving, and honest\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('open-minded', E'tolerant and unbiased\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('soft-hearted', E'kind and often feeling sympathy for other people\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('warm-blooded', E'impulsive and easily excited by things', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('warm-hearted', E'sweet and loving\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('epoch', E'a long period of time, especially one in which there are new developments and great change', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('eye (verb)', E'to look at someone or something with interest. Example: I could see her eyeing my lunch.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hyphen', E'the symbol -, used to join two words together, or to show that a word has been divided into two parts at the end of one line and the beginning of the next', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hyphenated', E'written with a hyphen', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('set up', E'- organize or plan something\n- make something ready to use\n- start something like a business\n- build something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('uncaring', E'not worrying about other people''s troubles or doing anything to help them', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('unyielding', E'completely unwilling to change a decision, opinion, demand, etc.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('biased', E'showing an unreasonable preference or dislike based on personal opinion', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('unbiased', E'able to judge fairly because you are not influenced by your own opinion', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('excitable', E'easily and often becoming excited', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('unexcitable', E'antonym of excitable', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('scramble', E'- to move or climb quickly but with difficulty, often using your hands to help you\n- to compete with other people for something there is very little of', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('wizardry', E'- smart or surprising ways of doing things, especially with special machines\n- the skill of a wizard', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('live off', E'to use someone or something to provide the money or food that you need to live. Example: All his life he had lived off his father.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('everybody', E'synonym of everyone', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('compound adjectives', E'are modifying phrases made up of two or more words. They can be joined by a hyphen, appear as a single word, or appear as two separate words.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('compound adjective pattern: <adjective>+<noun>+<-ed>', E'When preceding a noun, these compounds are usually written with a hyphen unless they are one word. Examples: absent-minded, high-spirited, long-winded, soft-hearted.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('compound adjective pattern: <adverb>+<past-participle> ', E'compounds with adverbs ending with ly are never hyphenated. Other adverbs are usually hyphenated before but not after the noun. Examples: much-loved, well-dressed, highly-acclaimed, widely respected.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('compound adjective pattern: <noun>+<gerund verb>', E'When preceding a noun, these compounds adjectives are usually written with a hyphen unless they are one word. Examples: easygoing, forward-thinking, thought-provoking.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('epoch-making', E'having a big impact in a long period of time', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('far-reaching', E'has a great influence on many people or things', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('blue-eyed', E'having blue eyes', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('brown-haired', E'having brown haired', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('well-known', E'known or recognized by many people', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('well-received', E'favorably regarded or reviewed; cordially welcomed or greeted', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('kind-hearted', E' is one who likes other people a lot and always wants to help them', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hard-driving', E'intensely ambitious, energetic, or hardworking.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('underprivileged', E'without the money, possessions, education, opportunities, etc. that the average person has', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('made up', E'wearing makeup', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('charity', E'a system of giving money, food, or help free to those who are in need because they are sick, poor, or have no home, or any organization that has the purpose of providing money or helping in this way', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('overly', E'too; very. Example: Earlier sales forecasts were overly optimistic.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('winded', E'temporarily unable to breathe, either when hit in the stomach or after taking hard physical exercise', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('frost', E'- the thin, white layer of ice that forms when the air temperature is below the freezing point of water, especially outside at night\n- a weather condition in which the air temperature falls below the freezing point of water, especially outside at night\n- to become covered in frost', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('store-bought', E'Food which is is bought in a store and not made at home', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('crises', E'plural of crisis', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('self-esteem', E'belief and confidence in your own ability and value', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('risk-taking', E'the activity of taking risks in order to start a company, increase profits, etc', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('lifelong', E'lasting for the whole of a person''s life. Example: She was a lifelong member of the Labour party.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('best-looking', E'Superlative form of good-looking', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('hardest-working', E'superlative of hard-working', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('awe-inspiring', E'causing you to feel great respect or admiration', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('thirst-quenching', E'A drink which stops you feeling thirsty', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('quench', E'- to drink liquid so that you stop being thirsty. Example: When it''s hot, it''s best to quench your thirst with water.\n- to use water to put out a fire\n- to satisfy a need or wish', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('well-defined', E'clearly expressed, explained, or described', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bad-intentioned', E'Having bad intentions; malevolent; ill-intentioned', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('good-looking', E'A man or woman who is physically attractive', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('awestruck', E'- filled with feelings of admiration or respect\n- amazed', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('frostbitten', E'having an injury caused by severe cold, usually to your toes, fingers, ears, or nose', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('handwritten', E'written using your hand rather than printed by a machine', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('homemade', E'made at home and not bought from a store', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('watterlogged', E'- (of land) full of water and almost covered by a layer of it:\n- (of a boat) full of water and therefore unable to keep moving or floating', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bloodstained', E'- with marks of blood on it or in it\n- responsible for the death or injury of many people, often in a cruel way', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('handmade', E'made using the hands rather than a machine', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('heartbroken', E'feeling very sad or disappointed', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('moth', E'an insect with wings that is similar to a butterfly, usually flies at night, and is attracted to light', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('moth-eaten', E'If clothing or furniture is moth-eaten, it looks old and has holes in it', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('sunburned', E'Sunburned skin has become red and sore by being in the strong heat of the sun for too long, or is very suntanned', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('suntanned', E'having pleasantly brown skin caused by being in hot sun', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('windswept', E'- (of places) open to and not protected from strong winds \n- having hair that is messy because it has been blown in different directions by the wind', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('airborne', E'in the air, or carried by air or wind or by an aircraft', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('barefooted', E'not wearing any shoes or socks', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('downhearted', E'unhappy and having no hope, especially because of a disappointment or failure', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('lightweight', E'weighing only a little or less than average:', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('painstaking', E'extremely careful and correct, and involving a lot of effort', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('airsick', E'having the feeling that you will vomit because of the movement of an aircraft you are traveling in', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('daylong', E'lasting a whole day', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('newfound', E'- only recently happening, discovered, or beginning to exist. Example: Scientists believe the newfound planets are mostly solid.\n- a newfound quality or ability has started recently. Example: This success is a reflection of their newfound confidence.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('seaworthy', E'the state when a ship is in a good enough condition to travel safely on the sea', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('forward-looking', E'Someone who plans for the future.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('examples compund adjectives: <noun>+<past participle>', E'awestruck. frostbitten, handwritten, homemade, store-bought, waterlogged, blood-stained, handmade, heartbroken, moth-eaten, sunburned, windswept', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('examples: compound one word adjectives', E'airborne, barefooted, downhearted, lightweight, painstaking, airsick, daylong, hardheaded, newfound, seaworthy', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('compound adjectives with more and less', E'compound adjectives with more and less don''t use the hyphen. Examples: \n- a more forward-looking plan\n- a less easygoing person\n- a more highly trained applicant', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('superlative compound adjectives', E'Follows the same hyphenations rules of the other compound adjectives. Usually, this adjectives use most and least.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('phrases with superlative compound adjectives', E'- I''m not the most easily impressed person\n- Tonya is the most easygoing person in our family\n- He''s the least narrow-minded man I know', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('superlatives from comparatives of one or two syllables', E'When the comparative has one or two syllables, you can add the ''the'' and then use the superlative form. Examples:\n- He is the hardest-working man I know\n- they may not be the smartest or the best-looking people in the world ', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('superlatives after be and without noun', E'After the verb to be, the superlative compound adjective can occur without the noun. Example:\n- Of all the men I know, he''s the hardest working ', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('syllable', E'a single unit of speech, either a whole word or one of the parts into which a word can be separated, usually containing a vowel', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('make <something> up', E'compensate for something lost, missed, or deficient. Example: I''ll make up the time tomorrow', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('long-winded', E'A long-winded speech, letter, article, etc. is too long, or uses too many words.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tender-hearted', E'very kind and showing a lot of sympathy', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('rule superlatives least and most', E'use ''least'' and ''most'' for superlative which has more than two syllables or with adjectives of one-two syllables if they finished in any of the next: ed-ly-ing-sh-w', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('check on', E'to make sure that someone or something is all right', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('face up to', E'to confront', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('get through', E'to reach the end or finish something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('live up to', E'to achieve what is expected', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('look after', E'to take care of', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('look to', E'to rely on, to seek guidance from', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('side with', E'to defend or support; to take someone''s side in a disagreement', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('take after', E'to resemble someone (an older relative) in looks and character', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pick up', E'- to increase or improve\n- to answer the phone', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('wrong (verb)', E'to treat someone in an unfair or unacceptable way', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('chore', E'a job or piece of work that is often boring or unpleasant but needs to be done regularly. Example: I find writing reports a real chore (= very boring).', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('nongovernmental', E'not part of or controlled by the government', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('compelled', E'having to do something, because you are forced to or feel it is necessary', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('dogged', E'very determined to do something, even if it is very difficult', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('assessment', E' the act of judging or deciding the amount, value, quality, or importance of something, or the judgment or decision that is made. Example: Would you say that is a fair assessment of the situation?', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('crowd out', E'to not allow a person or thing any space or opportunity to grow or develop. Example: Small local businesses have been crowded out by large multinationals.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('chief', E'- most important or main\n- highest in rank', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('go on', E'- to continue\n- to move to the next thing or stage\n- to happen', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('well-loved', E'loved by many people; very popular.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('bad-tempered', E'A person that becomes angry and annoyed easily', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('much-honored', E'very well privileged by', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('far-flung', E'used to refer to places that are a great distance away, or something that is spread over a very large area. Example: She has traveled to the most far-flung corners of the world.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fling', E'to throw something or someone suddenly and with a lot of force', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('flung', E'past of fling', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('broad-minded', E'willing to accept other people''s behavior and beliefs, especially sexual behavior', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('well-read', E'Someone who has learned a lot of information on different subjects by reading.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('low-lying', E'A land that is at or near sea level', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('self-doubt', E'a feeling of having no confidence in your abilities and decisions', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('irregular adjectives/adverbs in compound adjectives', E'When irregular adjectives/adverbs are used in compound adjectives they keep their irregular behavior. ', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('irregular adjectives that keep irregular in compound adjectives', E'adjectives: good, bad, far\ncomparatives: better, worse, farther/further\nsuperlative: best, worst, farthest/furthest', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('irregular adverbs that keep irregular in compound adjectives', E'adverb: well, badly, little, much, far\ncomparative: better, worse, less (lesser), more, farther/further\nsuperlative: best, worst, least, most, farthest/furthest', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('superlative adjectives preceded by a noun', E'When preceded by a noun, don''t use ''the'' in the superlative. Example: Venezuela''s best-known poet will be reading one of his works at the public library this week.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('irregular adjective good', E'comparative: better\nsuperlative: best', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('irregular adjective bad', E'comparative: worse\nsuperlative: worst', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('irregular adjective/adverb far', E'comparative: farther/further\nsuperlative: farthest/furthest', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('irregular adverb well', E'comparative: better\nsuperlative: best', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('irregular adverb badly', E'comparative: worse\nsuperlative: worst', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('irregular adverb little', E'comparative: less (lesser)\nsuperlative: least', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('irregular adverb much', E'comparative: more\nsuperlative: most', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('describing what something means', E'- what this means to me is that\n- my understanding of this is that\n- I interpret this to mean', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('outspoken', E'frank in stating one''s opinions, especially if they are shocking or controversial.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pledge', E'- a serious or formal promise, especially one to give money or to be a friend, or something that you give as a sign that you will keep a promise.\n- to make a serious or formal promise to give or do something.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pediatrician', E'a doctor who has special training in medical care for children', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('self-critical', E'critical of oneself or one''s actions in a self-aware or unduly disapproving manner.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('unduly', E'more than is necessary, acceptable, or reasonable', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('point out', E'to tell someone about some information, often because you believe they do not know it or have forgotten it. Example: I feel I should point out how dangerous it is.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('smooth-spoken', E'expressing yourself readily, clearly, effectively. Eloquent.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('smooth', E'- happening without any sudden changes, interruption, or difficulty\n- having a surface or consisting of a substance that is perfectly regular and has no holes, lumps, or areas that rise or fall suddenly', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('well-spoken', E'having a pleasant and polite way of speaking that is considered socially acceptable', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('silver-tongued', E'If you are silver-tongued, you are good at persuading people to do things', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level11' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('work against', E'to work to stop or to prevent', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('work around', E'to work while avoiding a difficulty', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('work for', E'to be employed by', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('work off', E'to work in order to eliminate', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('work on', E'to apply effort to', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('work toward', E'to work in order to achieve', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('impoverish', E'- to make someone very poor\n- to make something weaker or worse in quality', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('branded', E'- made by a particular company and sold under a particular name\n- branded products have their company''s brand name on them, rather than being sold under a store''s name or under the product''s own name', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('purse', E'- a handbag\n- the total amount of money that an organization or government has available for spending', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('handbag', E'a small bag for money, keys, makeup, etc., carried especially by women', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('wastebasket', E'an open container that stands on the floor inside buildings and is used for putting trash in, especially paper', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pad', E'- a piece of soft, thick cloth or rubber, used to protect a part of the body, give shape to something, or clean something\n- a number of pieces of paper that have been fastened together along one side, used for writing or drawing on', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pen', E'a long, thin object used for writing or drawing with ink', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('holder', E'- a device for putting objects in or for keeping them in place\n- someone who officially owns something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('slow down', E'To be less active and relax more. Example: The doctor has told him to slow down or he''ll have a heart attack.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('endeavor', E'- (verb)to try to do something\n- (noun)an attempt to do something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('contraction', E'- the fact of something becoming smaller or shorter\n- the fact of becoming less in amount or quantity:', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('loan', E'- (noun) an amount of money that is borrowed, often from a bank, and has to be paid back, usually together with an extra amount of money that you have to pay as a charge for borrowing\n- (noun) an act of borrowing or lending something\n- to lend', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('heading', E'words written or printed at the top of a text as a title', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('stationery', E'materials needed for writing, such as paper, envelopes, pens, etc. Example: The company realized it was spending too much on stationery', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('inside address', E' the receiver''s address', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('addressee', E'a person whose name or address is written on a letter or package', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('greeting', E'something friendly or polite that you say or do when you meet or welcome someone', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('closing', E'coming near the end of a speech, event, activity, etc.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('homestay', E'a type of vacation or visit in which you stay in the home of a person you do not know. Example: They offer Spanish courses for $2,500 including tuition, activities, and homestay.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tuition', E'- the money paid for being taught, esp. at a college or university\n- the activity of teaching, especially to small groups of students', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('body (letter)', E'contains the message', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('formal letter components', E'heading, inside address, greeting, body and closing', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('subject-verb inversion in positive conditional', E'you can replace: if <noun> had\nwith: had <noun>', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('subject-verb inversion in negative conditional', E'replace: if <noun> hadn''t\nwith: had <noun> not', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('subject-verb inversion in present/future conditional', E'You can just replace ''if'' with ''should''\nreplace: if <noun> <verb>\nwith: should <noun> <base_form_verb>', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example subject-verb inversion in positive conditional', E'normal: if they had been unable to work together, the search engine might never have been created.\nsubject-verb inversion: had they been unable to work together, the search engine might never have been created.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example subject-verb inversion in negative conditional', E'normal: if this company hadn''t created hello kitty, It wouldn''t have become nearly so successful\nsubject-verb inversion: had this company not created hello kitty, It wouldn''t have become nearly so successful.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example subject-verb inversion in present/future conditional', E'normal: if you want to buy natural skincare products, this company offers over 1200 choices.\nsubject-verb inversion: should you want to buy natural skincare products, this company offers over 1200 choices.\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('pay off', E'to result in success. Example: All her hard work paid off in the end, and she finally passed the final exam.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('skincare', E'Things that you do and use to keep your skin healthy and attractive. Example: Spending on hair care and skincare grew 42 percent.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Juggle', E'to throw several objects up into the air, and then catch and throw them up repeatedly so that one or more stays in the air, usually in order to entertain people', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('investor', E'a person who puts money into something in order to make a profit or get an advantage', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('Subjunctive', E'in some languages, a verb form that refers to actions that are possibilities rather than facts. Example: In the sentence ''I wish I were rich'', the verb ''were'' is in the subjunctive', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('swamp', E'- (an area of) very wet, soft land\n- to cover a place or thing with a large amount of water', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('speak out', E'to say in public what you think about something such as a law or an official plan or action', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('stock', E'- the total amount of goods or the amount of a particular type of goods available in a shop\n- the amount of money that a company has through selling shares to people\n- part of the ownership of a company that can be bought by members of the public', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('workspace', E'the office, desk, etc. where someone works', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('long-term', E'continuing a long time into the future. Example: long-term unemployment.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('whether', E'- (used especially in reporting questions and expressing doubts) if, or not\n- (used to introduce two or more possibilities) it is not important if', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('high-paying', E'(of a job) providing a high wage. Example: high-paying technology jobs.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('verb in present/future subject-verb inversion', E'When using the subject-verb inversion the verb should use its base form', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example verb in present/future subject-verb inversion', E'normal: If you''RE looking for a competent employee, Ted is your man.\nsubject-verb inversion: should you be looking for a competent employee, Ted is your man.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('subject-verb inversion with could/might', E'replace if <noun> <could/might> <verb>\nwith: <could/might> <noun> (just/but) <verb>', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example subject-verb inversion with could/might', E'- could he but win her love, the world would be his\n- might I just see my country once more, my heart would find peace', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('subject-verb inversion with were', E'Use it for unreal hypothetical situations\nreplace: if <noun> <past_verb>\nwith: were <noun> <infinitive_verb>', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example subject-verb inversion with were', E'normal: if she found enough investors, she could form a startup company\nsubject-verb inversion: were she to find enough investors, she could form a startup company\nnormal: if she had been wealthy, she might not have gone into business.\nsubject-verb inversion: were she to have been wealthy, she might not have gone into business.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('share (business)', E'one of the equal parts that the ownership of a company is divided into, and that can be bought by members of the public. Example: The value of my shares has risen/fallen by eight percent.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('useful expresions for expressing suspicion', E'- that''s a little hard to believe\n- it sounds fishy to me\n- it sounds too good to be true\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('conditional with <provided (that)>/<on the condition (that)>', E'Use <provided (that)>/<on the condition (that)> to express a condition on which another situation depends.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('examples conditional with <provided that>/<on the condition that>', E'- I would take almost any job provided that there were opportunities to learn\n- I would only take a job on the condition that it offered long-term security', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('conditional with <whether or not>', E'use <whether or not> to introduce a condition that doesn''t influence another situation ', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example conditional with <whether or not>', E'I would quit a job that required me to be dishonest, whether or not it were high paying.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('conditional with <assuming (that)> ', E'Use <assuming (that)> to introduce an assumption upon which another condition depends.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example conditional with <assuming (that)>', E'I wouldn''t mind working in an office, assuming that I had the freedom to be creative.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('conditional with <supposing (that)>', E'Use <supposing (that)> to introduce a possible condition that could influence another situation', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example conditional with <supposing (that)>', E'Supposing I had the choice, I would prefer to work with a group rather than by myself.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('veto', E'- the power to refuse to allow something to be done, or such a refusal\n- to refuse to allow something', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('be adaptable', E'to be able to change your behavior or plans in order to handle new situations\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('be conscientious', E'to do things carefully and correctly\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('be innovative', E'to think of new ideas and new ways of doing things\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('be optimistic', E'to be hopeful and have a positive attitude\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('be trustworthy', E'to be honest, reliable, and dependable\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('have charisma', E'to be able to influence and inspire people\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('have good communication skills', E'to be able to express yourself clearly\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('have influence', E'to be able to have an effect\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('have initiative', E'to be able to begin or take action\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('have leadership ability', E'to be able to lead people\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('have self-discipline', E'to be able to manage yourself in order to complete tasks and achieve goals\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('have specialized training', E'to have learned specialized skills through training\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('workshop', E'- a room or building where things are made or repaired using machines and/or tools\n- a meeting of people to discuss and/or perform practical work in a subject or activity', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('trustworthy', E'deserving of trust, or able to be trusted', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('charisma', E'- a special power that some people have naturally that makes them able to influence other people and attract their attention and admiration.\n- the ability to attract the attention and admiration of others, and to be seen as a leader.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('conscientious', E'feeling a moral responsibility to do your work carefully and to be fair to others', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('strive', E'to try very hard to do something or to make something happen, especially for a long time or against difficulties', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('get along', E'Be friendly with to other', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('temperament', E'- the part of your character that affects your moods and the way you behave\n- the emotional character or state of mind of people or animals, as shown in their behavior', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('close-knit', E'involving groups of people in which everyone supports each other. Example: a close-knit family/community', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('memo', E'a message or other information in writing sent by one person or department to another in the same business organization.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('self-confidence', E'the belief that you can do things well and that other people respect you', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('self-control', E'the ability to control your emotions and actions', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('two options with whether or not', E'you can either use: whether or not <condition>, <consequence>\nor you can either use: whether <condition> or not, <consequence>', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example two options with whether or not', E'option 1: whether or not it involves travel, I''m going to have to take this job\noption 2: whether it involves travel or not, I''m going to have to take this job', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('conditional with: even if', E'You can use ''even if'' in the same way of ''whether or not'', therefore to explain a consequence doesn''t depend of the condition. It frequently use still in the next way:\n<noun> (be_verb) still <condition>, even if <consequence>', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example conditional with: even if', E'I''m (still) going to call in sick tomorrow even if I''m not actually sick', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('call in sick', E'you telephone to say that you are unable to work because of illness.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('call in', E'- phone to inform or request\n- to telephone the place you work\n- You can also call in to a radio or television program or to an organization asking for information from the public', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('conditional with: if only', E'Use if only to introduce a condition that the speaker strongly wishes to be true', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example conditional with: if only', E'If only I had known about that job opening, I would have applied for it immediately', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('conditional with (just) in case', E'you can replace if with ''(just) in case'', which is more informal.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example conditional with (just) in case', E'Here''s a number to call just in case the copy machine breaks down', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('conditional with ''in the event (that)''', E'you can replace if with ''in the event (that)'', which is more formal.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('example conditional with ''in the event (that)''', E'In the event that a replacement cannot be found, you''ll have to take on extra responsabilities.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('break down', E'If a machine or vehicle breaks down, it stops working', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('take on <something>', E'to begin to have a particular quality. Example: Her voice took on a troubled tone', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('fall into', E'to start/become by chance, without previous preparation. Example: We''ve fallen into the habit of getting up late on Saturday mornings.', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('tie (someone/something) down', E'to hold someone or something in place with ropes\n', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('integrity', E'the quality of being honest and having strong moral principles that you refuse to change', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('chew', E'to crush food into smaller, softer pieces with the teeth so that it can be swallowed', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('gum', E'- a type of glue used for sticking together pieces of paper\n- a soft sweet that you crush with your teeth but do not swallow', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('interviewee', E'the person who answers the questions during an interview', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('demonstrate', E'to show or make something clear', NOW(), NOW(), (select id from users where email='smart' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='level12' and u0.email='smart' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãã¯ãããããã¾ã ', E'Good morning', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä»æ¥', E'today', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä½¿ã£ã¦', E'use', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å', E'light', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç©ã', E'dazzling, pretty, cute', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ', E'moon, month', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¥', E'day', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åææ¥', E'saturday', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ', E'time', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãé¡ããã¾ã', E'please', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¨æ¥', E'yesterday', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä½æ¥­', E'work, operation, manufacturing', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¹ã¯ã¼ã«', E'school', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ææ¥­', E'class', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èª²é¡', E'task, subject, theme', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è±å«', E'bride', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('äº', E'five', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å', E'minute, part', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å«', E'daughter-in-law', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è±', E'flower', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èä¸­', E'back', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ ç»', E'movie', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¢ãã¡', E'anime', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ°ã«ãªã£ã', E'I am curious', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ­ãæ', E'singer', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é­å¥³', E'witch', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ', E'journey', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä½è¦ããããª', E'what should I see?', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åã', E'movement', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¾ãã', E'roll', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¥½ã', E'like', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä¸­', E'medium', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã²ã¼ã ', E'game', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èå³', E'interest', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('äºº', E'person, human being', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä¿º', E'I', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åé', E'friend', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¥æ¬èª', E'Japanese language', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¿é ', E'mandatory', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç§ç®', E'subject', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¹´', E'year', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é«æ ¡', E'high school', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åå¼·', E'study', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¤ã³ããã·ã¢', E'indonesia', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¤§å­¦', E'university', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¼«ç»', E'comic', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãã©ã', E'drama, TV drama, teledrama, play', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è¦ã¦', E'look', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èª­ãã§', E'read', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å°èª¬', E'novel', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ææ', E'love, love-making, passion, emotion, affections', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä¸ç', E'world', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç°ä¸ç', E'another world', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è¨ã', E'tell, say, remark', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æé«', E'best', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãããã¨ããããã¾ã', E'thank you', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('éä¿¡', E'delivery, transmission', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¯æã', E'cute', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å®æ³', E'the real condition', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã³ã¹ãã¬', E'cosplay', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã©ã¤ã', E' live (esp. concert, show, etc.); live performance', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è² åµ', E'liabilities, debts, duty', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç½', E'(noun) white', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç½ã', E'(adjective) white', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é»ã', E'(adjective) black', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é»', E'(noun) black', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¬²æ ', E'desire, appetite', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES (' å¸æ', E'hope, wish, aspiration', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('äººç', E'life', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('çµãã', E'the end', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¯ã­ãã¯ã«', E'chronicle', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¬ãã', E'happy', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¨ãããã', E'for the time being', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æãã¾ã', E'think', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¯å­', E'son', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç§', E'I', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åå', E'name', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è¦ãã¦', E'remember', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è±èª', E'english', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åãããªã', E'I do not understand', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãã©', E'but', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¤å½äºº', E'foreign-country person', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¤äºº', E'outsider, alien', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¤å½', E'foreign country or foreign countries', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ°ããã', E'feel, have a hunch', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å®å®äºº', E'alien', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å®å®', E'space, universe', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç¼', E'wolf', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¨ãã§ããªã', E'no way, hell no, not at all', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¬å½ã«', E'really', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è', E'grass', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èªçæ¥', E'birthday', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æã', E'feeling, sense, impression', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¾æ¥', E'at a later date', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä»å­£', E'this season', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä»æ', E'this term', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ©ã', E'quickly', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¹ãã¾ãã¦', E'once again', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è¯ã', E'good', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ²', E'song', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('äººé', E'human', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èªå', E'myself', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä¼¼ã', E'alike, similar', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æã', E'most, the most', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æµæ¾å¿', E'hostility', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ææ¥', E'tomorrow', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¾é', E'broadcast', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãæä¼ã', E'help', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¥ã¦', E'come', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¥½ã', E'fun', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ', E'clothes', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä»å', E'this time', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å°ã', E'a little', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä¸æ', E'good, proficient', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ããã¦', E'and', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æå¾', E'last', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ©é', E'evening drink, supper', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä¸æã', E'good, clever, skillful', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãå§«æ§', E'princess', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãæ©å«ã ã£ã', E'I was in a good mood, I was happy', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('çµå§', E'from beginning to end', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¤ã³ã¿ã¼ããã', E'internet', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å£®çµ¶ãª', E'spectacular', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ­»é', E'deathfight', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãç²ãæ§ã§ãã', E'thank you for your hard work', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç²ã', E'tired', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è¶é£ã', E'super difficult', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è²ã', E'various', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('çªæ', E'assault (noun)', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¤ãã£ã¦', E'changed', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä¸­èº«', E'content', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç©ºã£ã½', E'empty', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¯ãªã', E'not sleeping', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä¸ç·ã«', E'together', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¯ãã', E'let''s sleep', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ', E'morning', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãããã¿', E'good night', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æãã¦', E'teach me', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('çé¢', E'hospital', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¥ãã§', E'quickly', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å­£ç¯', E'season', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãè¹', E'stomach', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å', E'rabbit', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ°ããª', E'new', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ', E'village', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('çºè¦ãã', E'discovered', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å»æ', E'abandoned village', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('éè«', E'chat', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æè¿', E'recently', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åºæ¥äº', E'event', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãããã', E'lots', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç­ã', E'answer', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('éã£ã¦ã', E'drunk', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æç', E'term student, Graduating class', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã³ã©ã', E'collaboration', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãµã ã', E'thumbnail, a miniature image', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ï¼é±é', E'1 week', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãä¼ã¿', E'good night', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä¸æ¥', E'one day', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç«ææ¥', E'tuesday', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãç¥ãã', E'notice', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¥å¹´', E'next year', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å', E'first', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('éå¬', E'held', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ±ºå®ãã¾ãã', E'decided', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¹´å', E'within the year', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç®æ¨', E'target', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¤¢', E'dream', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ°´æé¤¨', E'aquarium', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã©ãã©ã', E'more and more', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å', E'you', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èª¿å­', E'condition', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æª', E'evil', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¡ã³ãã¼', E'member', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('éå®', E'limited, only', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãªã³ã©ã¤ã³', E'online', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('éã¹ã', E'can play', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èã', E'thoughts', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä»®ç ', E'nap', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ°åã', E'spirit', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç©èª', E'story', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è¶ãã¦', E'beyond', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åè¼©', E'senior', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ°è¡£è£', E'new costume', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ããã§ã¨ããããã¾ã', E'congratulations', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¥½æ²', E'musical composure, tune', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è¶æå', E'super famous', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æå', E'famous', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¬²ãã', E'want', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å ´å', E'if, case', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¬¡', E'next', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è¡ã', E'go', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ°å¤ã', E'in great number', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ°', E'number, amount', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¤ã', E'many', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è¨ºå¯', E'medical examination', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åç¥', E'announcement', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¤§ä½', E'approximately', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æé', E'time', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¯è¼', E'comparison', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¾æ©', E'wait, stand-by', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å ´æ', E'place', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¤§äº', E'important', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¿ç', E'severe pain', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ææ¢ãã¦', E'be patient', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å£°', E'voice', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å®£ä¼', E'promotion, propaganda', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¥å', E'urgent recruitment', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç¯äºº', E'criminal', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãé£¯', E'cooked rice, meal', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é£ã¹ã¦', E'eat', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åã', E'great, amazing', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä½æ', E'what time?', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç«ã¦', E'stand-up', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãªããã¾ãã', E'I fixed it', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ®ã£ã¦', E'take', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åç', E'photo', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('éå', E'motion, exercise', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãè¹ç©ºãã', E'I''m hungry', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èå¥®', E'excitement', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æå', E'impressed', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ææ', E'emotions', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æºå', E'preparation', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è²¢ç®', E'contribution', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é·æé', E'for a long time', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç', E'all', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('éåä¼', E'sports day', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é¢ç½ã', E'interesting', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¿ããª', E'everyone', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é', E'limit', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ©ã¿', E'trouble', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç¸è«', E'consultation', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã ã£ãã', E'if so', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã©ã£ã¡', E'which', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç«', E'cat', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãé¢¨å', E'bath', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¸¡ã', E'pass over, hand over, transfer', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èãã¦', E'listen', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('çä»ã', E'clean up', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æä¼ã£ã¦', E'help me', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ°å±', E'new house', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å®¶å·', E'furniture', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è²·ãç©', E'shopping', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãã£ã¡ã', E'very, truly', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('éã', E'late', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èµ·ãã¦ãã¾ã£ã', E'I got up', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¤ãã«', E'finally', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä¸', E'ten thousand', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãã£ã³ãã«', E'channel', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç»é²', E'registration', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ããã¨ã', E'or', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ããªã', E'not comming', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¯è²', E'scenery; scene; landscape', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãµã¡', E'shark', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é å¼µã£ã¦', E'good luck', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æªé­', E'devil', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãªã¿ã¯', E'geek, freak', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¹»è¦', E'hallucination', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã ã³ ã¹', E'dance', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æææ¥', E'monday', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ããã«', E'hotel', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è¿ãã', E'welcome, receive, meet', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('éã', E'too much', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¾ã£ãã', E'relax', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¨å¹´', E'anniversary', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é£çµ¡', E'contact', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åã£ã¦', E'take', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åå', E'half, half minute', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('çªå¥', E'rush', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãã£ãã', E'comfortable', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é²ãã', E'advance', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åæ¥', E'the other day', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¬é', E'release', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãªãªã¸ãã«', E'original', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¤ã©ã¹ã', E'illustration', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æã', E'draw', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='translation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä»æ¥', E'KyÅ', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä½¿ã£ã¦', E'Tsukatte', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãã¯ãããããã¾ã ', E'OhayÅgozaimasu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å', E'hikari', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç©ã', E'Mabayui', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ', E'Tsuki, getsu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¥', E'Hi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åææ¥ ', E'DoyÅbi\n', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ', E'Toki', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãé¡ããã¾ã ', E'Onegaishimasu\n', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¨æ¥', E'KinÅ', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä½æ¥­', E'SagyÅ', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¹ã¯ã¼ã«', E'SukÅ«ru', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ææ¥­', E'JugyÅ', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è±å«', E'Hanayome', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('äº', E'Go', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å', E'Bun, pun', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å«', E'Yome', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è±', E'Hana', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èª²é¡', E'kadai', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èä¸­', E'Senaka', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ ç»', E'eiga', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¢ãã¡', E'anime', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ°ã«ãªã£ã', E'ki ni natta', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ­ãæ', E'utaite', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é­å¥³', E'majo', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ', E'tabi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä½è¦ããããª', E'nani miyou kana?', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åã', E'ugoki', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¾ãã', E'makuri', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¥½ã', E'suki', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä¸­', E'naka', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã²ã¼ã ', E'GÄmu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èå³', E'KyÅmi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('äºº', E'hito', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä¿º', E'ore', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åé', E'tomodachi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¥æ¬èª', E'nihongo', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¿é ', E'hissu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç§ç®', E'kamoku', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¹´', E'toshi, nen', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é«æ ¡', E'KÅkÅ', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åå¼·', E'BenkyÅ', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¤ã³ããã·ã¢', E'indoneshia', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¤§å­¦', E'daigaku', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¼«ç»', E'manga', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãã©ã', E'dorama', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è¦ã¦', E'mite', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èª­ãã§', E'yonde', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å°èª¬', E'ShÅsetsu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ææ', E'Ren''ai', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä¸ç', E'sekai', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç°ä¸ç', E'isekai', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è¨ã', E'iu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æé«', E'SaikÅ', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãããã¨ããããã¾ã', E'ArigatÅgozaimasu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('éä¿¡', E'haishin', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¯æã', E'kawaii', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å®æ³', E'JikkyÅ', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã³ã¹ãã¬', E'kosupure', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã©ã¤ã', E'raibu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è² åµ', E'fusai', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç½', E'shiro', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç½ã', E'shiroi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é»ã', E'kuroi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é»', E'kuro', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¬²æ ', E'YokubÅ', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES (' å¸æ', E'KibÅ', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('äººç', E'jinsei', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('çµãã', E'owari', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¯ã­ãã¯ã«', E'kuronikuru', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¬ãã', E'UreshÄ«', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¨ãããã', E'Toriaezu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æãã¾ã', E'omoimasu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¯å­', E'musuko', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç§', E'watashi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åå', E'namae', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è¦ãã¦', E'oboete', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è±èª', E'eigo', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åãããªã', E'wakaranai', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãã©', E'kedo', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¤å½äºº', E'gaikokujin', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¤äºº', E'gaijin', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¤å½', E'gaikoku', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ°ããã', E'ki ga suru', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å®å®äºº', E'UchÅ«jin', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å®å®', E'UchÅ«', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç¼', E'Åkami', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¨ãã§ããªã', E'tondemonai', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¬å½ã«', E'honto ni', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è', E'kusa', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èªçæ¥', E'TanjÅbi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æã', E'kanji', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¾æ¥', E'gojitsu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä»å­£', E'konki', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä»æ', E'konki', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ©ã', E'hayaku', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¹ãã¾ãã¦', E'aratamemashite', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è¯ã', E'yoi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ²', E'kyoku', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('äººé', E'ningen', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èªå', E'jibun', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä¼¼ã', E'nita', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æã', E'mottomo', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æµæ¾å¿', E'tekigaishin', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ææ¥', E'ashita', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¾é', E'hÅsÅ', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãæä¼ã', E'otetsudai', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¥ã¦', E'kite', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¥½ã', E'tanoshi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ', E'fuku', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä»å', E'konkai', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å°ã', E'sukoshi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä¸æ', E'JÅzu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ããã¦', E'soshite', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æå¾', E'saigo', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ©é', E'banshaku', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä¸æã', E'umai', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãå§«æ§', E'ohimesama', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãæ©å«ã ã£ã', E'gokigendatta', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('çµå§', E'ShÅ«shi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¤ã³ã¿ã¼ããã', E'IntÄnetto', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å£®çµ¶ãª', E'SÅzetsuna', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ­»é', E'ShitÅ', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãç²ãæ§ã§ãã', E'otsukaresamadeshita', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç²ã', E'tsukare', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è¶é£ã', E'muzukashi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è²ã', E'iroiro', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('çªæ', E'totsugeki', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¤ãã£ã¦', E'kawatte', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä¸­èº«', E'nakami', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç©ºã£ã½', E'karappo', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¯ãªã', E'nenai', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä¸ç·ã«', E'issho ni', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¯ãã', E'neyou', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ', E'asa', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãããã¿', E'oyasumi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æãã¦', E'oshiete', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('çé¢', E'ByÅin', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¥ãã§', E'isoide', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å­£ç¯', E'kisetsu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãè¹', E'onaka', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å', E'usagi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ°ããª', E'aratana', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ', E'mura', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('çºè¦ãã', E'hakken shita', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å»æ', E'haison', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('éè«', E'zatsudan', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æè¿', E'saikin', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åºæ¥äº', E'dekigoto', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãããã', E'takusan', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç­ã', E'kotae', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('éã£ã¦ã', E'yotteru', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æç', E'kisei', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã³ã©ã', E'korabo', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãµã ã', E'samune', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('1é±é', E'i-shÅ«kan', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãä¼ã¿', E'oyasumi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä¸æ¥', E'tsuitachi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç«ææ¥', E'KayÅbi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãç¥ãã', E'oshirase', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¥å¹´', E'rainen', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å', E'hatsu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('éå¬', E'kaisai', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ±ºå®ãã¾ãã', E'kettei shimashita', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¹´å', E'nen''nai', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç®æ¨', E'MokuhyÅ', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¤¢', E'yume', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ°´æé¤¨', E'suizokukan', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã©ãã©ã', E'dondon', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å', E'kimi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èª¿å­', E'ChÅshi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æª', E'aku', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¡ã³ãã¼', E'MenbÄ', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('éå®', E'gentei', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãªã³ã©ã¤ã³', E'onrain', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('éã¹ã', E'asoberu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èã', E'kangae', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä»®ç ', E'kamin', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ°åã', E'kiai', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç©èª', E'monogatari', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è¶ãã¦', E'koete', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åè¼©', E'senpai', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ°è¡£è£', E'New costume', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ããã§ã¨ããããã¾ã', E'OmedetÅgozaimasu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¥½æ²', E'gakkyoku', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è¶æå', E'ChÅyÅ«mei', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æå', E'YÅ«mei', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¬²ãã', E'hoshii', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å ´å', E'baai', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¬¡', E'tsugi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è¡ã', E'iku', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ°å¤ã', E'kazuoku', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ°', E'kazu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¤ã', E'oku', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è¨ºå¯', E'shinsatsu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åç¥', E'kokuchi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¤§ä½', E'daitai', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æé', E'jikan', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¯è¼', E'hikaku', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¾æ©', E'taiki', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å ´æ', E'basho', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¤§äº', E'daiji', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¿ç', E'GekitsÅ«', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ææ¢ãã¦', E'gaman shite', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å£°', E'koe', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å®£ä¼', E'senden', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¥å', E'KyÅ«bo', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç¯äºº', E'han''nin', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãé£¯', E'gohan', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é£ã¹ã¦', E'tabete', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åã', E'sugoi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä½æ', E'nanji', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç«ã¦', E'tate', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãªããã¾ãã', E'naoshimashita', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ®ã£ã¦', E'totte', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åç', E'shashin', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('éå', E'UndÅ', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãè¹ç©ºãã', E'onaka suita', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èå¥®', E'KÅfun', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æå', E'KandÅ', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ææ', E'KanjÅ', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æºå', E'junbi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è²¢ç®', E'KÅken', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é·æé', E'ChÅjikan', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç', E'mina', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('éåä¼', E'UndÅkai', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é¢ç½ã', E'omoshiroi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¿ããª', E'minna', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é', E'kiri', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ©ã¿', E'nayami', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç¸è«', E'SÅdan', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã ã£ãã', E'dattara', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã©ã£ã¡', E'Dotchi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç«', E'neko', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãé¢¨å', E'ofuro', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¸¡ã', E'watasu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èãã¦', E'kiite', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('çä»ã', E'katadzute', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æä¼ã£ã¦', E'tetsudatte', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ°å±', E'shinkyo', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å®¶å·', E'kagu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è²·ãç©', E'kaimono', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãã£ã¡ã', E'metcha', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('éã', E'osoku', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('èµ·ãã¦ãã¾ã£ã', E'okite shimatta', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¤ãã«', E'tsuini', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ä¸', E'man', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãã£ã³ãã«', E'Chan''neru', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ç»é²', E'TÅroku', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ããã¨ã', E'soretomo', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ããªã', E'konai', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æ¯è²', E'keshiki', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãµã¡', E'same', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é å¼µã£ã¦', E'Ganbatte', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æªé­', E'akuma', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãªã¿ã¯', E'otaku', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¹»è¦', E'genkaku', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã ã³ ã¹', E'dansu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æææ¥', E'GetsuyÅbi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ããã«', E'hoteru', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('è¿ãã', E'mukaeru', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('éã', E'sugi', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¾ã£ãã', E'mattari', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¨å¹´', E'ShÅ«nen', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é£çµ¡', E'renraku', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åã£ã¦', E'totte', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åå', E'hanbun', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('çªå¥', E'TotsunyÅ«', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãã£ãã', E'yuttari', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('é²ãã', E'susumeru', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('åæ¥', E'senjitsu', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('å¬é', E'KÅkai', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ãªãªã¸ãã«', E'orijinaru', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('ã¤ã©ã¹ã', E'irasuto', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));
INSERT INTO "words" ("word", "translation", "created_at", "updated_at", "user_id", "techno_id") VALUES ('æã', E'kaku', NOW(), NOW(), (select id from users where email='suguruni2@gmail.com' limit 1), (select t0.id from technos as t0 inner join users as u0 on t0.user_id=u0.id where t0.techno_name='pronunciation' and u0.email='suguruni2@gmail.com' limit 1));